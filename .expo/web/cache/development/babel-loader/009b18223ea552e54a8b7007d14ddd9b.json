{"ast":null,"code":"import _object_without_properties from \"@swc/helpers/src/_object_without_properties.mjs\";\n\nvar _s = $RefreshSig$();\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { memo, forwardRef } from \"react\";\nimport Box from \"../../primitives/Box\";\nimport Text from \"../../primitives/Text\";\nimport { useFormControlContext } from \"./useFormControl\";\nimport { usePropsResolution } from \"../../../hooks/useThemeProps\";\nimport { mergeRefs } from \"../../../utils\";\nimport { combineContextAndProps } from \"../../../utils\";\n\nvar FormControlLabel = function FormControlLabel(_param, ref) {\n  var children = _param.children,\n      props = _object_without_properties(_param, [\"children\"]);\n\n  _s();\n\n  var formControlContext = useFormControlContext();\n  var combinedProps = combineContextAndProps(formControlContext, props);\n\n  var _ref = React.useRef(null);\n\n  var _ref1 = usePropsResolution(\"FormControlLabel\", combinedProps, {\n    isDisabled: combinedProps.isDisabled,\n    isReadOnly: combinedProps.isReadOnly,\n    isInvalid: combinedProps.isInvalid\n  }),\n      _astrick = _ref1._astrick,\n      resolvedProps = _object_without_properties(_ref1, [\"_astrick\"]);\n\n  var requiredAsterisk = function requiredAsterisk() {\n    return React.createElement(Text, _extends({\n      _web: {\n        accessibilityHidden: true,\n        accessibilityRole: \"presentation\"\n      }\n    }, _astrick), \"*\");\n  };\n\n  var mergedRef = mergeRefs([_ref, ref]);\n  React.useEffect(function () {\n    if (_ref.current) {\n      if (props.htmlFor) {\n        _ref.current.htmlFor = props.htmlFor;\n      } else if (resolvedProps !== null && resolvedProps !== void 0 && resolvedProps.nativeID) {\n        _ref.current.htmlFor = resolvedProps.nativeID;\n      }\n    }\n  }, [resolvedProps === null || resolvedProps === void 0 ? void 0 : resolvedProps.nativeID, props.htmlFor]);\n  return React.createElement(Box, _extends({\n    _web: {\n      accessibilityRole: \"label\"\n    }\n  }, resolvedProps, {\n    nativeID: resolvedProps === null || resolvedProps === void 0 ? void 0 : resolvedProps.labelId,\n    ref: mergedRef\n  }), children, (resolvedProps === null || resolvedProps === void 0 ? void 0 : resolvedProps.isRequired) && requiredAsterisk());\n};\n\n_s(FormControlLabel, \"JrxOL27IZo2F7G7aczliqOARvNU=\", false, function () {\n  return [useFormControlContext, usePropsResolution];\n});\n\n_c = FormControlLabel;\nexport default _c2 = memo(_c1 = forwardRef(FormControlLabel));\n\nvar _c, _c1, _c2;\n\n$RefreshReg$(_c, \"FormControlLabel\");\n$RefreshReg$(_c1, \"%default%$memo\");\n$RefreshReg$(_c2, \"%default%\");\n;\n;\n\n(function () {\n  var _a, _b;\n\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n\n      import.meta.webpackHot.accept();\n\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["D:\\codes\\Next\\pomodoro-dash\\node_modules\\native-base\\lib\\module\\components\\composites\\FormControl\\FormControlLabel.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","memo","forwardRef","Box","Text","useFormControlContext","usePropsResolution","mergeRefs","combineContextAndProps","FormControlLabel","children","props","ref","formControlContext","combinedProps","_ref","useRef","_astrick","resolvedProps","isDisabled","isReadOnly","isInvalid","requiredAsterisk","createElement","_web","accessibilityHidden","accessibilityRole","mergedRef","useEffect","current","htmlFor","nativeID","labelId","isRequired"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { memo, forwardRef } from 'react';\nimport Box from '../../primitives/Box';\nimport Text from '../../primitives/Text';\nimport { useFormControlContext } from './useFormControl';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { mergeRefs } from '../../../utils';\nimport { combineContextAndProps } from '../../../utils';\n\nconst FormControlLabel = ({\n  children,\n  ...props\n}, ref) => {\n  const formControlContext = useFormControlContext();\n  const combinedProps = combineContextAndProps(formControlContext, props);\n\n  const _ref = React.useRef(null);\n\n  const {\n    _astrick,\n    ...resolvedProps\n  } = usePropsResolution('FormControlLabel', combinedProps, {\n    isDisabled: combinedProps.isDisabled,\n    isReadOnly: combinedProps.isReadOnly,\n    isInvalid: combinedProps.isInvalid // isRequired: combinedProps.isRequired,\n\n  });\n\n  const requiredAsterisk = () => /*#__PURE__*/React.createElement(Text, _extends({\n    _web: {\n      accessibilityHidden: true,\n      //@ts-ignore\n      accessibilityRole: 'presentation'\n    }\n  }, _astrick), \"*\");\n\n  const mergedRef = mergeRefs([_ref, ref]);\n  React.useEffect(() => {\n    if (_ref.current) {\n      // RN web doesn't support htmlFor for Label element yet\n      if (props.htmlFor) {\n        _ref.current.htmlFor = props.htmlFor;\n      } else if (resolvedProps !== null && resolvedProps !== void 0 && resolvedProps.nativeID) {\n        _ref.current.htmlFor = resolvedProps.nativeID;\n      }\n    }\n  }, [resolvedProps === null || resolvedProps === void 0 ? void 0 : resolvedProps.nativeID, props.htmlFor]);\n  return /*#__PURE__*/React.createElement(Box, _extends({\n    _web: {\n      //@ts-ignore\n      accessibilityRole: 'label'\n    }\n  }, resolvedProps, {\n    nativeID: resolvedProps === null || resolvedProps === void 0 ? void 0 : resolvedProps.labelId,\n    ref: mergedRef\n  }), children, (resolvedProps === null || resolvedProps === void 0 ? void 0 : resolvedProps.isRequired) && requiredAsterisk());\n};\n\nexport default /*#__PURE__*/memo( /*#__PURE__*/forwardRef(FormControlLabel));\n//# sourceMappingURL=FormControlLabel.js.map"]},"metadata":{},"sourceType":"module"}