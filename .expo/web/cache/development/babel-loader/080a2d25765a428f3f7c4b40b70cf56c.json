{"ast":null,"code":"import createPrefixer from \"inline-style-prefixer/lib/createPrefixer\";\nimport staticData from \"./static\";\nvar prefixAll = createPrefixer(staticData);\nexport var prefixInlineStyles = function prefixInlineStyles(style) {\n  var prefixedStyles = prefixAll(style);\n  Object.keys(prefixedStyles).forEach(function (prop) {\n    var value = prefixedStyles[prop];\n\n    if (Array.isArray(value)) {\n      prefixedStyles[prop] = value[value.length - 1];\n    }\n  });\n  return prefixedStyles;\n};\nexport default prefixAll;","map":{"version":3,"sources":["D:\\codes\\Next\\pomodoro-dash\\node_modules\\react-native-web\\dist\\modules\\prefixStyles\\index.js"],"names":["createPrefixer","staticData","prefixAll","prefixInlineStyles","style","prefixedStyles","Object","keys","forEach","prop","value","Array","isArray","length"],"mappings":"AAQA,OAAOA,cAAP,MAA2B,0CAA3B;AACA,OAAOC,UAAP,MAAuB,UAAvB;AACA,IAAIC,SAAS,GAAGF,cAAc,CAACC,UAAD,CAA9B;AACA,OAAO,IAAIE,kBAAkB,GAAG,SAASA,kBAAT,CAA4BC,KAA5B,EAAmC;EACjE,IAAIC,cAAc,GAAGH,SAAS,CAACE,KAAD,CAA9B;EAGAE,MAAM,CAACC,IAAPD,CAAYD,cAAZC,EAA4BE,OAA5BF,CAAoC,UAAUG,IAAV,EAAgB;IAClD,IAAIC,KAAK,GAAGL,cAAc,CAACI,IAAD,CAA1B;;IAEA,IAAIE,KAAK,CAACC,OAAND,CAAcD,KAAdC,CAAJ,EAA0B;MACxBN,cAAc,CAACI,IAAD,CAAdJ,GAAuBK,KAAK,CAACA,KAAK,CAACG,MAANH,GAAe,CAAhB,CAA5BL;IACD;EACF,CANDC;EAOA,OAAOD,cAAP;AACD,CAZM;AAaP,eAAeH,SAAf","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport createPrefixer from 'inline-style-prefixer/lib/createPrefixer';\nimport staticData from './static';\nvar prefixAll = createPrefixer(staticData);\nexport var prefixInlineStyles = function prefixInlineStyles(style) {\n  var prefixedStyles = prefixAll(style); // React@15 removed undocumented support for fallback values in\n  // inline-styles. Revert array values to the standard CSS value\n\n  Object.keys(prefixedStyles).forEach(function (prop) {\n    var value = prefixedStyles[prop];\n\n    if (Array.isArray(value)) {\n      prefixedStyles[prop] = value[value.length - 1];\n    }\n  });\n  return prefixedStyles;\n};\nexport default prefixAll;"]},"metadata":{},"sourceType":"module"}