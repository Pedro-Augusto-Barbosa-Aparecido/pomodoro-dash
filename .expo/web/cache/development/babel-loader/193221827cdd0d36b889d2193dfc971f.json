{"ast":null,"code":"import get from \"lodash.get\";\nimport isEmpty from \"lodash.isempty\";\nimport Color from \"tinycolor2\";\nexport function mode(light, dark) {\n  return function (props) {\n    return props.colorMode === \"dark\" ? dark : light;\n  };\n}\nexport var transparentize = function transparentize(color, opacity) {\n  return function (theme) {\n    var raw = getColor(theme, color);\n    return Color(raw).setAlpha(opacity).toRgbString();\n  };\n};\nexport var getColor = function getColor(theme, color, fallback) {\n  var hex = get(theme, \"colors.\".concat(color), color);\n  var isValid = Color(hex).isValid();\n  return isValid ? hex : fallback;\n};\nexport var tone = function tone(color) {\n  return function (theme) {\n    var hex = getColor(theme, color);\n    var isDark = Color(hex).isDark();\n    return isDark ? \"dark\" : \"light\";\n  };\n};\nexport var isDark = function isDark(color) {\n  return function (theme) {\n    return tone(color)(theme) === \"dark\";\n  };\n};\nexport var isLight = function isLight(color) {\n  return function (theme) {\n    return tone(color)(theme) === \"light\";\n  };\n};\nexport function randomColor(opts) {\n  var fallback = Color.random().toHexString();\n\n  if (!opts || isEmpty(opts)) {\n    return fallback;\n  }\n\n  if (opts.string && opts.colors) {\n    return randomColorFromList(opts.string, opts.colors);\n  }\n\n  if (opts.string && !opts.colors) {\n    return randomColorFromString(opts.string);\n  }\n\n  if (opts.colors && !opts.string) {\n    return randomFromList(opts.colors);\n  }\n\n  return fallback;\n}\n\nfunction randomFromList(list) {\n  return list[Math.floor(Math.random() * list.length)];\n}\n\nfunction randomColorFromList(str, list) {\n  var index = 0;\n  if (str.length === 0) return list[0];\n\n  for (var i = 0; i < str.length; i++) {\n    index = str.charCodeAt(i) + ((index << 5) - index);\n    index = index & index;\n  }\n\n  index = (index % list.length + list.length) % list.length;\n  return list[index];\n}\n\nfunction randomColorFromString(str) {\n  var hash = 0;\n  if (str.length === 0) return hash.toString();\n\n  for (var i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    hash = hash & hash;\n  }\n\n  var color = \"#\";\n\n  for (var j = 0; j < 3; j++) {\n    var value = hash >> j * 8 & 255;\n    color += (\"00\" + value.toString(16)).substr(-2);\n  }\n\n  return color;\n}\n\n;\n;\n\n(function () {\n  var _a, _b;\n\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n\n      import.meta.webpackHot.accept();\n\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["D:\\codes\\Next\\pomodoro-dash\\node_modules\\native-base\\lib\\module\\theme\\tools\\colors.js"],"names":["get","isEmpty","Color","mode","light","dark","props","colorMode","transparentize","color","opacity","theme","raw","getColor","setAlpha","toRgbString","fallback","hex","concat","isValid","tone","isDark","isLight","randomColor","opts","random","toHexString","string","colors","randomColorFromList","randomColorFromString","randomFromList","list","Math","floor","length","str","index","i","charCodeAt","hash","toString","j","value","substr"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,YAAhB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAO,SAASC,IAAT,CAAcC,KAAd,EAAqBC,IAArB,EAA2B;EAChC,OAAOC,UAAAA,KAAAA,EAAK;WAAIA,KAAK,CAACC,SAAND,KAAoB,MAApBA,GAA6BD,IAA7BC,GAAoCF,K;EAAK,CAAzD;AACD;AACD,OAAO,IAAMI,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAQC,OAAR,EAAe;SAAKC,UAAAA,KAAAA,EAAS;IACzD,IAAMC,GAAG,GAAGC,QAAQ,CAACF,KAAD,EAAQF,KAAR,CAApB;IACA,OAAOP,KAAK,CAACU,GAAD,CAALV,CAAWY,QAAXZ,CAAoBQ,OAApBR,EAA6Ba,WAA7Bb,EAAP;EACD,C;AAAA,CAHM;AAIP,OAAO,IAAMW,QAAQ,GAAG,SAAXA,QAAW,CAACF,KAAD,EAAQF,KAAR,EAAeO,QAAf,EAA4B;EAClD,IAAMC,GAAG,GAAGjB,GAAG,CAACW,KAAD,EAAQ,UAAUO,MAAV,CAAiBT,KAAjB,CAAR,EAAiCA,KAAjC,CAAf;EACA,IAAMU,OAAO,GAAGjB,KAAK,CAACe,GAAD,CAALf,CAAWiB,OAAXjB,EAAhB;EACA,OAAOiB,OAAO,GAAGF,GAAH,GAASD,QAAvB;AACD,CAJM;AAKP,OAAO,IAAMI,IAAI,GAAGX,SAAPW,IAAOX,CAAAA,KAAAA,EAAK;SAAIE,UAAAA,KAAAA,EAAS;IACpC,IAAMM,GAAG,GAAGJ,QAAQ,CAACF,KAAD,EAAQF,KAAR,CAApB;IACA,IAAMY,MAAM,GAAGnB,KAAK,CAACe,GAAD,CAALf,CAAWmB,MAAXnB,EAAf;IACA,OAAOmB,MAAM,GAAG,MAAH,GAAY,OAAzB;EACD,C;AAAA,CAJM;AAKP,OAAO,IAAMA,MAAM,GAAGZ,SAATY,MAASZ,CAAAA,KAAAA,EAAK;SAAIE,UAAAA,KAAAA,EAAK;WAAIS,IAAI,CAACX,KAAD,CAAJW,CAAYT,KAAZS,MAAuB,M;EAAM,C;AAAA,CAA9D;AACP,OAAO,IAAME,OAAO,GAAGb,SAAVa,OAAUb,CAAAA,KAAAA,EAAK;SAAIE,UAAAA,KAAAA,EAAK;WAAIS,IAAI,CAACX,KAAD,CAAJW,CAAYT,KAAZS,MAAuB,O;EAAO,C;AAAA,CAAhE;AACP,OAAO,SAASG,WAAT,CAAqBC,IAArB,EAA2B;EAChC,IAAMR,QAAQ,GAAGd,KAAK,CAACuB,MAANvB,GAAewB,WAAfxB,EAAjB;;EAEA,IAAI,CAACsB,IAAD,IAASvB,OAAO,CAACuB,IAAD,CAApB,EAA4B;IAC1B,OAAOR,QAAP;EACD;;EAED,IAAIQ,IAAI,CAACG,MAALH,IAAeA,IAAI,CAACI,MAAxB,EAAgC;IAC9B,OAAOC,mBAAmB,CAACL,IAAI,CAACG,MAAN,EAAcH,IAAI,CAACI,MAAnB,CAA1B;EACD;;EAED,IAAIJ,IAAI,CAACG,MAALH,IAAe,CAACA,IAAI,CAACI,MAAzB,EAAiC;IAC/B,OAAOE,qBAAqB,CAACN,IAAI,CAACG,MAAN,CAA5B;EACD;;EAED,IAAIH,IAAI,CAACI,MAALJ,IAAe,CAACA,IAAI,CAACG,MAAzB,EAAiC;IAC/B,OAAOI,cAAc,CAACP,IAAI,CAACI,MAAN,CAArB;EACD;;EAED,OAAOZ,QAAP;AACD;;AAED,SAASe,cAAT,CAAwBC,IAAxB,EAA8B;EAC5B,OAAOA,IAAI,CAACC,IAAI,CAACC,KAALD,CAAWA,IAAI,CAACR,MAALQ,KAAgBD,IAAI,CAACG,MAAhCF,CAAD,CAAX;AACD;;AAED,SAASJ,mBAAT,CAA6BO,GAA7B,EAAkCJ,IAAlC,EAAwC;EACtC,IAAIK,KAAK,GAAG,CAAZ;EACA,IAAID,GAAG,CAACD,MAAJC,KAAe,CAAnB,EAAsB,OAAOJ,IAAI,CAAC,CAAD,CAAX;;EAEtB,KAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAAG,CAACD,MAAxB,EAAgCG,CAAC,EAAjC,EAAqC;IACnCD,KAAK,GAAGD,GAAG,CAACG,UAAJH,CAAeE,CAAfF,KAAqB,CAACC,KAAK,IAAI,CAAV,IAAeA,KAApCD,CAARC;IACAA,KAAK,GAAGA,KAAK,GAAGA,KAAhBA;EACD;;EAEDA,KAAK,GAAG,CAACA,KAAK,GAAGL,IAAI,CAACG,MAAbE,GAAsBL,IAAI,CAACG,MAA5B,IAAsCH,IAAI,CAACG,MAAnDE;EACA,OAAOL,IAAI,CAACK,KAAD,CAAX;AACD;;AAED,SAASP,qBAAT,CAA+BM,GAA/B,EAAoC;EAClC,IAAII,IAAI,GAAG,CAAX;EACA,IAAIJ,GAAG,CAACD,MAAJC,KAAe,CAAnB,EAAsB,OAAOI,IAAI,CAACC,QAALD,EAAP;;EAEtB,KAAK,IAAIF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAAG,CAACD,MAAxB,EAAgCG,CAAC,EAAjC,EAAqC;IACnCE,IAAI,GAAGJ,GAAG,CAACG,UAAJH,CAAeE,CAAfF,KAAqB,CAACI,IAAI,IAAI,CAAT,IAAcA,IAAnCJ,CAAPI;IACAA,IAAI,GAAGA,IAAI,GAAGA,IAAdA;EACD;;EAED,IAAI/B,KAAK,GAAG,GAAZ;;EAEA,KAAK,IAAIiC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;IAC1B,IAAMC,KAAK,GAAGH,IAAI,IAAIE,CAAC,GAAG,CAAZF,GAAgB,GAA9B;IACA/B,KAAK,IAAI,CAAC,OAAOkC,KAAK,CAACF,QAANE,CAAe,EAAfA,CAAR,EAA4BC,MAA5B,CAAmC,CAAC,CAApC,CAATnC;EACD;;EAED,OAAOA,KAAP;AACD","sourcesContent":["import get from 'lodash.get';\nimport isEmpty from 'lodash.isempty';\nimport Color from 'tinycolor2';\nexport function mode(light, dark) {\n  return props => props.colorMode === 'dark' ? dark : light;\n}\nexport const transparentize = (color, opacity) => theme => {\n  const raw = getColor(theme, color);\n  return Color(raw).setAlpha(opacity).toRgbString();\n};\nexport const getColor = (theme, color, fallback) => {\n  const hex = get(theme, \"colors.\".concat(color), color);\n  const isValid = Color(hex).isValid();\n  return isValid ? hex : fallback;\n};\nexport const tone = color => theme => {\n  const hex = getColor(theme, color);\n  const isDark = Color(hex).isDark();\n  return isDark ? 'dark' : 'light';\n};\nexport const isDark = color => theme => tone(color)(theme) === 'dark';\nexport const isLight = color => theme => tone(color)(theme) === 'light';\nexport function randomColor(opts) {\n  const fallback = Color.random().toHexString();\n\n  if (!opts || isEmpty(opts)) {\n    return fallback;\n  }\n\n  if (opts.string && opts.colors) {\n    return randomColorFromList(opts.string, opts.colors);\n  }\n\n  if (opts.string && !opts.colors) {\n    return randomColorFromString(opts.string);\n  }\n\n  if (opts.colors && !opts.string) {\n    return randomFromList(opts.colors);\n  }\n\n  return fallback;\n}\n\nfunction randomFromList(list) {\n  return list[Math.floor(Math.random() * list.length)];\n}\n\nfunction randomColorFromList(str, list) {\n  let index = 0;\n  if (str.length === 0) return list[0];\n\n  for (let i = 0; i < str.length; i++) {\n    index = str.charCodeAt(i) + ((index << 5) - index);\n    index = index & index;\n  }\n\n  index = (index % list.length + list.length) % list.length;\n  return list[index];\n}\n\nfunction randomColorFromString(str) {\n  let hash = 0;\n  if (str.length === 0) return hash.toString();\n\n  for (let i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    hash = hash & hash;\n  }\n\n  let color = '#';\n\n  for (let j = 0; j < 3; j++) {\n    const value = hash >> j * 8 & 255;\n    color += ('00' + value.toString(16)).substr(-2);\n  }\n\n  return color;\n}\n//# sourceMappingURL=colors.js.map"]},"metadata":{},"sourceType":"module"}