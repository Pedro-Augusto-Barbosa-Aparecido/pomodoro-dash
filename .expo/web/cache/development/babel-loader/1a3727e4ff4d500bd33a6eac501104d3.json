{"ast":null,"code":"import { mode } from \"../tools\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\n\nfunction getSelectionColor(props) {\n  if (Platform.OS === \"ios\") {\n    return mode(\"coolGray.800\", \"warmGray.50\")(props);\n  } else if (Platform.OS === \"android\") {\n    return mode(\"coolGray.800\", \"warmGray.50\")(props);\n  }\n}\n\nvar baseStyle = function baseStyle(props) {\n  return {\n    selectionColor: getSelectionColor(props),\n    fontFamily: \"body\",\n    p: \"2\",\n    borderRadius: \"sm\",\n    overflow: \"hidden\",\n    color: mode(\"coolGray.800\", \"warmGray.50\")(props),\n    placeholderTextColor: \"muted.400\",\n    borderColor: mode(\"muted.200\", \"gray.500\")(props),\n    _disabled: {\n      opacity: \"80\",\n      bg: mode(\"muted.100\", \"muted.700\")(props),\n      _web: {\n        disabled: true,\n        cursor: \"not-allowed\"\n      }\n    },\n    _invalid: {\n      borderColor: mode(\"danger.600\", \"danger.300\")(props)\n    },\n    _focus: {\n      borderColor: mode(\"primary.400\", \"primary.500\")(props)\n    },\n    _web: {\n      outlineWidth: \"0\",\n      overflow: \"auto\",\n      lineHeight: \"lg\",\n      outline: \"none\",\n      cursor: \"auto\"\n    },\n    _stack: {\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      overflow: \"hidden\"\n    },\n    _input: {\n      bg: \"transparent\",\n      flex: 1\n    }\n  };\n};\n\nfunction roundedStyle(props) {\n  return {\n    borderRadius: \"25\",\n    borderWidth: \"1\",\n    _hover: {\n      bg: mode(\"gray.100\", \"gray.700\")(props)\n    }\n  };\n}\n\nfunction outlineStyle(props) {\n  return {\n    borderWidth: \"1\",\n    _hover: {\n      bg: mode(\"gray.100\", \"gray.700\")(props)\n    }\n  };\n}\n\nfunction filledStyle(props) {\n  return {\n    bg: props.bg || mode(\"muted.200\", \"muted.600\")(props),\n    borderWidth: \"1\",\n    borderColor: \"transparent\",\n    _hover: {\n      bg: mode(\"muted.300\", \"muted.700\")(props)\n    }\n  };\n}\n\nfunction unstyledStyle() {\n  return {\n    borderWidth: \"0\"\n  };\n}\n\nfunction underlinedStyle() {\n  return {\n    borderRadius: \"0\",\n    borderTopWidth: \"0\",\n    borderLeftWidth: \"0\",\n    borderRightWidth: \"0\",\n    borderBottomWidth: \"1\"\n  };\n}\n\nvar variants = {\n  outline: outlineStyle,\n  underlined: underlinedStyle,\n  rounded: roundedStyle,\n  filled: filledStyle,\n  unstyled: unstyledStyle\n};\nvar sizes = {\n  \"2xl\": {\n    fontSize: \"xl\"\n  },\n  \"xl\": {\n    fontSize: \"lg\"\n  },\n  \"lg\": {\n    fontSize: \"md\"\n  },\n  \"md\": {\n    fontSize: \"sm\"\n  },\n  \"sm\": {\n    fontSize: \"xs\"\n  },\n  \"xs\": {\n    fontSize: \"2xs\"\n  }\n};\nvar defaultProps = {\n  size: \"sm\",\n  variant: \"outline\"\n};\nexport var Input = {\n  baseStyle: baseStyle,\n  defaultProps: defaultProps,\n  variants: variants,\n  sizes: sizes\n};\nexport default {};\n;\n;\n\n(function () {\n  var _a, _b;\n\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n\n      import.meta.webpackHot.accept();\n\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["D:\\codes\\Next\\pomodoro-dash\\node_modules\\native-base\\lib\\module\\theme\\v33x-theme\\components\\input.js"],"names":["mode","getSelectionColor","props","Platform","OS","baseStyle","selectionColor","fontFamily","p","borderRadius","overflow","color","placeholderTextColor","borderColor","_disabled","opacity","bg","_web","disabled","cursor","_invalid","_focus","outlineWidth","lineHeight","outline","_stack","flexDirection","alignItems","_input","flex","roundedStyle","borderWidth","_hover","outlineStyle","filledStyle","unstyledStyle","underlinedStyle","borderTopWidth","borderLeftWidth","borderRightWidth","borderBottomWidth","variants","underlined","rounded","filled","unstyled","sizes","fontSize","defaultProps","size","variant","Input"],"mappings":"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","sourcesContent":["import { mode } from '../tools';\nimport { Platform } from 'react-native';\n\nfunction getSelectionColor(props) {\n  if (Platform.OS === 'ios') {\n    return mode('coolGray.800', 'warmGray.50')(props);\n  } else if (Platform.OS === 'android') {\n    return mode('coolGray.800', 'warmGray.50')(props);\n  }\n}\n\nconst baseStyle = props => {\n  // const { primary } = props.theme.colors;\n  // Todo: Resolve boxShadow Color or Provide some alternatiove prop for user to change focusRing color\n  // // Todo: Update to support similar focusRing on iOS , Android and Web\n  // const focusRing =\n  //   Platform.OS === 'web'\n  //     ? {\n  //         boxShadow:\n  //           props.variant !== 'underlined'\n  //             ? `${primary[400]} 0px 0px 0px 1px`\n  //             : `${primary[400]} 0px 1px 0px 0px`,\n  //         zIndex: 1,\n  //       }\n  //     : {\n  //         // boxShadow: `${useToken('colors', ['primary.400'])} 0px 0px 0px 1px`,\n  //       };\n  return {\n    selectionColor: getSelectionColor(props),\n    fontFamily: 'body',\n    p: '2',\n    borderRadius: 'sm',\n    overflow: 'hidden',\n    color: mode('coolGray.800', 'warmGray.50')(props),\n    placeholderTextColor: 'muted.400',\n    borderColor: mode('muted.200', 'gray.500')(props),\n    _disabled: {\n      opacity: '80',\n      bg: mode('muted.100', 'muted.700')(props),\n      _web: {\n        disabled: true,\n        cursor: 'not-allowed'\n      }\n    },\n    _invalid: {\n      borderColor: mode('danger.600', 'danger.300')(props)\n    },\n    _focus: {\n      borderColor: mode('primary.400', 'primary.500')(props)\n    },\n    _web: {\n      outlineWidth: '0',\n      overflow: 'auto',\n      lineHeight: 'lg',\n      // Todo: Move to _web inside size so that sm and xs don't have this much height\n      outline: 'none',\n      cursor: 'auto'\n    },\n    _stack: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      // justifyContent: 'space-between',\n      overflow: 'hidden'\n    },\n    _input: {\n      bg: 'transparent',\n      flex: 1\n    }\n  };\n};\n\nfunction roundedStyle(props) {\n  return {\n    borderRadius: '25',\n    borderWidth: '1',\n    _hover: {\n      bg: mode('gray.100', 'gray.700')(props)\n    }\n  };\n}\n\nfunction outlineStyle(props) {\n  return {\n    borderWidth: '1',\n    _hover: {\n      bg: mode('gray.100', 'gray.700')(props)\n    }\n  };\n}\n\nfunction filledStyle(props) {\n  return {\n    bg: props.bg || mode('muted.200', 'muted.600')(props),\n    borderWidth: '1',\n    borderColor: 'transparent',\n    _hover: {\n      bg: mode('muted.300', 'muted.700')(props)\n    }\n  };\n}\n\nfunction unstyledStyle() {\n  return {\n    borderWidth: '0'\n  };\n}\n\nfunction underlinedStyle() {\n  return {\n    borderRadius: '0',\n    borderTopWidth: '0',\n    borderLeftWidth: '0',\n    borderRightWidth: '0',\n    borderBottomWidth: '1'\n  };\n}\n\nconst variants = {\n  outline: outlineStyle,\n  underlined: underlinedStyle,\n  rounded: roundedStyle,\n  filled: filledStyle,\n  unstyled: unstyledStyle\n};\nconst sizes = {\n  '2xl': {\n    fontSize: 'xl'\n  },\n  'xl': {\n    fontSize: 'lg'\n  },\n  'lg': {\n    fontSize: 'md'\n  },\n  'md': {\n    fontSize: 'sm'\n  },\n  'sm': {\n    fontSize: 'xs'\n  },\n  'xs': {\n    fontSize: '2xs'\n  }\n};\nconst defaultProps = {\n  size: 'sm',\n  variant: 'outline'\n}; // Input\n\nexport const Input = {\n  baseStyle,\n  defaultProps,\n  variants,\n  sizes\n};\nexport default {};\n//# sourceMappingURL=input.js.map"]},"metadata":{},"sourceType":"module"}