{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useResponsiveSSRProps = useResponsiveSSRProps;\n\nvar _react = require(\"react\");\n\nvar _useTheme = require(\"../hooks/useTheme\");\n\nvar _NativeBaseContext = require(\"../core/NativeBaseContext\");\n\nvar _tools = require(\"../theme/tools\");\n\nfunction useResponsiveSSRProps(incomingProps) {\n  var _ref = (0, _react.useState)(false),\n      _ref2 = _slicedToArray(_ref, 2),\n      modified = _ref2[0],\n      setModified = _ref2[1];\n\n  var theme = (0, _useTheme.useTheme)();\n  var responsivePropsExists = (0, _tools.isResponsiveAnyProp)(incomingProps, theme);\n  var isSSR = (0, _NativeBaseContext.useNativeBaseConfig)(\"useBreakpointResolvedProps\").isSSR;\n  var modifiedProps = incomingProps;\n\n  if (responsivePropsExists && isSSR && !modified) {\n    modifiedProps = _objectSpread(_objectSpread({}, modifiedProps), {}, {\n      key: Math.random()\n    });\n  }\n\n  (0, _react.useEffect)(function () {\n    if (responsivePropsExists && isSSR) {\n      setModified(true);\n    }\n  }, [responsivePropsExists, isSSR]);\n  return modifiedProps;\n}","map":{"version":3,"sources":["D:\\codes\\Next\\pomodoro-dash\\node_modules\\native-base\\lib\\commonjs\\hooks\\useResponsiveSSRProps.js"],"names":["Object","defineProperty","exports","value","useResponsiveSSRProps","_react","require","_useTheme","_NativeBaseContext","_tools","incomingProps","modified","setModified","useState","theme","useTheme","responsivePropsExists","isResponsiveAnyProp","isSSR","useNativeBaseConfig","modifiedProps","key","Math","random","useEffect"],"mappings":"AAAA;;;;;;;;;;AAEAA,MAAM,CAACC,cAAPD,CAAsBE,OAAtBF,EAA+B,YAA/BA,EAA6C;EAC3CG,KAAK,EAAE;AADoC,CAA7CH;AAGAE,OAAO,CAACE,qBAARF,GAAgCE,qBAAhCF;;AAEA,IAAIG,MAAM,GAAGC,OAAO,CAAC,OAAD,CAApB;;AAEA,IAAIC,SAAS,GAAGD,OAAO,CAAC,mBAAD,CAAvB;;AAEA,IAAIE,kBAAkB,GAAGF,OAAO,CAAC,2BAAD,CAAhC;;AAEA,IAAIG,MAAM,GAAGH,OAAO,CAAC,gBAAD,CAApB;;AAEA,SAASF,qBAAT,CAA+BM,aAA/B,EAA8C;EAC5C,WAAiC,CAAA,GAAGL,MAAM,CAACQ,QAAV,EAAoB,KAApB,CAAjC;EAAA;EAAA,IAAOF,QAAP;EAAA,IAAiBC,WAAjB;;EACA,IAAME,KAAK,GAAI,CAAA,GAAGP,SAAS,CAACQ,QAAb,GAAf;EACA,IAAMC,qBAAqB,GAAI,CAAA,GAAGP,MAAM,CAACQ,mBAAV,EAA+BP,aAA/B,EAA8CI,KAA9C,CAA/B;EACA,IAAMI,KAAK,GAAI,CAAA,GAAGV,kBAAkB,CAACW,mBAAtB,EAA2C,4BAA3C,EAAyED,KAAxF;EACA,IAAIE,aAAa,GAAGV,aAApB;;EAEA,IAAIM,qBAAqB,IAAIE,KAAzBF,IAAkC,CAACL,QAAvC,EAAiD;IAC/CS,aAAa,mCAAQA,aAAR;MACXC,GAAG,EAAEC,IAAI,CAACC,MAALD;IADM,EAAbF;EAGD;;EAEA,CAAA,GAAGf,MAAM,CAACmB,SAAV,EAAqB,YAAM;IAC1B,IAAIR,qBAAqB,IAAIE,KAA7B,EAAoC;MAClCN,WAAW,CAAC,IAAD,CAAXA;IACD;EACF,CAJA,EAIE,CAACI,qBAAD,EAAwBE,KAAxB,CAJF;EAKD,OAAOE,aAAP;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useResponsiveSSRProps = useResponsiveSSRProps;\n\nvar _react = require(\"react\");\n\nvar _useTheme = require(\"../hooks/useTheme\");\n\nvar _NativeBaseContext = require(\"../core/NativeBaseContext\");\n\nvar _tools = require(\"../theme/tools\");\n\nfunction useResponsiveSSRProps(incomingProps) {\n  const [modified, setModified] = (0, _react.useState)(false);\n  const theme = (0, _useTheme.useTheme)();\n  const responsivePropsExists = (0, _tools.isResponsiveAnyProp)(incomingProps, theme);\n  const isSSR = (0, _NativeBaseContext.useNativeBaseConfig)('useBreakpointResolvedProps').isSSR;\n  let modifiedProps = incomingProps;\n\n  if (responsivePropsExists && isSSR && !modified) {\n    modifiedProps = { ...modifiedProps,\n      key: Math.random()\n    };\n  }\n\n  (0, _react.useEffect)(() => {\n    if (responsivePropsExists && isSSR) {\n      setModified(true);\n    }\n  }, [responsivePropsExists, isSSR]);\n  return modifiedProps;\n}\n//# sourceMappingURL=useResponsiveSSRProps.js.map"]},"metadata":{},"sourceType":"script"}