{"ast":null,"code":"import _object_spread from \"@swc/helpers/src/_object_spread.mjs\";\nimport _object_spread_props from \"@swc/helpers/src/_object_spread_props.mjs\";\nimport _object_without_properties from \"@swc/helpers/src/_object_without_properties.mjs\";\nimport _sliced_to_array from \"@swc/helpers/src/_sliced_to_array.mjs\";\n\nvar _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useThemeProps } from \"../../../hooks\";\nimport { useFormControlContext } from \"../FormControl\";\nimport { NumberInputContext } from \"./Context\";\nimport Box from \"../../primitives/Box\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\n\nvar NumberInput = function NumberInput(_param, ref) {\n  var children = _param.children,\n      props = _object_without_properties(_param, [\"children\"]);\n\n  _s();\n\n  var _ref = useThemeProps(\"NumberInput\", props),\n      defaultValue = _ref.defaultValue,\n      keepWithinRange = _ref.keepWithinRange,\n      value = _ref.value,\n      min = _ref.min,\n      max = _ref.max,\n      onChange = _ref.onChange,\n      newProps = _object_without_properties(_ref, [\"defaultValue\", \"keepWithinRange\", \"value\", \"min\", \"max\", \"onChange\"]);\n\n  var formControlContext = useFormControlContext();\n\n  var _$ref = _sliced_to_array(React.useState(parseInt(value || defaultValue, 10)), 2),\n      numberInputValue = _$ref[0],\n      setNumberInputValue = _$ref[1];\n\n  var _$ref1 = _sliced_to_array(React.useState(null), 2),\n      numberInputStepper = _$ref1[0],\n      setNumberInputStepper = _$ref1[1];\n\n  var handleChange = function handleChange(newValue) {\n    var temp = newValue;\n    setNumberInputValue(temp);\n\n    if (keepWithinRange) {\n      if (newValue < min) setNumberInputValue(min);else if (newValue > max) setNumberInputValue(max);\n    }\n\n    onChange && onChange(temp);\n  };\n\n  var handleChangeWithoutCheck = function handleChangeWithoutCheck(newValue) {\n    var temp = newValue;\n    setNumberInputValue(temp);\n  };\n\n  React.useEffect(function () {\n    if (value !== undefined && value != numberInputValue) setNumberInputValue(value);\n  }, [value, numberInputValue, setNumberInputValue]);\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return React.createElement(Box, {\n    ref: ref\n  }, React.createElement(NumberInputContext.Provider, {\n    value: _object_spread_props(_object_spread({}, formControlContext, newProps), {\n      min: min,\n      max: max,\n      handleChange: handleChange,\n      handleChangeWithoutCheck: handleChangeWithoutCheck,\n      numberInputValue: numberInputValue,\n      numberInputStepper: numberInputStepper,\n      setNumberInputStepper: setNumberInputStepper,\n      isControlled: value !== undefined\n    })\n  }, children));\n};\n\n_s(NumberInput, \"ETlYEvetwc5K9CgorXFXTkrrc/k=\", false, function () {\n  return [useThemeProps, useFormControlContext, useHasResponsiveProps];\n});\n\n_c = NumberInput;\nexport default _c2 = React.memo(_c1 = React.forwardRef(NumberInput));\n\nvar _c, _c1, _c2;\n\n$RefreshReg$(_c, \"NumberInput\");\n$RefreshReg$(_c1, \"%default%$React.memo\");\n$RefreshReg$(_c2, \"%default%\");\n;\n;\n\n(function () {\n  var _a, _b;\n\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n\n      import.meta.webpackHot.accept();\n\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["D:\\codes\\Next\\pomodoro-dash\\node_modules\\native-base\\lib\\module\\components\\composites\\NumberInput\\NumberInput.js"],"names":["React","useThemeProps","useFormControlContext","NumberInputContext","Box","useHasResponsiveProps","NumberInput","children","props","ref","defaultValue","keepWithinRange","value","min","max","onChange","newProps","formControlContext","numberInputValue","setNumberInputValue","useState","parseInt","numberInputStepper","setNumberInputStepper","handleChange","newValue","temp","handleChangeWithoutCheck","useEffect","undefined","createElement","Provider","isControlled","memo","forwardRef"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useThemeProps } from '../../../hooks';\nimport { useFormControlContext } from '../FormControl';\nimport { NumberInputContext } from './Context';\nimport Box from '../../primitives/Box';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst NumberInput = ({\n  children,\n  ...props\n}, ref) => {\n  const {\n    defaultValue,\n    keepWithinRange,\n    value,\n    min,\n    max,\n    onChange,\n    ...newProps\n  } = useThemeProps('NumberInput', props);\n  const formControlContext = useFormControlContext();\n  const [numberInputValue, setNumberInputValue] = React.useState(parseInt(value || defaultValue, 10));\n  const [numberInputStepper, setNumberInputStepper] = React.useState(null);\n\n  const handleChange = newValue => {\n    const temp = newValue;\n    setNumberInputValue(temp);\n\n    if (keepWithinRange) {\n      if (newValue < min) setNumberInputValue(min);else if (newValue > max) setNumberInputValue(max);\n    } //NOTE: only calling onChange on stepper click or blur event of input.\n\n\n    onChange && onChange(temp);\n  };\n\n  const handleChangeWithoutCheck = newValue => {\n    const temp = newValue;\n    setNumberInputValue(temp);\n  };\n\n  React.useEffect(() => {\n    if (value !== undefined && value != numberInputValue) setNumberInputValue(value);\n  }, [value, numberInputValue, setNumberInputValue]); //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(Box, {\n    ref: ref\n  }, /*#__PURE__*/React.createElement(NumberInputContext.Provider, {\n    value: { ...formControlContext,\n      ...newProps,\n      min,\n      max,\n      handleChange,\n      handleChangeWithoutCheck,\n      numberInputValue,\n      numberInputStepper,\n      setNumberInputStepper,\n      isControlled: value !== undefined\n    }\n  }, children));\n};\n\nexport default /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(NumberInput));\n//# sourceMappingURL=NumberInput.js.map"]},"metadata":{},"sourceType":"module"}