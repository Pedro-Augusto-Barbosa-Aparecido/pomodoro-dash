{"ast":null,"code":"var accessibilityRoleToWebRole = {\n  adjustable: \"slider\",\n  button: \"button\",\n  header: \"heading\",\n  image: \"img\",\n  imagebutton: null,\n  keyboardkey: null,\n  label: null,\n  link: \"link\",\n  none: \"presentation\",\n  search: \"search\",\n  summary: \"region\",\n  text: null\n};\n\nvar propsToAriaRole = function propsToAriaRole(_ref) {\n  var accessibilityRole = _ref.accessibilityRole;\n\n  if (accessibilityRole) {\n    var inferredRole = accessibilityRoleToWebRole[accessibilityRole];\n\n    if (inferredRole !== null) {\n      return inferredRole || accessibilityRole;\n    }\n  }\n};\n\nexport default propsToAriaRole;\n;\n;\n\n(function () {\n  var _a, _b;\n\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n\n      import.meta.webpackHot.accept();\n\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["D:\\codes\\Next\\pomodoro-dash\\node_modules\\react-native-web\\dist\\modules\\AccessibilityUtil\\propsToAriaRole.js"],"names":["accessibilityRoleToWebRole","adjustable","button","header","image","imagebutton","keyboardkey","label","link","none","search","summary","text","propsToAriaRole","_ref","accessibilityRole","inferredRole"],"mappings":"AAQA,IAAIA,0BAA0B,GAAG;EAC/BC,UAAU,EAAE,QADmB;EAE/BC,MAAM,EAAE,QAFuB;EAG/BC,MAAM,EAAE,SAHuB;EAI/BC,KAAK,EAAE,KAJwB;EAK/BC,WAAW,EAAE,IALkB;EAM/BC,WAAW,EAAE,IANkB;EAO/BC,KAAK,EAAE,IAPwB;EAQ/BC,IAAI,EAAE,MARyB;EAS/BC,IAAI,EAAE,cATyB;EAU/BC,MAAM,EAAE,QAVuB;EAW/BC,OAAO,EAAE,QAXsB;EAY/BC,IAAI,EAAE;AAZyB,CAAjC;;AAeA,IAAIC,eAAe,GAAG,SAASA,eAAT,CAAyBC,IAAzB,EAA+B;EACnD,IAAIC,iBAAiB,GAAGD,IAAI,CAACC,iBAA7B;;EAEA,IAAIA,iBAAJ,EAAuB;IACrB,IAAIC,YAAY,GAAGhB,0BAA0B,CAACe,iBAAD,CAA7C;;IAEA,IAAIC,YAAY,KAAK,IAArB,EAA2B;MAEzB,OAAOA,YAAY,IAAID,iBAAvB;IACD;EACF;AACD,CAXF;;AAaA,eAAeF,eAAf","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nvar accessibilityRoleToWebRole = {\n  adjustable: 'slider',\n  button: 'button',\n  header: 'heading',\n  image: 'img',\n  imagebutton: null,\n  keyboardkey: null,\n  label: null,\n  link: 'link',\n  none: 'presentation',\n  search: 'search',\n  summary: 'region',\n  text: null\n};\n\nvar propsToAriaRole = function propsToAriaRole(_ref) {\n  var accessibilityRole = _ref.accessibilityRole;\n\n  if (accessibilityRole) {\n    var inferredRole = accessibilityRoleToWebRole[accessibilityRole];\n\n    if (inferredRole !== null) {\n      // ignore roles that don't map to web\n      return inferredRole || accessibilityRole;\n    }\n  }\n};\n\nexport default propsToAriaRole;"]},"metadata":{},"sourceType":"module"}