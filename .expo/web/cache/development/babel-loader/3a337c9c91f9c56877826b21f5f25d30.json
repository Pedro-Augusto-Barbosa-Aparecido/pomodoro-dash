{"ast":null,"code":"import _sliced_to_array from \"@swc/helpers/src/_sliced_to_array.mjs\";\n\nvar _s = $RefreshSig$();\n\nimport React from \"react\";\nexport function useDisclose(initState) {\n  _s();\n\n  var ref = _sliced_to_array(React.useState(initState || false), 2),\n      isOpen = ref[0],\n      setIsOpen = ref[1];\n\n  var onOpen = function onOpen() {\n    setIsOpen(true);\n  };\n\n  var onClose = function onClose() {\n    setIsOpen(false);\n  };\n\n  var onToggle = function onToggle() {\n    setIsOpen(!isOpen);\n  };\n\n  return {\n    isOpen: isOpen,\n    onOpen: onOpen,\n    onClose: onClose,\n    onToggle: onToggle\n  };\n}\n\n_s(useDisclose, \"/AtVE7v2sugqHhZEtDHo7whN2B4=\");\n\n;\n;\n\n(function () {\n  var _a, _b;\n\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n\n      import.meta.webpackHot.accept();\n\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["D:\\codes\\Next\\pomodoro-dash\\node_modules\\native-base\\lib\\module\\hooks\\useDisclose.js"],"names":["React","useDisclose","initState","isOpen","setIsOpen","useState","onOpen","onClose","onToggle"],"mappings":"AAAA,OAAA,gBAAA,MAAA,uCAAA;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,SAASC,WAAT,CAAqBC,SAArB,EAAgC;;;EACrC,IAA4BF,GAAkC,GAAA,gBAAA,CAAlCA,KAAK,CAACK,QAANL,CAAeE,SAAS,IAAI,KAA5BF,CAAkC,EAAA,CAAA,CAA9D;EAAA,IAAOG,MAAM,GAAeH,GAAkC,CAAjD,CAAiD,CAA9D;EAAA,IAAeI,SAAS,GAAIJ,GAAkC,CAAtC,CAAsC,CAA9D;;EAEA,IAAMM,MAAM,GAAG,SAATA,MAAS,GAAM;IACnBF,SAAS,CAAC,IAAD,CAATA;EACA,CAFF;;EAIA,IAAMG,OAAO,GAAG,SAAVA,OAAU,GAAM;IACpBH,SAAS,CAAC,KAAD,CAATA;EACA,CAFF;;EAIA,IAAMI,QAAQ,GAAG,SAAXA,QAAW,GAAM;IACrBJ,SAAS,CAAC,CAACD,MAAF,CAATC;EACA,CAFF;;EAIA,OAAO;IACLD,MAAM,EAANA,MADK;IAELG,MAAM,EAANA,MAFK;IAGLC,OAAO,EAAPA,OAHK;IAILC,QAAQ,EAARA;EAJK,CAAP;AAMD;;GArBeP,W,EAAW,8B","sourcesContent":["import React from 'react';\nexport function useDisclose(initState) {\n  const [isOpen, setIsOpen] = React.useState(initState || false);\n\n  const onOpen = () => {\n    setIsOpen(true);\n  };\n\n  const onClose = () => {\n    setIsOpen(false);\n  };\n\n  const onToggle = () => {\n    setIsOpen(!isOpen);\n  };\n\n  return {\n    isOpen,\n    onOpen,\n    onClose,\n    onToggle\n  };\n}\n//# sourceMappingURL=useDisclose.js.map"]},"metadata":{},"sourceType":"module"}