{"ast":null,"code":"var clipboardAvailable;\n\nvar Clipboard = function () {\n  var Clipboard = function Clipboard() {};\n\n  Clipboard.isAvailable = function isAvailable() {\n    if (clipboardAvailable === undefined) {\n      clipboardAvailable = typeof document.queryCommandSupported === \"function\" && document.queryCommandSupported(\"copy\");\n    }\n\n    return clipboardAvailable;\n  };\n\n  Clipboard.getString = function getString() {\n    return Promise.resolve(\"\");\n  };\n\n  Clipboard.setString = function setString(text) {\n    var success = false;\n    var body = document.body;\n\n    if (body) {\n      var node = document.createElement(\"span\");\n      node.textContent = text;\n      node.style.opacity = \"0\";\n      node.style.position = \"absolute\";\n      node.style.whiteSpace = \"pre-wrap\";\n      node.style.userSelect = \"auto\";\n      body.appendChild(node);\n      var selection = window.getSelection();\n      selection.removeAllRanges();\n      var range = document.createRange();\n      range.selectNodeContents(node);\n      selection.addRange(range);\n\n      try {\n        document.execCommand(\"copy\");\n        success = true;\n      } catch (e) {}\n\n      selection.removeAllRanges();\n      body.removeChild(node);\n    }\n\n    return success;\n  };\n\n  return Clipboard;\n}();\n\nexport { Clipboard as default };\n;\n;\n\n(function () {\n  var _a, _b;\n\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n\n      import.meta.webpackHot.accept();\n\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["D:\\codes\\Next\\pomodoro-dash\\node_modules\\react-native-web\\dist\\exports\\Clipboard\\index.js"],"names":["clipboardAvailable","Clipboard","isAvailable","undefined","document","queryCommandSupported","getString","Promise","resolve","setString","text","success","body","node","createElement","textContent","style","opacity","position","whiteSpace","userSelect","appendChild","selection","window","getSelection","removeAllRanges","range","createRange","selectNodeContents","addRange","execCommand","e","removeChild","default"],"mappings":"AASA,IAAIA,kBAAJ;;AAEA,IAAIC,SAAS,GAAgB,YAAY;MAC9BA,SAAS,GAAlB,SAASA,SAAT,GAAqB,CAAE,C;;EAEvBA,SAAS,CAACC,WAAVD,GAAwB,SAASC,WAAT,GAAuB;IAC7C,IAAIF,kBAAkB,KAAKG,SAA3B,EAAsC;MACpCH,kBAAkB,GAAG,OAAOI,QAAQ,CAACC,qBAAhB,KAA0C,UAA1C,IAAwDD,QAAQ,CAACC,qBAATD,CAA+B,MAA/BA,CAA7EJ;IACD;;IAED,OAAOA,kBAAP;EACD,CANDC;;EAQAA,SAAS,CAACK,SAAVL,GAAsB,SAASK,SAAT,GAAqB;IACzC,OAAOC,OAAO,CAACC,OAARD,CAAgB,EAAhBA,CAAP;EACD,CAFDN;;EAIAA,SAAS,CAACQ,SAAVR,GAAsB,SAASQ,SAAT,CAAmBC,IAAnB,EAAyB;IAC7C,IAAIC,OAAO,GAAG,KAAd;IACA,IAAIC,IAAI,GAAGR,QAAQ,CAACQ,IAApB;;IAEA,IAAIA,IAAJ,EAAU;MAER,IAAIC,IAAI,GAAGT,QAAQ,CAACU,aAATV,CAAuB,MAAvBA,CAAX;MACAS,IAAI,CAACE,WAALF,GAAmBH,IAAnBG;MACAA,IAAI,CAACG,KAALH,CAAWI,OAAXJ,GAAqB,GAArBA;MACAA,IAAI,CAACG,KAALH,CAAWK,QAAXL,GAAsB,UAAtBA;MACAA,IAAI,CAACG,KAALH,CAAWM,UAAXN,GAAwB,UAAxBA;MACAA,IAAI,CAACG,KAALH,CAAWO,UAAXP,GAAwB,MAAxBA;MACAD,IAAI,CAACS,WAALT,CAAiBC,IAAjBD;MAEA,IAAIU,SAAS,GAAGC,MAAM,CAACC,YAAPD,EAAhB;MACAD,SAAS,CAACG,eAAVH;MACA,IAAII,KAAK,GAAGtB,QAAQ,CAACuB,WAATvB,EAAZ;MACAsB,KAAK,CAACE,kBAANF,CAAyBb,IAAzBa;MACAJ,SAAS,CAACO,QAAVP,CAAmBI,KAAnBJ;;MAEA,IAAI;QACFlB,QAAQ,CAAC0B,WAAT1B,CAAqB,MAArBA;QACAO,OAAO,GAAG,IAAVA;MACD,CAHD,CAGE,OAAOoB,CAAP,EAAU,CAAE;;MAGdT,SAAS,CAACG,eAAVH;MACAV,IAAI,CAACoB,WAALpB,CAAiBC,IAAjBD;IACD;;IAED,OAAOD,OAAP;EACD,CA/BDV;;EAiCA,OAAOA,SAAP;AACD,CAjD4B,EAA7B;;AAmDA,SAASA,SAAS,IAAIgC,OAAtB","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nvar clipboardAvailable;\n\nvar Clipboard = /*#__PURE__*/function () {\n  function Clipboard() {}\n\n  Clipboard.isAvailable = function isAvailable() {\n    if (clipboardAvailable === undefined) {\n      clipboardAvailable = typeof document.queryCommandSupported === 'function' && document.queryCommandSupported('copy');\n    }\n\n    return clipboardAvailable;\n  };\n\n  Clipboard.getString = function getString() {\n    return Promise.resolve('');\n  };\n\n  Clipboard.setString = function setString(text) {\n    var success = false;\n    var body = document.body;\n\n    if (body) {\n      // add the text to a hidden node\n      var node = document.createElement('span');\n      node.textContent = text;\n      node.style.opacity = '0';\n      node.style.position = 'absolute';\n      node.style.whiteSpace = 'pre-wrap';\n      node.style.userSelect = 'auto';\n      body.appendChild(node); // select the text\n\n      var selection = window.getSelection();\n      selection.removeAllRanges();\n      var range = document.createRange();\n      range.selectNodeContents(node);\n      selection.addRange(range); // attempt to copy\n\n      try {\n        document.execCommand('copy');\n        success = true;\n      } catch (e) {} // remove selection and node\n\n\n      selection.removeAllRanges();\n      body.removeChild(node);\n    }\n\n    return success;\n  };\n\n  return Clipboard;\n}();\n\nexport { Clipboard as default };"]},"metadata":{},"sourceType":"module"}