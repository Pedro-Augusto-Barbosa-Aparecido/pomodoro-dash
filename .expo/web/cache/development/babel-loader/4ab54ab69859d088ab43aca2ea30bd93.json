{"ast":null,"code":"import * as React from \"react\";\nexport default function mergeRefs() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return function forwardRef(node) {\n    args.forEach(function (ref) {\n      if (ref == null) {\n        return;\n      }\n\n      if (typeof ref === \"function\") {\n        ref(node);\n        return;\n      }\n\n      if (typeof ref === \"object\") {\n        ref.current = node;\n        return;\n      }\n\n      console.error(\"mergeRefs cannot handle Refs of type boolean, number or string, received ref \" + String(ref));\n    });\n  };\n}\n;","map":{"version":3,"sources":["D:\\codes\\Next\\pomodoro-dash\\node_modules\\react-native-web\\dist\\modules\\mergeRefs\\index.js"],"names":["React","mergeRefs","_len","arguments","length","args","Array","_key","forwardRef","node","forEach","ref","current","console","error","String"],"mappings":"AAQA,OAAA,KAAYA,KAAZ,MAAuB,OAAvB;AACA,eAAe,SAASC,SAAT,GAAqB;EAClC,KAAK,IAAIC,IAAI,GAAGC,SAAS,CAACC,MAArB,EAA6BC,IAAI,GAAG,IAAIC,KAAJ,CAAUJ,IAAV,CAApC,EAAqDK,IAAI,GAAG,CAAjE,EAAoEA,IAAI,GAAGL,IAA3E,EAAiFK,IAAI,EAArF,EAAyF;IACvFF,IAAI,CAACE,IAAD,CAAJF,GAAaF,SAAS,CAACI,IAAD,CAAtBF;EACD;;EAED,OAAO,SAASG,UAAT,CAAoBC,IAApB,EAA0B;IAC/BJ,IAAI,CAACK,OAALL,CAAa,UAAUM,GAAV,EAAe;MAC1B,IAAIA,GAAG,IAAI,IAAX,EAAiB;QACf;MACD;;MAED,IAAI,OAAOA,GAAP,KAAe,UAAnB,EAA+B;QAC7BA,GAAG,CAACF,IAAD,CAAHE;QACA;MACD;;MAED,IAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;QAC3BA,GAAG,CAACC,OAAJD,GAAcF,IAAdE;QACA;MACD;;MAEDE,OAAO,CAACC,KAARD,CAAc,kFAAkFE,MAAM,CAACJ,GAAD,CAAtGE;IACD,CAhBDR;EAiBD,CAlBD;AAmBD;AAAA","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport * as React from 'react';\nexport default function mergeRefs() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return function forwardRef(node) {\n    args.forEach(function (ref) {\n      if (ref == null) {\n        return;\n      }\n\n      if (typeof ref === 'function') {\n        ref(node);\n        return;\n      }\n\n      if (typeof ref === 'object') {\n        ref.current = node;\n        return;\n      }\n\n      console.error(\"mergeRefs cannot handle Refs of type boolean, number or string, received ref \" + String(ref));\n    });\n  };\n}"]},"metadata":{},"sourceType":"module"}