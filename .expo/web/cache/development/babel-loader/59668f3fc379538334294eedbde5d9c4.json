{"ast":null,"code":"import _object_spread from \"@swc/helpers/src/_object_spread.mjs\";\nimport _object_without_properties from \"@swc/helpers/src/_object_without_properties.mjs\";\nimport _sliced_to_array from \"@swc/helpers/src/_sliced_to_array.mjs\";\nimport _to_consumable_array from \"@swc/helpers/src/_to_consumable_array.mjs\";\n\nvar _s = $RefreshSig$();\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { memo, forwardRef } from \"react\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { useToken } from \"../../../hooks\";\nimport { useFormControl } from \"../../composites/FormControl\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nimport { useHover } from \"@react-native-aria/interactions\";\nimport { extractInObject, stylingProps } from \"../../../theme/tools/utils\";\nimport { usePropsResolution } from \"../../../hooks/useThemeProps\";\nimport { mergeRefs } from \"../../../utils\";\nimport { Stack } from \"../Stack\";\nimport { makeStyledComponent } from \"../../../utils/styled\";\nimport { useResolvedFontFamily } from \"../../../hooks/useResolvedFontFamily\";\nvar StyledInput = makeStyledComponent(TextInput);\n_c = StyledInput;\n\nvar Input = function Input(_param, ref) {\n  var isHoveredProp = _param.isHovered,\n      isFocusedProp = _param.isFocused,\n      _onKeyPress = _param.onKeyPress,\n      props = _object_without_properties(_param, [\"isHovered\", \"isFocused\", \"onKeyPress\"]);\n\n  _s();\n\n  var inputProps = useFormControl({\n    isDisabled: props.isDisabled,\n    isInvalid: props.isInvalid,\n    isReadOnly: props.isReadOnly,\n    isRequired: props.isRequired,\n    nativeID: props.nativeID\n  });\n\n  var _$ref = _sliced_to_array(React.useState(false), 2),\n      isFocused = _$ref[0],\n      setIsFocused = _$ref[1];\n\n  var handleFocus = function handleFocus(focusState, callback) {\n    setIsFocused(focusState);\n    callback();\n  };\n\n  props.focusOutlineColor = useToken(\"colors\", props.focusOutlineColor);\n  props.invalidOutlineColor = useToken(\"colors\", props.invalidOutlineColor);\n\n  var _ref = React.useRef(null);\n\n  var isHovered = useHover({}, _ref).isHovered;\n  var inputThemeProps = {\n    isDisabled: inputProps.disabled,\n    isInvalid: inputProps.accessibilityInvalid,\n    isReadOnly: inputProps.accessibilityReadOnly,\n    isRequired: inputProps.required\n  };\n\n  var _ref1 = usePropsResolution(\"Input\", _object_spread({}, inputThemeProps, props), {\n    isDisabled: inputThemeProps.isDisabled,\n    isHovered: isHoveredProp || isHovered,\n    isFocused: isFocusedProp || isFocused,\n    isInvalid: inputThemeProps.isInvalid,\n    isReadOnly: inputThemeProps.isReadOnly\n  }),\n      ariaLabel = _ref1.ariaLabel,\n      accessibilityLabel = _ref1.accessibilityLabel,\n      type = _ref1.type,\n      isFullWidth = _ref1.isFullWidth,\n      isDisabled = _ref1.isDisabled,\n      isReadOnly = _ref1.isReadOnly,\n      fontFamily = _ref1.fontFamily,\n      fontWeight = _ref1.fontWeight,\n      fontStyle = _ref1.fontStyle,\n      placeholderTextColor = _ref1.placeholderTextColor,\n      selectionColor = _ref1.selectionColor,\n      underlineColorAndroid = _ref1.underlineColorAndroid,\n      InputLeftElement = _ref1.InputLeftElement,\n      InputRightElement = _ref1.InputRightElement,\n      leftElement = _ref1.leftElement,\n      rightElement = _ref1.rightElement,\n      _onFocus = _ref1.onFocus,\n      _onBlur = _ref1.onBlur,\n      wrapperRef = _ref1.wrapperRef,\n      _stack = _ref1._stack,\n      _input = _ref1._input,\n      resolvedProps = _object_without_properties(_ref1, [\"ariaLabel\", \"accessibilityLabel\", \"type\", \"isFullWidth\", \"isDisabled\", \"isReadOnly\", \"fontFamily\", \"fontWeight\", \"fontStyle\", \"placeholderTextColor\", \"selectionColor\", \"underlineColorAndroid\", \"InputLeftElement\", \"InputRightElement\", \"leftElement\", \"rightElement\", \"onFocus\", \"onBlur\", \"wrapperRef\", \"_stack\", \"_input\"]);\n\n  var _$ref1 = _sliced_to_array(extractInObject(resolvedProps, _to_consumable_array(stylingProps.margin).concat(_to_consumable_array(stylingProps.border), _to_consumable_array(stylingProps.layout), _to_consumable_array(stylingProps.flexbox), _to_consumable_array(stylingProps.position), _to_consumable_array(stylingProps.background), [\"shadow\", \"opacity\"])), 2),\n      layoutProps = _$ref1[0],\n      nonLayoutProps = _$ref1[1];\n\n  var resolvedFontFamily = useResolvedFontFamily({\n    fontFamily: fontFamily,\n    fontWeight: fontWeight !== null && fontWeight !== void 0 ? fontWeight : 400,\n    fontStyle: fontStyle !== null && fontStyle !== void 0 ? fontStyle : \"normal\"\n  });\n  var resolvedPlaceholderTextColor = useToken(\"colors\", placeholderTextColor);\n  var resolvedSelectionColor = useToken(\"colors\", selectionColor);\n  var resolvedUnderlineColorAndroid = useToken(\"colors\", underlineColorAndroid);\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return React.createElement(Stack, _extends({}, _stack, layoutProps, {\n    ref: mergeRefs([_ref, wrapperRef]),\n    isFocused: isFocused\n  }), InputLeftElement || leftElement ? InputLeftElement || leftElement : null, React.createElement(StyledInput, _extends({}, inputProps, {\n    secureTextEntry: type === \"password\",\n    accessible: true,\n    accessibilityLabel: ariaLabel || accessibilityLabel,\n    editable: isDisabled || isReadOnly ? false : true,\n    w: isFullWidth ? \"100%\" : undefined\n  }, nonLayoutProps, resolvedFontFamily, {\n    placeholderTextColor: resolvedPlaceholderTextColor,\n    selectionColor: resolvedSelectionColor,\n    underlineColorAndroid: resolvedUnderlineColorAndroid,\n    onKeyPress: function onKeyPress(e) {\n      e.persist();\n      _onKeyPress && _onKeyPress(e);\n    },\n    onFocus: function onFocus(e) {\n      handleFocus(true, _onFocus ? function () {\n        return _onFocus(e);\n      } : function () {});\n    },\n    onBlur: function onBlur(e) {\n      handleFocus(false, _onBlur ? function () {\n        return _onBlur(e);\n      } : function () {});\n    }\n  }, _input, {\n    ref: mergeRefs([ref, _ref, wrapperRef])\n  })), InputRightElement || rightElement ? InputRightElement || rightElement : null);\n};\n\n_s(Input, \"R7WA6dgfkWtgSWEwt4MCHK8H9cU=\", false, function () {\n  return [useFormControl, useToken, useToken, useHover, usePropsResolution, useResolvedFontFamily, useToken, useToken, useToken, useHasResponsiveProps];\n});\n\n_c1 = Input;\nexport default _c3 = memo(_c2 = forwardRef(Input));\n\nvar _c, _c1, _c2, _c3;\n\n$RefreshReg$(_c, \"StyledInput\");\n$RefreshReg$(_c1, \"Input\");\n$RefreshReg$(_c2, \"%default%$memo\");\n$RefreshReg$(_c3, \"%default%\");\n;\n;\n\n(function () {\n  var _a, _b;\n\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n\n      import.meta.webpackHot.accept();\n\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["D:\\codes\\Next\\pomodoro-dash\\node_modules\\native-base\\lib\\module\\components\\primitives\\Input\\Input.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","memo","forwardRef","useToken","useFormControl","useHasResponsiveProps","useHover","extractInObject","stylingProps","usePropsResolution","mergeRefs","Stack","makeStyledComponent","useResolvedFontFamily","StyledInput","TextInput","Input","isHovered","isHoveredProp","isFocused","isFocusedProp","onKeyPress","props","ref","inputProps","isDisabled","isInvalid","isReadOnly","isRequired","nativeID","setIsFocused","useState","handleFocus","focusState","callback","focusOutlineColor","invalidOutlineColor","_ref","useRef","inputThemeProps","disabled","accessibilityInvalid","accessibilityReadOnly","required","ariaLabel","accessibilityLabel","type","isFullWidth","fontFamily","fontWeight","fontStyle","placeholderTextColor","selectionColor","underlineColorAndroid","InputLeftElement","InputRightElement","leftElement","rightElement","onFocus","onBlur","wrapperRef","_stack","_input","resolvedProps","layoutProps","nonLayoutProps","resolvedFontFamily","resolvedPlaceholderTextColor","resolvedSelectionColor","resolvedUnderlineColorAndroid","createElement","secureTextEntry","accessible","editable","w","undefined","e","persist"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { memo, forwardRef } from 'react';\nimport { TextInput } from 'react-native';\nimport { useToken } from '../../../hooks';\nimport { useFormControl } from '../../composites/FormControl';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { useHover } from '@react-native-aria/interactions';\nimport { extractInObject, stylingProps } from '../../../theme/tools/utils';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { mergeRefs } from '../../../utils';\nimport { Stack } from '../Stack';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport { useResolvedFontFamily } from '../../../hooks/useResolvedFontFamily';\nconst StyledInput = makeStyledComponent(TextInput);\n\nconst Input = ({\n  isHovered: isHoveredProp,\n  isFocused: isFocusedProp,\n  onKeyPress,\n  ...props\n}, ref) => {\n  const inputProps = useFormControl({\n    isDisabled: props.isDisabled,\n    isInvalid: props.isInvalid,\n    isReadOnly: props.isReadOnly,\n    isRequired: props.isRequired,\n    nativeID: props.nativeID\n  });\n  const [isFocused, setIsFocused] = React.useState(false);\n\n  const handleFocus = (focusState, callback) => {\n    setIsFocused(focusState);\n    callback();\n  };\n  /**Converting into Hash Color Code */\n  //@ts-ignore\n\n\n  props.focusOutlineColor = useToken('colors', props.focusOutlineColor); //@ts-ignore\n\n  props.invalidOutlineColor = useToken('colors', props.invalidOutlineColor);\n\n  const _ref = React.useRef(null);\n\n  const {\n    isHovered\n  } = useHover({}, _ref);\n  const inputThemeProps = {\n    isDisabled: inputProps.disabled,\n    isInvalid: inputProps.accessibilityInvalid,\n    isReadOnly: inputProps.accessibilityReadOnly,\n    isRequired: inputProps.required\n  };\n  const {\n    ariaLabel,\n    accessibilityLabel,\n    type,\n    isFullWidth,\n    isDisabled,\n    isReadOnly,\n    fontFamily,\n    fontWeight,\n    fontStyle,\n    placeholderTextColor,\n    selectionColor,\n    underlineColorAndroid,\n    InputLeftElement,\n    InputRightElement,\n    leftElement,\n    rightElement,\n    onFocus,\n    onBlur,\n    wrapperRef,\n    _stack,\n    _input,\n    ...resolvedProps\n  } = usePropsResolution('Input', { ...inputThemeProps,\n    ...props\n  }, {\n    isDisabled: inputThemeProps.isDisabled,\n    isHovered: isHoveredProp || isHovered,\n    isFocused: isFocusedProp || isFocused,\n    isInvalid: inputThemeProps.isInvalid,\n    isReadOnly: inputThemeProps.isReadOnly\n  });\n  const [layoutProps, nonLayoutProps] = extractInObject(resolvedProps, [...stylingProps.margin, ...stylingProps.border, ...stylingProps.layout, ...stylingProps.flexbox, ...stylingProps.position, ...stylingProps.background, 'shadow', 'opacity']);\n  const resolvedFontFamily = useResolvedFontFamily({\n    fontFamily,\n    fontWeight: fontWeight !== null && fontWeight !== void 0 ? fontWeight : 400,\n    fontStyle: fontStyle !== null && fontStyle !== void 0 ? fontStyle : 'normal'\n  });\n  const resolvedPlaceholderTextColor = useToken('colors', placeholderTextColor);\n  const resolvedSelectionColor = useToken('colors', selectionColor);\n  const resolvedUnderlineColorAndroid = useToken('colors', underlineColorAndroid); //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(Stack, _extends({}, _stack, layoutProps, {\n    ref: mergeRefs([_ref, wrapperRef]),\n    isFocused: isFocused\n  }), InputLeftElement || leftElement ? InputLeftElement || leftElement : null, /*#__PURE__*/React.createElement(StyledInput, _extends({}, inputProps, {\n    secureTextEntry: type === 'password',\n    accessible: true,\n    accessibilityLabel: ariaLabel || accessibilityLabel,\n    editable: isDisabled || isReadOnly ? false : true,\n    w: isFullWidth ? '100%' : undefined\n  }, nonLayoutProps, resolvedFontFamily, {\n    placeholderTextColor: resolvedPlaceholderTextColor,\n    selectionColor: resolvedSelectionColor,\n    underlineColorAndroid: resolvedUnderlineColorAndroid,\n    onKeyPress: e => {\n      e.persist();\n      onKeyPress && onKeyPress(e);\n    },\n    onFocus: e => {\n      handleFocus(true, onFocus ? () => onFocus(e) : () => {});\n    },\n    onBlur: e => {\n      handleFocus(false, onBlur ? () => onBlur(e) : () => {});\n    }\n  }, _input, {\n    ref: mergeRefs([ref, _ref, wrapperRef])\n  })), InputRightElement || rightElement ? InputRightElement || rightElement : null);\n};\n\nexport default /*#__PURE__*/memo( /*#__PURE__*/forwardRef(Input));\n//# sourceMappingURL=Input.js.map"]},"metadata":{},"sourceType":"module"}