{"ast":null,"code":"import _sliced_to_array from \"@swc/helpers/src/_sliced_to_array.mjs\";\n\nvar _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nexport var useKeyboardBottomInset = function useKeyboardBottomInset() {\n  _s();\n\n  var ref = _sliced_to_array(React.useState(0), 2),\n      bottom = ref[0],\n      setBottom = ref[1];\n\n  var subscriptions = React.useRef([]);\n  React.useEffect(function () {\n    var onKeyboardChange = function onKeyboardChange(e) {\n      if (e.startCoordinates && e.endCoordinates.screenY <= e.startCoordinates.screenY) setBottom(e.endCoordinates.height / 2);else setBottom(0);\n    };\n\n    if (Platform.OS === \"ios\") {\n      subscriptions.current = [Keyboard.addListener(\"keyboardWillChangeFrame\", onKeyboardChange)];\n    } else {\n      subscriptions.current = [Keyboard.addListener(\"keyboardDidHide\", onKeyboardChange), Keyboard.addListener(\"keyboardDidShow\", onKeyboardChange)];\n    }\n\n    return function () {\n      subscriptions.current.forEach(function (subscription) {\n        subscription.remove();\n      });\n    };\n  }, [setBottom, subscriptions]);\n  return bottom;\n};\n\n_s(useKeyboardBottomInset, \"s9B7TcVJeBf+EetQ4OpQAEGca5s=\");\n\n;\n;\n\n(function () {\n  var _a, _b;\n\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n\n      import.meta.webpackHot.accept();\n\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["D:\\codes\\Next\\pomodoro-dash\\node_modules\\native-base\\lib\\module\\utils\\useKeyboardBottomInset.js"],"names":["React","useKeyboardBottomInset","bottom","setBottom","useState","subscriptions","useRef","useEffect","onKeyboardChange","e","startCoordinates","endCoordinates","screenY","height","Platform","OS","current","Keyboard","addListener","forEach","subscription","remove"],"mappings":"AAAA,OAAA,gBAAA,MAAA,uCAAA;;;;AAAA,OAAA,KAAYA,KAAZ,MAAuB,OAAvB;;;AAEA,OAAO,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,GAAM;;;EAC1C,IAA4BD,GAAiB,GAAA,gBAAA,CAAjBA,KAAK,CAACI,QAANJ,CAAe,CAAfA,CAAiB,EAAA,CAAA,CAA7C;EAAA,IAAOE,MAAM,GAAeF,GAAiB,CAAhC,CAAgC,CAA7C;EAAA,IAAeG,SAAS,GAAIH,GAAiB,CAArB,CAAqB,CAA7C;;EACA,IAAMK,aAAa,GAAGL,KAAK,CAACM,MAANN,CAAa,EAAbA,CAAtB;EACAA,KAAK,CAACO,SAANP,CAAgB,YAAM;QACXQ,gBAAgB,GAAzB,SAASA,gBAAT,CAA0BC,CAA1B,EAA6B;MAC3B,IAAIA,CAAC,CAACC,gBAAFD,IAAsBA,CAAC,CAACE,cAAFF,CAAiBG,OAAjBH,IAA4BA,CAAC,CAACC,gBAAFD,CAAmBG,OAAzE,EAAkFT,SAAS,CAACM,CAAC,CAACE,cAAFF,CAAiBI,MAAjBJ,GAA0B,CAA3B,CAATN,CAAlF,KAA8HA,SAAS,CAAC,CAAD,CAATA;IAC/H,C;;IAED,IAAIW,QAAQ,CAACC,EAATD,KAAgB,KAApB,EAA2B;MACzBT,aAAa,CAACW,OAAdX,GAAwB,CAACY,QAAQ,CAACC,WAATD,CAAqB,yBAArBA,EAAgDT,gBAAhDS,CAAD,CAAxBZ;IACD,CAFD,MAEO;MACLA,aAAa,CAACW,OAAdX,GAAwB,CAACY,QAAQ,CAACC,WAATD,CAAqB,iBAArBA,EAAwCT,gBAAxCS,CAAD,EAA4DA,QAAQ,CAACC,WAATD,CAAqB,iBAArBA,EAAwCT,gBAAxCS,CAA5D,CAAxBZ;IACD;;IAED,OAAO,YAAM;MACXA,aAAa,CAACW,OAAdX,CAAsBc,OAAtBd,CAA8Be,UAAAA,YAAAA,EAAgB;QAC5CA,YAAY,CAACC,MAAbD;MACD,CAFDf;IAGD,CAJD;EAKD,CAhBDL,EAgBG,CAACG,SAAD,EAAYE,aAAZ,CAhBHL;EAiBA,OAAOE,MAAP;AACD,CArBM;;GAAMD,sB,EAAsB,8B","sourcesContent":["import * as React from 'react';\nimport { Keyboard, Platform } from 'react-native';\nexport const useKeyboardBottomInset = () => {\n  const [bottom, setBottom] = React.useState(0);\n  const subscriptions = React.useRef([]);\n  React.useEffect(() => {\n    function onKeyboardChange(e) {\n      if (e.startCoordinates && e.endCoordinates.screenY <= e.startCoordinates.screenY) setBottom(e.endCoordinates.height / 2);else setBottom(0);\n    }\n\n    if (Platform.OS === 'ios') {\n      subscriptions.current = [Keyboard.addListener('keyboardWillChangeFrame', onKeyboardChange)];\n    } else {\n      subscriptions.current = [Keyboard.addListener('keyboardDidHide', onKeyboardChange), Keyboard.addListener('keyboardDidShow', onKeyboardChange)];\n    }\n\n    return () => {\n      subscriptions.current.forEach(subscription => {\n        subscription.remove();\n      });\n    };\n  }, [setBottom, subscriptions]);\n  return bottom;\n};\n//# sourceMappingURL=useKeyboardBottomInset.js.map"]},"metadata":{},"sourceType":"module"}