{"ast":null,"code":"import _object_spread from \"@swc/helpers/src/_object_spread.mjs\";\nimport _object_spread_props from \"@swc/helpers/src/_object_spread_props.mjs\";\nimport _object_without_properties from \"@swc/helpers/src/_object_without_properties.mjs\";\n\nvar _s = $RefreshSig$();\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { createContext, memo, forwardRef } from \"react\";\nimport { useCheckboxGroupState } from \"@react-stately/checkbox\";\nimport { useCheckboxGroup } from \"@react-native-aria/checkbox\";\nimport { useFormControlContext } from \"../../composites/FormControl\";\nimport Box from \"../Box\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nimport { usePropsResolution } from \"../../../hooks/useThemeProps\";\nexport var CheckboxGroupContext = createContext(null);\n\nfunction CheckboxGroup(_param, ref) {\n  var size = _param.size,\n      _checkbox = _param._checkbox,\n      colorScheme = _param.colorScheme,\n      props = _object_without_properties(_param, [\"size\", \"_checkbox\", \"colorScheme\"]);\n\n  _s();\n\n  var resolvedProps = usePropsResolution(\"CheckboxGroup\", props);\n  var children = props.children;\n  var state = useCheckboxGroupState(props);\n  var groupProps = useCheckboxGroup(_object_spread({\n    \"aria-label\": props.accessibilityLabel\n  }, props), state).groupProps;\n  var formControlContext = useFormControlContext();\n\n  if (useHasResponsiveProps(_object_spread_props(_object_spread({}, props), {\n    size: size,\n    colorScheme: colorScheme\n  }))) {\n    return null;\n  }\n\n  return React.createElement(CheckboxGroupContext.Provider, {\n    value: _object_spread_props(_object_spread({\n      size: size,\n      colorScheme: colorScheme\n    }, _checkbox, formControlContext), {\n      state: state\n    })\n  }, React.createElement(Box, _extends({}, resolvedProps, groupProps, props, {\n    ref: ref\n  }), children));\n}\n\n_s(CheckboxGroup, \"K+18dM/O/TiTkTVcKI74dPf003A=\", false, function () {\n  return [usePropsResolution, useCheckboxGroupState, useCheckboxGroup, useFormControlContext, useHasResponsiveProps];\n});\n\n_c = CheckboxGroup;\nexport default _c2 = memo(_c1 = forwardRef(CheckboxGroup));\n\nvar _c, _c1, _c2;\n\n$RefreshReg$(_c, \"CheckboxGroup\");\n$RefreshReg$(_c1, \"%default%$memo\");\n$RefreshReg$(_c2, \"%default%\");\n;\n;\n\n(function () {\n  var _a, _b;\n\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n\n      import.meta.webpackHot.accept();\n\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["D:\\codes\\Next\\pomodoro-dash\\node_modules\\native-base\\lib\\module\\components\\primitives\\Checkbox\\CheckboxGroup.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","createContext","memo","forwardRef","useCheckboxGroupState","useCheckboxGroup","useFormControlContext","Box","useHasResponsiveProps","usePropsResolution","CheckboxGroupContext","CheckboxGroup","size","_checkbox","colorScheme","props","ref","resolvedProps","children","state","groupProps","accessibilityLabel","formControlContext","createElement","Provider","value"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { createContext, memo, forwardRef } from 'react';\nimport { useCheckboxGroupState } from '@react-stately/checkbox';\nimport { useCheckboxGroup } from '@react-native-aria/checkbox';\nimport { useFormControlContext } from '../../composites/FormControl';\nimport Box from '../Box';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nexport const CheckboxGroupContext = /*#__PURE__*/createContext(null);\n\nfunction CheckboxGroup({\n  size,\n  _checkbox,\n  colorScheme,\n  ...props\n}, ref) {\n  const resolvedProps = usePropsResolution('CheckboxGroup', props);\n  const {\n    children\n  } = props;\n  const state = useCheckboxGroupState(props);\n  const {\n    groupProps\n  } = useCheckboxGroup({\n    'aria-label': props.accessibilityLabel,\n    ...props\n  }, state);\n  const formControlContext = useFormControlContext(); //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps({ ...props,\n    size,\n    colorScheme\n  })) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(CheckboxGroupContext.Provider, {\n    value: {\n      //@ts-ignore\n      size,\n      colorScheme,\n      ..._checkbox,\n      ...formControlContext,\n      state\n    }\n  }, /*#__PURE__*/React.createElement(Box, _extends({}, resolvedProps, groupProps, props, {\n    ref: ref\n  }), children));\n}\n\nexport default /*#__PURE__*/memo( /*#__PURE__*/forwardRef(CheckboxGroup));\n//# sourceMappingURL=CheckboxGroup.js.map"]},"metadata":{},"sourceType":"module"}