{"ast":null,"code":"import _object_without_properties from \"@swc/helpers/src/_object_without_properties.mjs\";\n\nvar _s = $RefreshSig$();\n\nimport { getStyleAndFilteredProps, propConfig } from \"../theme/styled-system\";\nimport { useTheme } from \"./useTheme\";\nimport React from \"react\";\nimport { useNativeBaseConfig } from \"../core/NativeBaseContext\";\nimport { useResponsiveQuery } from \"../utils/useResponsiveQuery\";\nimport stableHash from \"stable-hash\";\n\nvar getStyledSystemPropsAndRestProps = function getStyledSystemPropsAndRestProps(props) {\n  var styledSystemProps = {};\n  var restProps = {};\n\n  for (var key in props) {\n    if (key in propConfig) {\n      styledSystemProps[key] = props[key];\n    } else {\n      restProps[key] = props[key];\n    }\n  }\n\n  return {\n    styledSystemProps: styledSystemProps,\n    restProps: restProps\n  };\n};\n\nexport var useStyledSystemPropsResolver = function useStyledSystemPropsResolver(_param) {\n  var propStyle = _param.style,\n      debug = _param.debug,\n      props = _object_without_properties(_param, [\"style\", \"debug\"]);\n\n  _s();\n\n  var theme = useTheme();\n  var ref = useNativeBaseConfig(\"makeStyledComponent\"),\n      currentBreakpoint = ref.currentBreakpoint,\n      config = ref.config;\n  var strictMode = config.strictMode;\n  var getResponsiveStyles = useResponsiveQuery().getResponsiveStyles;\n  var ref1 = getStyledSystemPropsAndRestProps(props),\n      styledSystemProps = ref1.styledSystemProps,\n      restProps = ref1.restProps;\n  var ref2 = React.useMemo(function () {\n    var ref = getStyleAndFilteredProps({\n      styledSystemProps: styledSystemProps,\n      theme: theme,\n      debug: debug,\n      currentBreakpoint: currentBreakpoint,\n      strictMode: strictMode,\n      getResponsiveStyles: getResponsiveStyles\n    }),\n        styleSheet = ref.styleSheet,\n        dataSet = ref.dataSet;\n\n    if (propStyle) {\n      return {\n        style: [styleSheet.box, propStyle],\n        dataSet: dataSet\n      };\n    } else {\n      return {\n        style: styleSheet.box,\n        dataSet: dataSet\n      };\n    }\n  }, [stableHash(styledSystemProps), theme, debug, currentBreakpoint, strictMode, propStyle, getResponsiveStyles, props]),\n      style = ref2.style,\n      dataSet = ref2.dataSet;\n\n  if (\"development\" === \"development\" && debug) {\n    console.log(\"style,resprops\", currentBreakpoint);\n  }\n\n  restProps.dataSet = dataSet;\n  return [style, restProps];\n};\n\n_s(useStyledSystemPropsResolver, \"+LukDN38XIGDaA+YuKH5Oq5h80w=\", false, function () {\n  return [useTheme, useNativeBaseConfig, useResponsiveQuery];\n});\n\n;\n;\n\n(function () {\n  var _a, _b;\n\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n\n      import.meta.webpackHot.accept();\n\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["D:\\codes\\Next\\pomodoro-dash\\node_modules\\native-base\\lib\\module\\hooks\\useStyledSystemPropsResolver.js"],"names":["getStyleAndFilteredProps","propConfig","useTheme","React","useNativeBaseConfig","useResponsiveQuery","stableHash","getStyledSystemPropsAndRestProps","props","styledSystemProps","restProps","key","useStyledSystemPropsResolver","style","propStyle","debug","theme","currentBreakpoint","config","strictMode","getResponsiveStyles","dataSet","useMemo","styleSheet","box","console","log"],"mappings":"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","sourcesContent":["import { getStyleAndFilteredProps, propConfig } from '../theme/styled-system';\nimport { useTheme } from './useTheme';\nimport React from 'react';\nimport { useNativeBaseConfig } from '../core/NativeBaseContext';\nimport { useResponsiveQuery } from '../utils/useResponsiveQuery'; //@ts-ignore\n\nimport stableHash from 'stable-hash';\n\nconst getStyledSystemPropsAndRestProps = props => {\n  const styledSystemProps = {};\n  const restProps = {};\n\n  for (let key in props) {\n    if (key in propConfig) {\n      styledSystemProps[key] = props[key];\n    } else {\n      restProps[key] = props[key];\n    }\n  }\n\n  return {\n    styledSystemProps,\n    restProps\n  };\n};\n\nexport const useStyledSystemPropsResolver = ({\n  style: propStyle,\n  debug,\n  ...props\n}) => {\n  const theme = useTheme();\n  const {\n    currentBreakpoint,\n    config\n  } = useNativeBaseConfig('makeStyledComponent');\n  const strictMode = config.strictMode;\n  const {\n    getResponsiveStyles\n  } = useResponsiveQuery();\n  const {\n    styledSystemProps,\n    restProps\n  } = getStyledSystemPropsAndRestProps(props);\n  const {\n    style,\n    dataSet\n  } = React.useMemo(() => {\n    const {\n      styleSheet,\n      dataSet\n    } = getStyleAndFilteredProps({\n      styledSystemProps,\n      theme,\n      debug,\n      currentBreakpoint,\n      strictMode,\n      getResponsiveStyles\n    });\n\n    if (propStyle) {\n      return {\n        style: [styleSheet.box, propStyle],\n        dataSet\n      };\n    } else {\n      return {\n        style: styleSheet.box,\n        dataSet\n      };\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [// eslint-disable-next-line react-hooks/exhaustive-deps\n  stableHash(styledSystemProps), theme, debug, currentBreakpoint, strictMode, propStyle, getResponsiveStyles, props]);\n\n  if (process.env.NODE_ENV === 'development' && debug) {\n    /* eslint-disable-next-line */\n    console.log('style,resprops', currentBreakpoint);\n  }\n\n  restProps.dataSet = dataSet;\n  return [style, restProps];\n};\n//# sourceMappingURL=useStyledSystemPropsResolver.js.map"]},"metadata":{},"sourceType":"module"}