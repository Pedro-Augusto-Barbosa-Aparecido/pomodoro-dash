{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Overlay = Overlay;\n\nvar _overlays = require(\"@react-native-aria/overlays\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _hooks = require(\"../../../hooks\");\n\nvar _ExitAnimationContext = require(\"./ExitAnimationContext\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction Overlay(_ref) {\n  var children = _ref.children,\n      isOpen = _ref.isOpen,\n      _ref$useRNModal = _ref.useRNModal,\n      useRNModal = _ref$useRNModal === void 0 ? false : _ref$useRNModal,\n      _ref$useRNModalOnAndr = _ref.useRNModalOnAndroid,\n      useRNModalOnAndroid = _ref$useRNModalOnAndr === void 0 ? false : _ref$useRNModalOnAndr,\n      _ref$isKeyboardDismis = _ref.isKeyboardDismissable,\n      isKeyboardDismissable = _ref$isKeyboardDismis === void 0 ? true : _ref$isKeyboardDismis,\n      _ref$animationPreset = _ref.animationPreset,\n      animationPreset = _ref$animationPreset === void 0 ? \"fade\" : _ref$animationPreset,\n      onRequestClose = _ref.onRequestClose,\n      style = _ref.style,\n      unmountOnExit = _ref.unmountOnExit;\n\n  var _react$default$useSta = _react.default.useState(!isOpen),\n      _react$default$useSta2 = _slicedToArray(_react$default$useSta, 2),\n      exited = _react$default$useSta2[0],\n      setExited = _react$default$useSta2[1];\n\n  (0, _hooks.useKeyboardDismissable)({\n    enabled: isOpen && isKeyboardDismissable,\n    callback: onRequestClose ? onRequestClose : function () {}\n  });\n\n  var styleObj = _objectSpread({}, style);\n\n  if (animationPreset === \"slide\") {\n    styleObj.overflow = \"hidden\";\n    styleObj.display = \"flex\";\n  } else {\n    styleObj.display = exited && !isOpen ? \"none\" : \"flex\";\n  }\n\n  if (unmountOnExit && !isOpen && exited) {\n    return null;\n  }\n\n  if (useRNModal || useRNModalOnAndroid && _reactNative.Platform.OS === \"android\") {\n    return _react.default.createElement(_ExitAnimationContext.ExitAnimationContext.Provider, {\n      value: {\n        exited: exited,\n        setExited: setExited\n      }\n    }, _react.default.createElement(_reactNative.Modal, {\n      statusBarTranslucent: true,\n      transparent: true,\n      visible: isOpen,\n      onRequestClose: onRequestClose,\n      animationType: animationPreset\n    }, children));\n  }\n\n  if (unmountOnExit && !isOpen && exited) {\n    return null;\n  }\n\n  return _react.default.createElement(_overlays.OverlayContainer, {\n    style: _objectSpread({}, styleObj)\n  }, _react.default.createElement(_ExitAnimationContext.ExitAnimationContext.Provider, {\n    value: {\n      exited: exited,\n      setExited: setExited\n    }\n  }, children));\n}","map":{"version":3,"sources":["D:\\codes\\Next\\pomodoro-dash\\node_modules\\native-base\\lib\\commonjs\\components\\primitives\\Overlay\\Overlay.js"],"names":["Object","defineProperty","exports","value","Overlay","_overlays","require","_react","_interopRequireDefault","_hooks","_ExitAnimationContext","obj","__esModule","default","children","isOpen","useRNModal","useRNModalOnAndroid","isKeyboardDismissable","animationPreset","onRequestClose","style","unmountOnExit","exited","setExited","useState","useKeyboardDismissable","enabled","callback","styleObj","overflow","display","_reactNative","Platform","OS","createElement","ExitAnimationContext","Provider","Modal","statusBarTranslucent","transparent","visible","animationType","OverlayContainer"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Overlay = Overlay;\n\nvar _overlays = require(\"@react-native-aria/overlays\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _hooks = require(\"../../../hooks\");\n\nvar _ExitAnimationContext = require(\"./ExitAnimationContext\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\nfunction Overlay({\n  children,\n  isOpen,\n  useRNModal = false,\n  useRNModalOnAndroid = false,\n  isKeyboardDismissable = true,\n  //@ts-ignore\n  animationPreset = 'fade',\n  onRequestClose,\n  style,\n  unmountOnExit\n}) {\n  const [exited, setExited] = _react.default.useState(!isOpen);\n\n  (0, _hooks.useKeyboardDismissable)({\n    enabled: isOpen && isKeyboardDismissable,\n    callback: onRequestClose ? onRequestClose : () => {}\n  });\n  const styleObj = { ...style\n  };\n\n  if (animationPreset === 'slide') {\n    styleObj.overflow = 'hidden';\n    styleObj.display = 'flex';\n  } else {\n    styleObj.display = exited && !isOpen ? 'none' : 'flex';\n  }\n\n  if (unmountOnExit && !isOpen && exited) {\n    return null;\n  }\n\n  if (useRNModal || useRNModalOnAndroid && _reactNative.Platform.OS === 'android') {\n    return /*#__PURE__*/_react.default.createElement(_ExitAnimationContext.ExitAnimationContext.Provider, {\n      value: {\n        exited,\n        setExited\n      }\n    }, /*#__PURE__*/_react.default.createElement(_reactNative.Modal, {\n      statusBarTranslucent: true,\n      transparent: true,\n      visible: isOpen,\n      onRequestClose: onRequestClose,\n      animationType: animationPreset\n    }, children));\n  }\n\n  if (unmountOnExit && !isOpen && exited) {\n    return null;\n  }\n\n  return (\n    /*#__PURE__*/\n    //@ts-ignore\n    _react.default.createElement(_overlays.OverlayContainer, {\n      style: { ...styleObj\n      }\n    }, /*#__PURE__*/_react.default.createElement(_ExitAnimationContext.ExitAnimationContext.Provider, {\n      value: {\n        exited,\n        setExited\n      }\n    }, children))\n  );\n}\n//# sourceMappingURL=Overlay.js.map"]},"metadata":{},"sourceType":"script"}