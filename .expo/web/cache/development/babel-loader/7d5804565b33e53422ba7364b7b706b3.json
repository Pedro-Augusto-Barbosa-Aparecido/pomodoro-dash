{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nexport var ResponsiveQueryContext = React.createContext({\n  disableCSSMediaQueries: false\n});\nexport var ResponsiveQueryProvider = function ResponsiveQueryProvider(props) {\n  _s();\n\n  var value = React.useMemo(function () {\n    return {\n      disableCSSMediaQueries: props.disableCSSMediaQueries\n    };\n  }, [props.disableCSSMediaQueries]);\n  return React.createElement(ResponsiveQueryContext.Provider, {\n    value: value\n  }, props.children);\n};\n\n_s(ResponsiveQueryProvider, \"tPauEVZ6EeuERV9ttvKTwQ7++Gw=\");\n\n_c = ResponsiveQueryProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResponsiveQueryProvider\");\n;\n;\n\n(function () {\n  var _a, _b;\n\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n\n      import.meta.webpackHot.accept();\n\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["D:\\codes\\Next\\pomodoro-dash\\node_modules\\native-base\\lib\\module\\utils\\useResponsiveQuery\\ResponsiveQueryProvider.js"],"names":["React","ResponsiveQueryContext","createContext","disableCSSMediaQueries","ResponsiveQueryProvider","props","value","useMemo","createElement","Provider","children"],"mappings":"AAAA,IAAA,EAAA,GAAA,YAAA,EAAA;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,IAAMC,sBAAsB,GAAgBD,KAAK,CAACE,aAANF,CAAoB;EACrEG,sBAAsB,EAAE;AAD6C,CAApBH,CAA5C;AAGP,OAAO,IAAMI,uBAAuB,GAAGC,SAA1BD,uBAA0BC,CAAAA,KAAAA,EAAS;;;EAC9C,IAAMC,KAAK,GAAGN,KAAK,CAACO,OAANP,CAAc,YAAA;WAAO;MACjCG,sBAAsB,EAAEE,KAAK,CAACF;IADG,C;EAEjC,CAFYH,EAEV,CAACK,KAAK,CAACF,sBAAP,CAFUH,CAAd;EAGA,OAAoBA,KAAK,CAACQ,aAANR,CAAoBC,sBAAsB,CAACQ,QAA3CT,EAAqD;IACvEM,KAAK,EAAEA;EADgE,CAArDN,EAEjBK,KAAK,CAACK,QAFWV,CAApB;AAGD,CAPM;;GAAMI,uB,EAAuB,8B;;AAAvBA,EAAAA,GAAAA,uBAAAA","sourcesContent":["import React from 'react';\nexport const ResponsiveQueryContext = /*#__PURE__*/React.createContext({\n  disableCSSMediaQueries: false\n});\nexport const ResponsiveQueryProvider = props => {\n  const value = React.useMemo(() => ({\n    disableCSSMediaQueries: props.disableCSSMediaQueries\n  }), [props.disableCSSMediaQueries]);\n  return /*#__PURE__*/React.createElement(ResponsiveQueryContext.Provider, {\n    value: value\n  }, props.children);\n};\n//# sourceMappingURL=ResponsiveQueryProvider.js.map"]},"metadata":{},"sourceType":"module"}