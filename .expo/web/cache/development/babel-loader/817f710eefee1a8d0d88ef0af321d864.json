{"ast":null,"code":"\"use strict\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar Info = function Info() {\n  this.any_blank_count = 0;\n  this.any_blank_ms = 0;\n  this.any_blank_speed_sum = 0;\n  this.mostly_blank_count = 0;\n  this.mostly_blank_ms = 0;\n  this.pixels_blank = 0;\n  this.pixels_sampled = 0;\n  this.pixels_scrolled = 0;\n  this.total_time_spent = 0;\n  this.sample_count = 0;\n};\n\nvar DEBUG = false;\nvar _listeners = [];\nvar _minSampleCount = 10;\n\nvar _sampleRate = DEBUG ? 1 : null;\n\nvar FillRateHelper = function () {\n  FillRateHelper.addListener = function addListener(callback) {\n    if (_sampleRate === null) {\n      console.warn(\"Call `FillRateHelper.setSampleRate` before `addListener`.\");\n    }\n\n    _listeners.push(callback);\n\n    return {\n      remove: function remove() {\n        _listeners = _listeners.filter(function (listener) {\n          return callback !== listener;\n        });\n      }\n    };\n  };\n\n  FillRateHelper.setSampleRate = function setSampleRate(sampleRate) {\n    _sampleRate = sampleRate;\n  };\n\n  FillRateHelper.setMinSampleCount = function setMinSampleCount(minSampleCount) {\n    _minSampleCount = minSampleCount;\n  };\n\n  function FillRateHelper(getFrameMetrics) {\n    this._anyBlankStartTime = null;\n    this._enabled = false;\n    this._info = new Info();\n    this._mostlyBlankStartTime = null;\n    this._samplesStartTime = null;\n    this._getFrameMetrics = getFrameMetrics;\n    this._enabled = (_sampleRate || 0) > Math.random();\n\n    this._resetData();\n  }\n\n  var _proto = FillRateHelper.prototype;\n\n  _proto.activate = function activate() {\n    if (this._enabled && this._samplesStartTime == null) {\n      DEBUG && console.debug(\"FillRateHelper: activate\");\n      this._samplesStartTime = global.performance.now();\n    }\n  };\n\n  _proto.deactivateAndFlush = function deactivateAndFlush() {\n    if (!this._enabled) {\n      return;\n    }\n\n    var start = this._samplesStartTime;\n\n    if (start == null) {\n      DEBUG && console.debug(\"FillRateHelper: bail on deactivate with no start time\");\n      return;\n    }\n\n    if (this._info.sample_count < _minSampleCount) {\n      this._resetData();\n\n      return;\n    }\n\n    var total_time_spent = global.performance.now() - start;\n\n    var info = _objectSpread(_objectSpread({}, this._info), {}, {\n      total_time_spent: total_time_spent\n    });\n\n    if (DEBUG) {\n      var derived = {\n        avg_blankness: this._info.pixels_blank / this._info.pixels_sampled,\n        avg_speed: this._info.pixels_scrolled / (total_time_spent / 1000),\n        avg_speed_when_any_blank: this._info.any_blank_speed_sum / this._info.any_blank_count,\n        any_blank_per_min: this._info.any_blank_count / (total_time_spent / 1000 / 60),\n        any_blank_time_frac: this._info.any_blank_ms / total_time_spent,\n        mostly_blank_per_min: this._info.mostly_blank_count / (total_time_spent / 1000 / 60),\n        mostly_blank_time_frac: this._info.mostly_blank_ms / total_time_spent\n      };\n\n      for (var key in derived) {\n        derived[key] = Math.round(1000 * derived[key]) / 1000;\n      }\n\n      console.debug(\"FillRateHelper deactivateAndFlush: \", {\n        derived: derived,\n        info: info\n      });\n    }\n\n    _listeners.forEach(function (listener) {\n      return listener(info);\n    });\n\n    this._resetData();\n  };\n\n  _proto.computeBlankness = function computeBlankness(props, state, scrollMetrics) {\n    if (!this._enabled || props.getItemCount(props.data) === 0 || this._samplesStartTime == null) {\n      return 0;\n    }\n\n    var dOffset = scrollMetrics.dOffset,\n        offset = scrollMetrics.offset,\n        velocity = scrollMetrics.velocity,\n        visibleLength = scrollMetrics.visibleLength;\n    this._info.sample_count++;\n    this._info.pixels_sampled += Math.round(visibleLength);\n    this._info.pixels_scrolled += Math.round(Math.abs(dOffset));\n    var scrollSpeed = Math.round(Math.abs(velocity) * 1000);\n    var now = global.performance.now();\n\n    if (this._anyBlankStartTime != null) {\n      this._info.any_blank_ms += now - this._anyBlankStartTime;\n    }\n\n    this._anyBlankStartTime = null;\n\n    if (this._mostlyBlankStartTime != null) {\n      this._info.mostly_blank_ms += now - this._mostlyBlankStartTime;\n    }\n\n    this._mostlyBlankStartTime = null;\n    var blankTop = 0;\n    var first = state.first;\n\n    var firstFrame = this._getFrameMetrics(first);\n\n    while (first <= state.last && (!firstFrame || !firstFrame.inLayout)) {\n      firstFrame = this._getFrameMetrics(first);\n      first++;\n    }\n\n    if (firstFrame && first > 0) {\n      blankTop = Math.min(visibleLength, Math.max(0, firstFrame.offset - offset));\n    }\n\n    var blankBottom = 0;\n    var last = state.last;\n\n    var lastFrame = this._getFrameMetrics(last);\n\n    while (last >= state.first && (!lastFrame || !lastFrame.inLayout)) {\n      lastFrame = this._getFrameMetrics(last);\n      last--;\n    }\n\n    if (lastFrame && last < props.getItemCount(props.data) - 1) {\n      var bottomEdge = lastFrame.offset + lastFrame.length;\n      blankBottom = Math.min(visibleLength, Math.max(0, offset + visibleLength - bottomEdge));\n    }\n\n    var pixels_blank = Math.round(blankTop + blankBottom);\n    var blankness = pixels_blank / visibleLength;\n\n    if (blankness > 0) {\n      this._anyBlankStartTime = now;\n      this._info.any_blank_speed_sum += scrollSpeed;\n      this._info.any_blank_count++;\n      this._info.pixels_blank += pixels_blank;\n\n      if (blankness > 0.5) {\n        this._mostlyBlankStartTime = now;\n        this._info.mostly_blank_count++;\n      }\n    } else if (scrollSpeed < 0.01 || Math.abs(dOffset) < 1) {\n      this.deactivateAndFlush();\n    }\n\n    return blankness;\n  };\n\n  _proto.enabled = function enabled() {\n    return this._enabled;\n  };\n\n  _proto._resetData = function _resetData() {\n    this._anyBlankStartTime = null;\n    this._info = new Info();\n    this._mostlyBlankStartTime = null;\n    this._samplesStartTime = null;\n  };\n\n  return FillRateHelper;\n}();\n\nexport default FillRateHelper;","map":{"version":3,"sources":["D:\\codes\\Next\\pomodoro-dash\\node_modules\\react-native-web\\dist\\vendor\\react-native\\FillRateHelper\\index.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","Info","any_blank_count","any_blank_ms","any_blank_speed_sum","mostly_blank_count","mostly_blank_ms","pixels_blank","pixels_sampled","pixels_scrolled","total_time_spent","sample_count","DEBUG","_listeners","_minSampleCount","_sampleRate","FillRateHelper","addListener","callback","console","warn","remove","listener","setSampleRate","sampleRate","setMinSampleCount","minSampleCount","getFrameMetrics","_anyBlankStartTime","_enabled","_info","_mostlyBlankStartTime","_samplesStartTime","_getFrameMetrics","Math","random","_resetData","_proto","prototype","activate","debug","global","performance","now","deactivateAndFlush","start","info","derived","avg_blankness","avg_speed","avg_speed_when_any_blank","any_blank_per_min","any_blank_time_frac","mostly_blank_per_min","mostly_blank_time_frac","round","computeBlankness","props","state","scrollMetrics","getItemCount","data","dOffset","offset","velocity","visibleLength","abs","scrollSpeed","blankTop","first","firstFrame","last","inLayout","min","max","blankBottom","lastFrame","bottomEdge","blankness","enabled"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar Info = function Info() {\n  this.any_blank_count = 0;\n  this.any_blank_ms = 0;\n  this.any_blank_speed_sum = 0;\n  this.mostly_blank_count = 0;\n  this.mostly_blank_ms = 0;\n  this.pixels_blank = 0;\n  this.pixels_sampled = 0;\n  this.pixels_scrolled = 0;\n  this.total_time_spent = 0;\n  this.sample_count = 0;\n};\n\nvar DEBUG = false;\nvar _listeners = [];\nvar _minSampleCount = 10;\n\nvar _sampleRate = DEBUG ? 1 : null;\n/**\n * A helper class for detecting when the maximem fill rate of `VirtualizedList` is exceeded.\n * By default the sampling rate is set to zero and this will do nothing. If you want to collect\n * samples (e.g. to log them), make sure to call `FillRateHelper.setSampleRate(0.0-1.0)`.\n *\n * Listeners and sample rate are global for all `VirtualizedList`s - typical usage will combine with\n * `SceneTracker.getActiveScene` to determine the context of the events.\n */\n\n\nvar FillRateHelper = /*#__PURE__*/function () {\n  FillRateHelper.addListener = function addListener(callback) {\n    if (_sampleRate === null) {\n      console.warn('Call `FillRateHelper.setSampleRate` before `addListener`.');\n    }\n\n    _listeners.push(callback);\n\n    return {\n      remove: function remove() {\n        _listeners = _listeners.filter(function (listener) {\n          return callback !== listener;\n        });\n      }\n    };\n  };\n\n  FillRateHelper.setSampleRate = function setSampleRate(sampleRate) {\n    _sampleRate = sampleRate;\n  };\n\n  FillRateHelper.setMinSampleCount = function setMinSampleCount(minSampleCount) {\n    _minSampleCount = minSampleCount;\n  };\n\n  function FillRateHelper(getFrameMetrics) {\n    this._anyBlankStartTime = null;\n    this._enabled = false;\n    this._info = new Info();\n    this._mostlyBlankStartTime = null;\n    this._samplesStartTime = null;\n    this._getFrameMetrics = getFrameMetrics;\n    this._enabled = (_sampleRate || 0) > Math.random();\n\n    this._resetData();\n  }\n\n  var _proto = FillRateHelper.prototype;\n\n  _proto.activate = function activate() {\n    if (this._enabled && this._samplesStartTime == null) {\n      DEBUG && console.debug('FillRateHelper: activate');\n      this._samplesStartTime = global.performance.now();\n    }\n  };\n\n  _proto.deactivateAndFlush = function deactivateAndFlush() {\n    if (!this._enabled) {\n      return;\n    }\n\n    var start = this._samplesStartTime; // const for flow\n\n    if (start == null) {\n      DEBUG && console.debug('FillRateHelper: bail on deactivate with no start time');\n      return;\n    }\n\n    if (this._info.sample_count < _minSampleCount) {\n      // Don't bother with under-sampled events.\n      this._resetData();\n\n      return;\n    }\n\n    var total_time_spent = global.performance.now() - start;\n\n    var info = _objectSpread(_objectSpread({}, this._info), {}, {\n      total_time_spent: total_time_spent\n    });\n\n    if (DEBUG) {\n      var derived = {\n        avg_blankness: this._info.pixels_blank / this._info.pixels_sampled,\n        avg_speed: this._info.pixels_scrolled / (total_time_spent / 1000),\n        avg_speed_when_any_blank: this._info.any_blank_speed_sum / this._info.any_blank_count,\n        any_blank_per_min: this._info.any_blank_count / (total_time_spent / 1000 / 60),\n        any_blank_time_frac: this._info.any_blank_ms / total_time_spent,\n        mostly_blank_per_min: this._info.mostly_blank_count / (total_time_spent / 1000 / 60),\n        mostly_blank_time_frac: this._info.mostly_blank_ms / total_time_spent\n      };\n\n      for (var key in derived) {\n        derived[key] = Math.round(1000 * derived[key]) / 1000;\n      }\n\n      console.debug('FillRateHelper deactivateAndFlush: ', {\n        derived: derived,\n        info: info\n      });\n    }\n\n    _listeners.forEach(function (listener) {\n      return listener(info);\n    });\n\n    this._resetData();\n  };\n\n  _proto.computeBlankness = function computeBlankness(props, state, scrollMetrics) {\n    if (!this._enabled || props.getItemCount(props.data) === 0 || this._samplesStartTime == null) {\n      return 0;\n    }\n\n    var dOffset = scrollMetrics.dOffset,\n        offset = scrollMetrics.offset,\n        velocity = scrollMetrics.velocity,\n        visibleLength = scrollMetrics.visibleLength; // Denominator metrics that we track for all events - most of the time there is no blankness and\n    // we want to capture that.\n\n    this._info.sample_count++;\n    this._info.pixels_sampled += Math.round(visibleLength);\n    this._info.pixels_scrolled += Math.round(Math.abs(dOffset));\n    var scrollSpeed = Math.round(Math.abs(velocity) * 1000); // px / sec\n    // Whether blank now or not, record the elapsed time blank if we were blank last time.\n\n    var now = global.performance.now();\n\n    if (this._anyBlankStartTime != null) {\n      this._info.any_blank_ms += now - this._anyBlankStartTime;\n    }\n\n    this._anyBlankStartTime = null;\n\n    if (this._mostlyBlankStartTime != null) {\n      this._info.mostly_blank_ms += now - this._mostlyBlankStartTime;\n    }\n\n    this._mostlyBlankStartTime = null;\n    var blankTop = 0;\n    var first = state.first;\n\n    var firstFrame = this._getFrameMetrics(first);\n\n    while (first <= state.last && (!firstFrame || !firstFrame.inLayout)) {\n      firstFrame = this._getFrameMetrics(first);\n      first++;\n    } // Only count blankTop if we aren't rendering the first item, otherwise we will count the header\n    // as blank.\n\n\n    if (firstFrame && first > 0) {\n      blankTop = Math.min(visibleLength, Math.max(0, firstFrame.offset - offset));\n    }\n\n    var blankBottom = 0;\n    var last = state.last;\n\n    var lastFrame = this._getFrameMetrics(last);\n\n    while (last >= state.first && (!lastFrame || !lastFrame.inLayout)) {\n      lastFrame = this._getFrameMetrics(last);\n      last--;\n    } // Only count blankBottom if we aren't rendering the last item, otherwise we will count the\n    // footer as blank.\n\n\n    if (lastFrame && last < props.getItemCount(props.data) - 1) {\n      var bottomEdge = lastFrame.offset + lastFrame.length;\n      blankBottom = Math.min(visibleLength, Math.max(0, offset + visibleLength - bottomEdge));\n    }\n\n    var pixels_blank = Math.round(blankTop + blankBottom);\n    var blankness = pixels_blank / visibleLength;\n\n    if (blankness > 0) {\n      this._anyBlankStartTime = now;\n      this._info.any_blank_speed_sum += scrollSpeed;\n      this._info.any_blank_count++;\n      this._info.pixels_blank += pixels_blank;\n\n      if (blankness > 0.5) {\n        this._mostlyBlankStartTime = now;\n        this._info.mostly_blank_count++;\n      }\n    } else if (scrollSpeed < 0.01 || Math.abs(dOffset) < 1) {\n      this.deactivateAndFlush();\n    }\n\n    return blankness;\n  };\n\n  _proto.enabled = function enabled() {\n    return this._enabled;\n  };\n\n  _proto._resetData = function _resetData() {\n    this._anyBlankStartTime = null;\n    this._info = new Info();\n    this._mostlyBlankStartTime = null;\n    this._samplesStartTime = null;\n  };\n\n  return FillRateHelper;\n}();\n\nexport default FillRateHelper;"]},"metadata":{},"sourceType":"module"}