{"ast":null,"code":"import _object_spread from \"@swc/helpers/src/_object_spread.mjs\";\nimport _object_spread_props from \"@swc/helpers/src/_object_spread_props.mjs\";\nimport _object_without_properties from \"@swc/helpers/src/_object_without_properties.mjs\";\nimport _sliced_to_array from \"@swc/helpers/src/_sliced_to_array.mjs\";\nimport _to_consumable_array from \"@swc/helpers/src/_to_consumable_array.mjs\";\n\nvar _s = $RefreshSig$(),\n    _s1 = $RefreshSig$();\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { memo, forwardRef } from \"react\";\nimport { mergeRefs } from \"../../../utils\";\nimport { usePropsResolution } from \"../../../hooks/useThemeProps\";\nimport { Center } from \"../../composites/Center\";\nimport { useFormControlContext } from \"../../composites/FormControl\";\nimport Box from \"../Box\";\nimport { useToggleState } from \"@react-stately/toggle\";\nimport { VisuallyHidden } from \"@react-aria/visually-hidden\";\nimport { CheckboxGroupContext } from \"./CheckboxGroup\";\nimport { useHover } from \"@react-native-aria/interactions\";\nimport { useCheckbox, useCheckboxGroupItem } from \"@react-native-aria/checkbox\";\nimport { useFocusRing } from \"@react-native-aria/focus\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nimport { extractInObject, stylingProps } from \"../../../theme/tools/utils\";\nimport { combineContextAndProps } from \"../../../utils\";\nimport SizedIcon from \"./SizedIcon\";\nimport { Stack } from \"../Stack\";\nimport { wrapStringChild } from \"../../../utils/wrapStringChild\";\n\nvar Checkbox = function Checkbox(_param, ref) {\n  var wrapperRef = _param.wrapperRef,\n      isHoveredProp = _param.isHovered,\n      isFocusVisibleProp = _param.isFocusVisible,\n      props = _object_without_properties(_param, [\"wrapperRef\", \"isHovered\", \"isFocusVisible\"]);\n\n  _s();\n\n  var formControlContext = useFormControlContext();\n\n  var _ref = combineContextAndProps(formControlContext, props),\n      isInvalid = _ref.isInvalid,\n      isReadOnly = _ref.isReadOnly,\n      isIndeterminate = _ref.isIndeterminate,\n      combinedProps = _object_without_properties(_ref, [\"isInvalid\", \"isReadOnly\", \"isIndeterminate\"]);\n\n  var checkboxGroupContext = React.useContext(CheckboxGroupContext);\n  var state = useToggleState(_object_spread_props(_object_spread({}, props), {\n    defaultSelected: props.defaultIsChecked,\n    isSelected: props.isChecked\n  }));\n\n  var _ref1 = React.useRef();\n\n  var mergedRef = mergeRefs([ref, _ref1]);\n\n  var _$ref = checkboxGroupContext ? useCheckboxGroupItem(_object_spread_props(_object_spread({}, combinedProps), {\n    \"aria-label\": combinedProps.accessibilityLabel,\n    \"value\": combinedProps.value\n  }), checkboxGroupContext.state, mergedRef) : useCheckbox(_object_spread_props(_object_spread({}, combinedProps), {\n    \"aria-label\": combinedProps.accessibilityLabel\n  }), state, mergedRef),\n      groupItemInputProps = _$ref.inputProps;\n\n  var inputProps = React.useMemo(function () {\n    return groupItemInputProps;\n  }, [groupItemInputProps.checked, groupItemInputProps.disabled, groupItemInputProps]);\n\n  var _$ref1 = _sliced_to_array(React.useState(_object_spread({}, checkboxGroupContext, combinedProps)), 1),\n      contextCombinedProps = _$ref1[0];\n\n  return React.createElement(CheckboxComponent, {\n    wrapperRef: wrapperRef,\n    mergedRef: mergedRef,\n    inputProps: inputProps,\n    combinedProps: contextCombinedProps,\n    isInvalid: isInvalid,\n    isReadOnly: isReadOnly,\n    isHovered: isHoveredProp,\n    isIndeterminate: isIndeterminate,\n    isFocusVisible: isFocusVisibleProp\n  });\n};\n\n_s(Checkbox, \"7jXlNl6PvxuEidHAyG95aj05Bko=\", false, function () {\n  return [useFormControlContext, useToggleState, useCheckboxGroupItem, useCheckbox];\n});\n\n_c = Checkbox;\nvar CheckboxComponent = React.memo(_s1(function (param) {\n  var wrapperRef = param.wrapperRef,\n      inputProps = param.inputProps,\n      combinedProps = param.combinedProps,\n      isInvalid = param.isInvalid,\n      isReadOnly = param.isReadOnly,\n      isIndeterminate = param.isIndeterminate,\n      mergedRef = param.mergedRef,\n      isHoveredProp = param.isHovered,\n      isFocusVisibleProp = param.isFocusVisible;\n\n  _s1();\n\n  var _ref = React.useRef();\n\n  var isHovered = useHover({}, _ref).isHovered;\n  var isChecked = inputProps.checked,\n      isDisabled = inputProps.disabled;\n  var ref = useFocusRing(),\n      focusProps = ref.focusProps,\n      isFocusVisible = ref.isFocusVisible;\n\n  var _ref1 = usePropsResolution(\"Checkbox\", combinedProps, {\n    isInvalid: isInvalid,\n    isReadOnly: isReadOnly,\n    isFocusVisible: isFocusVisibleProp || isFocusVisible,\n    isDisabled: isDisabled,\n    isIndeterminate: isIndeterminate,\n    isChecked: isChecked,\n    isHovered: isHovered || isHoveredProp\n  }),\n      icon = _ref1.icon,\n      _interactionBox = _ref1._interactionBox,\n      _icon = _ref1._icon,\n      _stack = _ref1._stack,\n      _text = _ref1._text,\n      resolvedProps = _object_without_properties(_ref1, [\"icon\", \"_interactionBox\", \"_icon\", \"_stack\", \"_text\"]);\n\n  var ref1 = _sliced_to_array(extractInObject(resolvedProps, _to_consumable_array(stylingProps.margin).concat(_to_consumable_array(stylingProps.layout), _to_consumable_array(stylingProps.flexbox), _to_consumable_array(stylingProps.position), [\"_text\"])), 2),\n      layoutProps = ref1[0],\n      nonLayoutProps = ref1[1];\n\n  var component = React.useMemo(function () {\n    return React.createElement(Stack, _extends({}, _stack, layoutProps), React.createElement(Center, null, React.createElement(Box, _interactionBox), React.createElement(Center, nonLayoutProps, React.createElement(SizedIcon, {\n      icon: icon,\n      _icon: _icon,\n      isChecked: isChecked\n    }))), wrapStringChild(resolvedProps === null || resolvedProps === void 0 ? void 0 : resolvedProps.children, _text));\n  }, [_icon, _stack, _text, _interactionBox, icon, isChecked, nonLayoutProps, layoutProps, resolvedProps === null || resolvedProps === void 0 ? void 0 : resolvedProps.children]);\n  var mergedWrapperRef = React.useMemo(function () {\n    return mergeRefs([wrapperRef, _ref]);\n  }, [wrapperRef]);\n\n  if (useHasResponsiveProps(resolvedProps)) {\n    return null;\n  }\n\n  return React.createElement(Box, {\n    accessibilityRole: \"label\",\n    ref: mergedWrapperRef\n  }, React.createElement(VisuallyHidden, null, React.createElement(\"input\", _extends({}, inputProps, focusProps, {\n    ref: mergedRef\n  }))), component);\n}, \"4kJ/ci+rb8+VUxQlvZpvjcc+iag=\", false, function () {\n  return [useHover, useFocusRing, usePropsResolution, useHasResponsiveProps];\n}));\n_c1 = CheckboxComponent;\nexport default _c3 = memo(_c2 = forwardRef(Checkbox));\n\nvar _c, _c1, _c2, _c3;\n\n$RefreshReg$(_c, \"Checkbox\");\n$RefreshReg$(_c1, \"CheckboxComponent\");\n$RefreshReg$(_c2, \"%default%$memo\");\n$RefreshReg$(_c3, \"%default%\");\n;\n;\n\n(function () {\n  var _a, _b;\n\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n\n      import.meta.webpackHot.accept();\n\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["D:\\codes\\Next\\pomodoro-dash\\node_modules\\native-base\\lib\\module\\components\\primitives\\Checkbox\\Checkbox.web.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","memo","forwardRef","mergeRefs","usePropsResolution","Center","useFormControlContext","Box","useToggleState","VisuallyHidden","CheckboxGroupContext","useHover","useCheckbox","useCheckboxGroupItem","useFocusRing","useHasResponsiveProps","extractInObject","stylingProps","combineContextAndProps","SizedIcon","Stack","wrapStringChild","Checkbox","wrapperRef","isHovered","isHoveredProp","isFocusVisible","isFocusVisibleProp","props","ref","formControlContext","isInvalid","isReadOnly","isIndeterminate","combinedProps","checkboxGroupContext","useContext","state","defaultSelected","defaultIsChecked","isSelected","isChecked","_ref","useRef","mergedRef","inputProps","groupItemInputProps","accessibilityLabel","value","useMemo","checked","disabled","contextCombinedProps","useState","createElement","CheckboxComponent","isDisabled","focusProps","icon","_interactionBox","_icon","_stack","_text","resolvedProps","layoutProps","nonLayoutProps","component","children","mergedWrapperRef","accessibilityRole"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { memo, forwardRef } from 'react';\nimport { mergeRefs } from '../../../utils';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { Center } from '../../composites/Center';\nimport { useFormControlContext } from '../../composites/FormControl';\nimport Box from '../Box';\nimport { useToggleState } from '@react-stately/toggle';\nimport { VisuallyHidden } from '@react-aria/visually-hidden';\nimport { CheckboxGroupContext } from './CheckboxGroup';\nimport { useHover } from '@react-native-aria/interactions';\nimport { useCheckbox, useCheckboxGroupItem } from '@react-native-aria/checkbox';\nimport { useFocusRing } from '@react-native-aria/focus';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { extractInObject, stylingProps } from '../../../theme/tools/utils';\nimport { combineContextAndProps } from '../../../utils';\nimport SizedIcon from './SizedIcon';\nimport { Stack } from '../Stack';\nimport { wrapStringChild } from '../../../utils/wrapStringChild';\n\nconst Checkbox = ({\n  wrapperRef,\n  isHovered: isHoveredProp,\n  isFocusVisible: isFocusVisibleProp,\n  ...props\n}, ref) => {\n  const formControlContext = useFormControlContext();\n  const {\n    isInvalid,\n    isReadOnly,\n    isIndeterminate,\n    ...combinedProps\n  } = combineContextAndProps(formControlContext, props);\n  const checkboxGroupContext = React.useContext(CheckboxGroupContext);\n  const state = useToggleState({ ...props,\n    defaultSelected: props.defaultIsChecked,\n    isSelected: props.isChecked\n  });\n\n  const _ref = React.useRef();\n\n  const mergedRef = mergeRefs([ref, _ref]); // Swap hooks depending on whether this checkbox is inside a CheckboxGroup.\n  // This is a bit unorthodox. Typically, hooks cannot be called in a conditional,\n  // but since the checkbox won't move in and out of a group, it should be safe.\n\n  const {\n    inputProps: groupItemInputProps\n  } = checkboxGroupContext ? // eslint-disable-next-line react-hooks/rules-of-hooks\n  useCheckboxGroupItem({ ...combinedProps,\n    'aria-label': combinedProps.accessibilityLabel,\n    'value': combinedProps.value\n  }, checkboxGroupContext.state, //@ts-ignore\n  mergedRef) : // eslint-disable-next-line react-hooks/rules-of-hooks\n  useCheckbox({ ...combinedProps,\n    'aria-label': combinedProps.accessibilityLabel\n  }, state, //@ts-ignore\n  mergedRef); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  const inputProps = React.useMemo(() => groupItemInputProps, [groupItemInputProps.checked, groupItemInputProps.disabled, groupItemInputProps]);\n  const [contextCombinedProps] = React.useState({ ...checkboxGroupContext,\n    ...combinedProps\n  });\n  return /*#__PURE__*/React.createElement(CheckboxComponent, {\n    wrapperRef: wrapperRef,\n    mergedRef: mergedRef,\n    inputProps: inputProps,\n    combinedProps: contextCombinedProps,\n    isInvalid: isInvalid,\n    isReadOnly: isReadOnly,\n    isHovered: isHoveredProp,\n    isIndeterminate: isIndeterminate,\n    isFocusVisible: isFocusVisibleProp\n  });\n};\n\nconst CheckboxComponent = /*#__PURE__*/React.memo(({\n  wrapperRef,\n  inputProps,\n  combinedProps,\n  isInvalid,\n  isReadOnly,\n  isIndeterminate,\n  mergedRef,\n  isHovered: isHoveredProp,\n  isFocusVisible: isFocusVisibleProp\n}) => {\n  const _ref = React.useRef();\n\n  const {\n    isHovered\n  } = useHover({}, _ref);\n  const {\n    checked: isChecked,\n    disabled: isDisabled\n  } = inputProps;\n  const {\n    focusProps,\n    isFocusVisible\n  } = useFocusRing();\n  const {\n    icon,\n    _interactionBox,\n    _icon,\n    _stack,\n    _text,\n    ...resolvedProps\n  } = usePropsResolution('Checkbox', combinedProps, {\n    isInvalid,\n    isReadOnly,\n    isFocusVisible: isFocusVisibleProp || isFocusVisible,\n    isDisabled,\n    isIndeterminate,\n    isChecked,\n    isHovered: isHovered || isHoveredProp\n  });\n  const [layoutProps, nonLayoutProps] = extractInObject(resolvedProps, [...stylingProps.margin, ...stylingProps.layout, ...stylingProps.flexbox, ...stylingProps.position, '_text']);\n  const component = React.useMemo(() => {\n    return /*#__PURE__*/React.createElement(Stack, _extends({}, _stack, layoutProps), /*#__PURE__*/React.createElement(Center, null, /*#__PURE__*/React.createElement(Box, _interactionBox), /*#__PURE__*/React.createElement(Center, nonLayoutProps, /*#__PURE__*/React.createElement(SizedIcon, {\n      icon: icon,\n      _icon: _icon,\n      isChecked: isChecked\n    }))), wrapStringChild(resolvedProps === null || resolvedProps === void 0 ? void 0 : resolvedProps.children, _text));\n  }, [_icon, _stack, _text, _interactionBox, icon, isChecked, nonLayoutProps, layoutProps, resolvedProps === null || resolvedProps === void 0 ? void 0 : resolvedProps.children]);\n  const mergedWrapperRef = React.useMemo(() => mergeRefs([wrapperRef, _ref]), [wrapperRef]); //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps(resolvedProps)) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(Box // @ts-ignore - RN web supports accessibilityRole=\"label\"\n  , {\n    accessibilityRole: \"label\",\n    ref: mergedWrapperRef\n  }, /*#__PURE__*/React.createElement(VisuallyHidden, null, /*#__PURE__*/React.createElement(\"input\", _extends({}, inputProps, focusProps, {\n    ref: mergedRef\n  }))), component);\n});\nexport default /*#__PURE__*/memo( /*#__PURE__*/forwardRef(Checkbox));\n//# sourceMappingURL=Checkbox.web.js.map"]},"metadata":{},"sourceType":"module"}