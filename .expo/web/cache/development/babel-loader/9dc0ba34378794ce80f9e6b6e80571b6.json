{"ast":null,"code":"import normalizeColor from \"../../modules/normalizeColor\";\nimport normalizeValueWithProperty from \"./normalizeValueWithProperty\";\nvar defaultOffset = {\n  height: 0,\n  width: 0\n};\n\nvar resolveShadowValue = function resolveShadowValue(style) {\n  var shadowColor = style.shadowColor,\n      shadowOffset = style.shadowOffset,\n      shadowOpacity = style.shadowOpacity,\n      shadowRadius = style.shadowRadius;\n\n  var _ref = shadowOffset || defaultOffset,\n      height = _ref.height,\n      width = _ref.width;\n\n  var offsetX = normalizeValueWithProperty(width);\n  var offsetY = normalizeValueWithProperty(height);\n  var blurRadius = normalizeValueWithProperty(shadowRadius || 0);\n  var color = normalizeColor(shadowColor || \"black\", shadowOpacity);\n\n  if (color != null && offsetX != null && offsetY != null && blurRadius != null) {\n    return offsetX + \" \" + offsetY + \" \" + blurRadius + \" \" + color;\n  }\n};\n\nexport default resolveShadowValue;\n;\n;\n\n(function () {\n  var _a, _b;\n\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n\n      import.meta.webpackHot.accept();\n\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["D:\\codes\\Next\\pomodoro-dash\\node_modules\\react-native-web\\dist\\exports\\StyleSheet\\resolveShadowValue.js"],"names":["normalizeColor","normalizeValueWithProperty","defaultOffset","height","width","resolveShadowValue","style","shadowColor","shadowOffset","shadowOpacity","shadowRadius","_ref","offsetX","offsetY","blurRadius","color"],"mappings":"AAQA,OAAOA,cAAP,MAA2B,8BAA3B;AACA,OAAOC,0BAAP,MAAuC,8BAAvC;AACA,IAAIC,aAAa,GAAG;EAClBC,MAAM,EAAE,CADU;EAElBC,KAAK,EAAE;AAFW,CAApB;;AAKA,IAAIC,kBAAkB,GAAG,SAASA,kBAAT,CAA4BC,KAA5B,EAAmC;EAC1D,IAAIC,WAAW,GAAGD,KAAK,CAACC,WAAxB;EAAA,IACIC,YAAY,GAAGF,KAAK,CAACE,YADzB;EAAA,IAEIC,aAAa,GAAGH,KAAK,CAACG,aAF1B;EAAA,IAGIC,YAAY,GAAGJ,KAAK,CAACI,YAHzB;;EAKA,IAAIC,IAAI,GAAGH,YAAY,IAAIN,aAA3B;EAAA,IACIC,MAAM,GAAGQ,IAAI,CAACR,MADlB;EAAA,IAEIC,KAAK,GAAGO,IAAI,CAACP,KAFjB;;EAIA,IAAIQ,OAAO,GAAGX,0BAA0B,CAACG,KAAD,CAAxC;EACA,IAAIS,OAAO,GAAGZ,0BAA0B,CAACE,MAAD,CAAxC;EACA,IAAIW,UAAU,GAAGb,0BAA0B,CAACS,YAAY,IAAI,CAAjB,CAA3C;EACA,IAAIK,KAAK,GAAGf,cAAc,CAACO,WAAW,IAAI,OAAhB,EAAyBE,aAAzB,CAA1B;;EAEA,IAAIM,KAAK,IAAI,IAATA,IAAiBH,OAAO,IAAI,IAA5BG,IAAoCF,OAAO,IAAI,IAA/CE,IAAuDD,UAAU,IAAI,IAAzE,EAA+E;IAC7E,OAAOF,OAAO,GAAG,GAAVA,GAAgBC,OAAhBD,GAA0B,GAA1BA,GAAgCE,UAAhCF,GAA6C,GAA7CA,GAAmDG,KAA1D;EACD;AACD,CAlBF;;AAoBA,eAAeV,kBAAf","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport normalizeColor from '../../modules/normalizeColor';\nimport normalizeValueWithProperty from './normalizeValueWithProperty';\nvar defaultOffset = {\n  height: 0,\n  width: 0\n};\n\nvar resolveShadowValue = function resolveShadowValue(style) {\n  var shadowColor = style.shadowColor,\n      shadowOffset = style.shadowOffset,\n      shadowOpacity = style.shadowOpacity,\n      shadowRadius = style.shadowRadius;\n\n  var _ref = shadowOffset || defaultOffset,\n      height = _ref.height,\n      width = _ref.width;\n\n  var offsetX = normalizeValueWithProperty(width);\n  var offsetY = normalizeValueWithProperty(height);\n  var blurRadius = normalizeValueWithProperty(shadowRadius || 0);\n  var color = normalizeColor(shadowColor || 'black', shadowOpacity);\n\n  if (color != null && offsetX != null && offsetY != null && blurRadius != null) {\n    return offsetX + \" \" + offsetY + \" \" + blurRadius + \" \" + color;\n  }\n};\n\nexport default resolveShadowValue;"]},"metadata":{},"sourceType":"module"}