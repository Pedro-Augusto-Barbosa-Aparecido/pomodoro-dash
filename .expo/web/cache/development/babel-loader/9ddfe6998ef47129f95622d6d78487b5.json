{"ast":null,"code":"\"use strict\";\n\nimport { canUseDOM } from \"fbjs/lib/ExecutionEnvironment\";\n\nvar emptyFunction = function emptyFunction() {};\n\nfunction supportsPassiveEvents() {\n  var supported = false;\n\n  if (canUseDOM) {\n    try {\n      var options = {};\n      Object.defineProperty(options, \"passive\", {\n        get: function get() {\n          supported = true;\n          return false;\n        }\n      });\n      window.addEventListener(\"test\", null, options);\n      window.removeEventListener(\"test\", null, options);\n    } catch (e) {}\n  }\n\n  return supported;\n}\n\nvar canUsePassiveEvents = supportsPassiveEvents();\n\nfunction getOptions(options) {\n  if (options == null) {\n    return false;\n  }\n\n  return canUsePassiveEvents ? options : Boolean(options.capture);\n}\n\nfunction isPropagationStopped() {\n  return this.cancelBubble;\n}\n\nfunction isDefaultPrevented() {\n  return this.defaultPrevented;\n}\n\nfunction normalizeEvent(event) {\n  event.nativeEvent = event;\n  event.persist = emptyFunction;\n  event.isDefaultPrevented = isDefaultPrevented;\n  event.isPropagationStopped = isPropagationStopped;\n  return event;\n}\n\nexport default function createEventHandle(type, options) {\n  var opts = getOptions(options);\n  return function (target, listener) {\n    if (target == null || typeof target.addEventListener !== \"function\") {\n      throw new Error(\"createEventHandle: called on an invalid target.\");\n    }\n\n    var element = target;\n\n    if (listener != null) {\n      var compatListener = function compatListener(e) {\n        return listener(normalizeEvent(e));\n      };\n\n      element.addEventListener(type, compatListener, opts);\n      return function removeListener() {\n        if (element != null) {\n          element.removeEventListener(type, compatListener, opts);\n        }\n      };\n    } else {\n      return emptyFunction;\n    }\n  };\n}\n;\n;\n;\n\n(function () {\n  var _a, _b;\n\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n\n      import.meta.webpackHot.accept();\n\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["D:\\codes\\Next\\pomodoro-dash\\node_modules\\react-native-web\\dist\\modules\\createEventHandle\\index.js"],"names":["canUseDOM","emptyFunction","supportsPassiveEvents","supported","options","Object","defineProperty","get","window","addEventListener","removeEventListener","e","canUsePassiveEvents","getOptions","Boolean","capture","isPropagationStopped","cancelBubble","isDefaultPrevented","defaultPrevented","normalizeEvent","event","nativeEvent","persist","createEventHandle","type","opts","target","listener","Error","element","compatListener","removeListener"],"mappings":"AAQA;;AAEA,SAASA,SAAT,QAA0B,+BAA1B;;AAEA,IAAIC,aAAa,GAAG,SAASA,aAAT,GAAyB,CAAG,CAAhD;;AAEA,SAASC,qBAAT,GAAiC;EAC/B,IAAIC,SAAS,GAAG,KAAhB;;EAGA,IAAIH,SAAJ,EAAe;IACb,IAAI;MACF,IAAII,OAAO,GAAG,EAAd;MACAC,MAAM,CAACC,cAAPD,CAAsBD,OAAtBC,EAA+B,SAA/BA,EAA0C;QACxCE,GAAG,EAAE,SAASA,GAAT,GAAe;UAClBJ,SAAS,GAAG,IAAZA;UACA,OAAO,KAAP;QACD;MAJuC,CAA1CE;MAMAG,MAAM,CAACC,gBAAPD,CAAwB,MAAxBA,EAAgC,IAAhCA,EAAsCJ,OAAtCI;MACAA,MAAM,CAACE,mBAAPF,CAA2B,MAA3BA,EAAmC,IAAnCA,EAAyCJ,OAAzCI;IACD,CAVD,CAUE,OAAOG,CAAP,EAAU,CAAE;EACf;;EAED,OAAOR,SAAP;AACD;;AAED,IAAIS,mBAAmB,GAAGV,qBAAqB,EAA/C;;AAEA,SAASW,UAAT,CAAoBT,OAApB,EAA6B;EAC3B,IAAIA,OAAO,IAAI,IAAf,EAAqB;IACnB,OAAO,KAAP;EACD;;EAED,OAAOQ,mBAAmB,GAAGR,OAAH,GAAaU,OAAO,CAACV,OAAO,CAACW,OAAT,CAA9C;AACD;;AAQD,SAASC,oBAAT,GAAgC;EAC9B,OAAO,KAAKC,YAAZ;AACD;;AAED,SAASC,kBAAT,GAA8B;EAC5B,OAAO,KAAKC,gBAAZ;AACD;;AAED,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;EAC7BA,KAAK,CAACC,WAAND,GAAoBA,KAApBA;EACAA,KAAK,CAACE,OAANF,GAAgBpB,aAAhBoB;EACAA,KAAK,CAACH,kBAANG,GAA2BH,kBAA3BG;EACAA,KAAK,CAACL,oBAANK,GAA6BL,oBAA7BK;EACA,OAAOA,KAAP;AACD;;AAMD,eAAe,SAASG,iBAAT,CAA2BC,IAA3B,EAAiCrB,OAAjC,EAA0C;EACvD,IAAIsB,IAAI,GAAGb,UAAU,CAACT,OAAD,CAArB;EACA,OAAO,UAAUuB,MAAV,EAAkBC,QAAlB,EAA4B;IACjC,IAAID,MAAM,IAAI,IAAVA,IAAkB,OAAOA,MAAM,CAAClB,gBAAd,KAAmC,UAAzD,EAAqE;MACnE,MAAM,IAAIoB,KAAJ,CAAU,iDAAV,CAAN;IACD;;IAED,IAAIC,OAAO,GAAGH,MAAd;;IAEA,IAAIC,QAAQ,IAAI,IAAhB,EAAsB;MACpB,IAAIG,cAAc,GAAG,SAASA,cAAT,CAAwBpB,CAAxB,EAA2B;QAC9C,OAAOiB,QAAQ,CAACR,cAAc,CAACT,CAAD,CAAf,CAAf;MACA,CAFF;;MAIAmB,OAAO,CAACrB,gBAARqB,CAAyBL,IAAzBK,EAA+BC,cAA/BD,EAA+CJ,IAA/CI;MACA,OAAO,SAASE,cAAT,GAA0B;QAC/B,IAAIF,OAAO,IAAI,IAAf,EAAqB;UACnBA,OAAO,CAACpB,mBAARoB,CAA4BL,IAA5BK,EAAkCC,cAAlCD,EAAkDJ,IAAlDI;QACD;MACF,CAJD;IAKD,CAXD,MAWO;MACL,OAAO7B,aAAP;IACD;EACF,CArBD;AAsBD;AAAA","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n'use strict';\n\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\n\nvar emptyFunction = function emptyFunction() {};\n\nfunction supportsPassiveEvents() {\n  var supported = false; // Check if browser supports event with passive listeners\n  // https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n\n  if (canUseDOM) {\n    try {\n      var options = {};\n      Object.defineProperty(options, 'passive', {\n        get: function get() {\n          supported = true;\n          return false;\n        }\n      });\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    } catch (e) {}\n  }\n\n  return supported;\n}\n\nvar canUsePassiveEvents = supportsPassiveEvents();\n\nfunction getOptions(options) {\n  if (options == null) {\n    return false;\n  }\n\n  return canUsePassiveEvents ? options : Boolean(options.capture);\n}\n/**\n * Shim generic API compatibility with ReactDOM's synthetic events, without needing the\n * large amount of code ReactDOM uses to do this. Ideally we wouldn't use a synthetic\n * event wrapper at all.\n */\n\n\nfunction isPropagationStopped() {\n  return this.cancelBubble;\n}\n\nfunction isDefaultPrevented() {\n  return this.defaultPrevented;\n}\n\nfunction normalizeEvent(event) {\n  event.nativeEvent = event;\n  event.persist = emptyFunction;\n  event.isDefaultPrevented = isDefaultPrevented;\n  event.isPropagationStopped = isPropagationStopped;\n  return event;\n}\n/**\n *\n */\n\n\nexport default function createEventHandle(type, options) {\n  var opts = getOptions(options);\n  return function (target, listener) {\n    if (target == null || typeof target.addEventListener !== 'function') {\n      throw new Error('createEventHandle: called on an invalid target.');\n    }\n\n    var element = target;\n\n    if (listener != null) {\n      var compatListener = function compatListener(e) {\n        return listener(normalizeEvent(e));\n      };\n\n      element.addEventListener(type, compatListener, opts);\n      return function removeListener() {\n        if (element != null) {\n          element.removeEventListener(type, compatListener, opts);\n        }\n      };\n    } else {\n      return emptyFunction;\n    }\n  };\n}"]},"metadata":{},"sourceType":"module"}