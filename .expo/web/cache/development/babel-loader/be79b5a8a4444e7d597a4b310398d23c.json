{"ast":null,"code":"\"use strict\";\n\nimport NativeAnimatedHelper from \"../NativeAnimatedHelper\";\nvar startNativeAnimationNextId = 1;\n\nvar Animation = function () {\n  var Animation = function Animation() {};\n\n  var _proto = Animation.prototype;\n\n  _proto.start = function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {};\n\n  _proto.stop = function stop() {\n    if (this.__nativeId) {\n      NativeAnimatedHelper.API.stopAnimation(this.__nativeId);\n    }\n  };\n\n  _proto.__getNativeAnimationConfig = function __getNativeAnimationConfig() {\n    throw new Error(\"This animation type cannot be offloaded to native\");\n  };\n\n  _proto.__debouncedOnEnd = function __debouncedOnEnd(result) {\n    var onEnd = this.__onEnd;\n    this.__onEnd = null;\n    onEnd && onEnd(result);\n  };\n\n  _proto.__startNativeAnimation = function __startNativeAnimation(animatedValue) {\n    var startNativeAnimationWaitId = startNativeAnimationNextId + \":startAnimation\";\n    startNativeAnimationNextId += 1;\n    NativeAnimatedHelper.API.setWaitingForIdentifier(startNativeAnimationWaitId);\n\n    try {\n      animatedValue.__makeNative();\n\n      this.__nativeId = NativeAnimatedHelper.generateNewAnimationId();\n      NativeAnimatedHelper.API.startAnimatingNode(this.__nativeId, animatedValue.__getNativeTag(), this.__getNativeAnimationConfig(), this.__debouncedOnEnd.bind(this));\n    } catch (e) {\n      throw e;\n    } finally {\n      NativeAnimatedHelper.API.unsetWaitingForIdentifier(startNativeAnimationWaitId);\n    }\n  };\n\n  return Animation;\n}();\n\nexport default Animation;\n;\n;\n\n(function () {\n  var _a, _b;\n\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n\n      import.meta.webpackHot.accept();\n\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["D:\\codes\\Next\\pomodoro-dash\\node_modules\\react-native-web\\dist\\vendor\\react-native\\Animated\\animations\\Animation.js"],"names":["NativeAnimatedHelper","startNativeAnimationNextId","Animation","_proto","prototype","start","fromValue","onUpdate","onEnd","previousAnimation","animatedValue","stop","__nativeId","API","stopAnimation","__getNativeAnimationConfig","Error","__debouncedOnEnd","result","__onEnd","__startNativeAnimation","startNativeAnimationWaitId","setWaitingForIdentifier","__makeNative","generateNewAnimationId","startAnimatingNode","__getNativeTag","bind","e","unsetWaitingForIdentifier"],"mappings":"AASA;;AAEA,OAAOA,oBAAP,MAAiC,yBAAjC;AACA,IAAIC,0BAA0B,GAAG,CAAjC;;AAIA,IAAIC,SAAS,GAAgB,YAAY;MAC9BA,SAAS,GAAlB,SAASA,SAAT,GAAqB,CAAE,C;;EAEvB,IAAIC,MAAM,GAAGD,SAAS,CAACE,SAAvB;;EAEAD,MAAM,CAACE,KAAPF,GAAe,SAASE,KAAT,CAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,KAApC,EAA2CC,iBAA3C,EAA8DC,aAA9D,EAA6E,CAAE,CAA9FP;;EAEAA,MAAM,CAACQ,IAAPR,GAAc,SAASQ,IAAT,GAAgB;IAC5B,IAAI,KAAKC,UAAT,EAAqB;MACnBZ,oBAAoB,CAACa,GAArBb,CAAyBc,aAAzBd,CAAuC,KAAKY,UAA5CZ;IACD;EACF,CAJDG;;EAMAA,MAAM,CAACY,0BAAPZ,GAAoC,SAASY,0BAAT,GAAsC;IAGxE,MAAM,IAAIC,KAAJ,CAAU,mDAAV,CAAN;EACD,CAJDb;;EAOAA,MAAM,CAACc,gBAAPd,GAA0B,SAASc,gBAAT,CAA0BC,MAA1B,EAAkC;IAC1D,IAAIV,KAAK,GAAG,KAAKW,OAAjB;IACA,KAAKA,OAAL,GAAe,IAAf;IACAX,KAAK,IAAIA,KAAK,CAACU,MAAD,CAAdV;EACD,CAJDL;;EAMAA,MAAM,CAACiB,sBAAPjB,GAAgC,SAASiB,sBAAT,CAAgCV,aAAhC,EAA+C;IAC7E,IAAIW,0BAA0B,GAAGpB,0BAA0B,GAAG,iBAA9D;IACAA,0BAA0B,IAAI,CAA9BA;IACAD,oBAAoB,CAACa,GAArBb,CAAyBsB,uBAAzBtB,CAAiDqB,0BAAjDrB;;IAEA,IAAI;MACFU,aAAa,CAACa,YAAdb;;MAEA,KAAKE,UAAL,GAAkBZ,oBAAoB,CAACwB,sBAArBxB,EAAlB;MACAA,oBAAoB,CAACa,GAArBb,CAAyByB,kBAAzBzB,CAA4C,KAAKY,UAAjDZ,EAA6DU,aAAa,CAACgB,cAAdhB,EAA7DV,EAA6F,KAAKe,0BAAL,EAA7Ff,EAAgI,KAAKiB,gBAAL,CAAsBU,IAAtB,CAA2B,IAA3B,CAAhI3B;IACD,CALD,CAKE,OAAO4B,CAAP,EAAU;MACV,MAAMA,CAAN;IACD,CAPD,SAOU;MACR5B,oBAAoB,CAACa,GAArBb,CAAyB6B,yBAAzB7B,CAAmDqB,0BAAnDrB;IACD;EACF,CAfDG;;EAiBA,OAAOD,SAAP;AACD,CA5C4B,EAA7B;;AA8CA,eAAeA,SAAf","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\nvar startNativeAnimationNextId = 1; // Important note: start() and stop() will only be called at most once.\n// Once an animation has been stopped or finished its course, it will\n// not be reused.\n\nvar Animation = /*#__PURE__*/function () {\n  function Animation() {}\n\n  var _proto = Animation.prototype;\n\n  _proto.start = function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {};\n\n  _proto.stop = function stop() {\n    if (this.__nativeId) {\n      NativeAnimatedHelper.API.stopAnimation(this.__nativeId);\n    }\n  };\n\n  _proto.__getNativeAnimationConfig = function __getNativeAnimationConfig() {\n    // Subclasses that have corresponding animation implementation done in native\n    // should override this method\n    throw new Error('This animation type cannot be offloaded to native');\n  } // Helper function for subclasses to make sure onEnd is only called once.\n  ;\n\n  _proto.__debouncedOnEnd = function __debouncedOnEnd(result) {\n    var onEnd = this.__onEnd;\n    this.__onEnd = null;\n    onEnd && onEnd(result);\n  };\n\n  _proto.__startNativeAnimation = function __startNativeAnimation(animatedValue) {\n    var startNativeAnimationWaitId = startNativeAnimationNextId + \":startAnimation\";\n    startNativeAnimationNextId += 1;\n    NativeAnimatedHelper.API.setWaitingForIdentifier(startNativeAnimationWaitId);\n\n    try {\n      animatedValue.__makeNative();\n\n      this.__nativeId = NativeAnimatedHelper.generateNewAnimationId();\n      NativeAnimatedHelper.API.startAnimatingNode(this.__nativeId, animatedValue.__getNativeTag(), this.__getNativeAnimationConfig(), this.__debouncedOnEnd.bind(this));\n    } catch (e) {\n      throw e;\n    } finally {\n      NativeAnimatedHelper.API.unsetWaitingForIdentifier(startNativeAnimationWaitId);\n    }\n  };\n\n  return Animation;\n}();\n\nexport default Animation;"]},"metadata":{},"sourceType":"module"}