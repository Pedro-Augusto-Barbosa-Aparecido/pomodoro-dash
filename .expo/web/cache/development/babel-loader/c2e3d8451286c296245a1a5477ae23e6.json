{"ast":null,"code":"import _object_spread from \"@swc/helpers/src/_object_spread.mjs\";\nimport _sliced_to_array from \"@swc/helpers/src/_sliced_to_array.mjs\";\nimport _to_consumable_array from \"@swc/helpers/src/_to_consumable_array.mjs\";\n\nvar _s = $RefreshSig$();\n\nimport get from \"lodash.get\";\nimport merge from \"lodash.merge\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { useNativeBase } from \"../useNativeBase\";\nimport { useColorMode } from \"../../core/color-mode\";\nimport { omitUndefined, extractInObject } from \"../../theme/tools\";\nimport { useContrastText } from \"../useContrastText\";\nimport { useBreakpointResolvedProps } from \"../useBreakpointResolvedProps\";\nimport { propsFlattener, compareSpecificity } from \"./propsFlattenerTest\";\nvar SPREAD_PROP_SPECIFICITY_ORDER = [\"p\", \"padding\", \"px\", \"py\", \"pt\", \"pb\", \"pl\", \"pr\", \"paddingTop\", \"paddingBottom\", \"paddingLeft\", \"paddingRight\", \"m\", \"margin\", \"mx\", \"my\", \"mt\", \"mb\", \"ml\", \"mr\", \"marginTop\", \"marginBottom\", \"marginLeft\", \"marginRight\"];\nvar FINAL_SPREAD_PROPS = [\"paddingTop\", \"paddingBottom\", \"paddingLeft\", \"paddingRight\", \"marginTop\", \"marginBottom\", \"marginLeft\", \"marginRight\"];\nvar MARGIN_MAP = {\n  mx: [\"marginRight\", \"marginLeft\"],\n  my: [\"marginTop\", \"marginBottom\"],\n  mt: [\"marginTop\"],\n  mb: [\"marginBottom\"],\n  mr: [\"marginRight\"],\n  ml: [\"marginLeft\"]\n};\nMARGIN_MAP.margin = _to_consumable_array(MARGIN_MAP.mx).concat(_to_consumable_array(MARGIN_MAP.my));\nMARGIN_MAP.m = MARGIN_MAP.margin;\nMARGIN_MAP.marginTop = MARGIN_MAP.mt;\nMARGIN_MAP.marginBottom = MARGIN_MAP.mb;\nMARGIN_MAP.marginLeft = MARGIN_MAP.ml;\nMARGIN_MAP.marginRight = MARGIN_MAP.mr;\nvar PADDING_MAP = {\n  px: [\"paddingRight\", \"paddingLeft\"],\n  py: [\"paddingTop\", \"paddingBottom\"],\n  pt: [\"paddingTop\"],\n  pb: [\"paddingBottom\"],\n  pr: [\"paddingRight\"],\n  pl: [\"paddingLeft\"]\n};\nPADDING_MAP.padding = _to_consumable_array(PADDING_MAP.px).concat(_to_consumable_array(PADDING_MAP.py));\nPADDING_MAP.p = PADDING_MAP.padding;\nPADDING_MAP.paddingTop = PADDING_MAP.pt;\nPADDING_MAP.paddingBottom = PADDING_MAP.pb;\nPADDING_MAP.paddingLeft = PADDING_MAP.pl;\nPADDING_MAP.paddingRight = PADDING_MAP.pr;\n\nvar SPREAD_PROP_SPECIFICITY_MAP = _object_spread({}, PADDING_MAP, MARGIN_MAP);\n\nfunction propsSpreader(incomingProps, incomingSpecifity) {\n  var flattenedDefaultProps = _object_spread({}, incomingProps);\n\n  var specificity = {};\n  SPREAD_PROP_SPECIFICITY_ORDER.forEach(function (prop) {\n    if (prop in flattenedDefaultProps) {\n      var val = incomingProps[prop] || flattenedDefaultProps[prop];\n\n      if (!FINAL_SPREAD_PROPS.includes(prop)) {\n        delete flattenedDefaultProps[prop];\n        specificity[prop] = incomingSpecifity[prop];\n      }\n\n      SPREAD_PROP_SPECIFICITY_MAP[prop].forEach(function (newProp) {\n        if (compareSpecificity(specificity[newProp], specificity[prop])) {\n          specificity[newProp] = incomingSpecifity[prop];\n          flattenedDefaultProps[newProp] = val;\n        }\n      });\n    }\n  });\n  return merge({}, flattenedDefaultProps);\n}\n\nexport function usePropsResolutionTest(component, incomingProps, state, config) {\n  _s();\n\n  var _flattenProps$bg, _flattenProps$backgro, _flattenProps$bgColor, _flattenProps$backgro2, _ref, _flattenProps$bg2, _flattenProps, _flattenProps$_text, _flattenProps2, _flattenProps2$_text;\n\n  var ref = _sliced_to_array(extractInObject(incomingProps, [\"children\", \"onPress\", \"icon\", \"onOpen\", \"onClose\"].concat((config === null || config === void 0 ? void 0 : config.ignoreProps) || [])), 2),\n      ignoredProps = ref[0],\n      cleanIncomingProps = ref[1];\n\n  var resolveResponsively = [\"colorScheme\", \"size\", \"variant\"].concat(_to_consumable_array((config === null || config === void 0 ? void 0 : config.resolveResponsively) || []));\n  var theme = useNativeBase().theme;\n  var colorModeProps = useColorMode();\n  var componentTheme = get(theme, \"components.\".concat(component), {});\n  var incomingWithDefaultProps = merge({}, componentTheme.defaultProps || {}, cleanIncomingProps);\n\n  var ref1 = _sliced_to_array(propsFlattener({\n    props: incomingWithDefaultProps,\n    platform: Platform.OS,\n    colormode: colorModeProps.colorMode,\n    state: state || {},\n    previouslyFlattenProps: {}\n  }, 2), 2),\n      flattenProps = ref1[0],\n      specificityMap = ref1[1];\n\n  var responsiveProps = {};\n  resolveResponsively.map(function (propsName) {\n    if (flattenProps[propsName]) {\n      responsiveProps[propsName] = flattenProps[propsName];\n    }\n  });\n  var responsivelyResolvedProps = useBreakpointResolvedProps(responsiveProps);\n  flattenProps = _object_spread({}, flattenProps, responsivelyResolvedProps);\n  var componentBaseStyle = {},\n      flattenBaseStyle,\n      baseSpecificityMap;\n\n  if (componentTheme.baseStyle) {\n    componentBaseStyle = typeof componentTheme.baseStyle !== \"function\" ? componentTheme.baseStyle : componentTheme.baseStyle(_object_spread({\n      theme: theme\n    }, flattenProps, colorModeProps));\n    var ref2;\n    ref2 = _sliced_to_array(propsFlattener({\n      props: componentBaseStyle,\n      platform: Platform.OS,\n      colormode: colorModeProps.colorMode,\n      state: state || {},\n      currentSpecificityMap: specificityMap,\n      previouslyFlattenProps: flattenProps\n    }, 1), 2), flattenBaseStyle = ref2[0], baseSpecificityMap = ref2[1], ref2;\n  }\n\n  var variant = flattenProps.variant;\n  var componentVariantProps = {},\n      flattenVariantStyle,\n      variantSpecificityMap;\n\n  if (variant && componentTheme.variants && componentTheme.variants[variant]) {\n    componentVariantProps = typeof componentTheme.variants[variant] !== \"function\" ? componentTheme.variants[variant] : componentTheme.variants[variant](_object_spread({\n      theme: theme\n    }, flattenProps, colorModeProps));\n    var ref3;\n    ref3 = _sliced_to_array(propsFlattener({\n      props: componentVariantProps,\n      platform: Platform.OS,\n      colormode: colorModeProps.colorMode,\n      state: state || {},\n      currentSpecificityMap: baseSpecificityMap || specificityMap,\n      previouslyFlattenProps: flattenProps\n    }, 1), 2), flattenVariantStyle = ref3[0], variantSpecificityMap = ref3[1], ref3;\n    flattenProps.variant = undefined;\n  }\n\n  var size = flattenProps.size;\n  var componentSizeProps = {},\n      flattenSizeStyle,\n      sizeSpecificityMap;\n\n  if (size && componentTheme.sizes && componentTheme.sizes[size]) {\n    if (typeof componentTheme.sizes[size] === \"string\" || typeof componentTheme.sizes[size] === \"number\") {\n      flattenProps.size = componentTheme.sizes[size];\n    } else if (typeof componentTheme.sizes[size] === \"function\") {\n      flattenProps.size = undefined;\n      componentSizeProps = componentTheme.sizes[size](_object_spread({\n        theme: theme\n      }, flattenProps, colorModeProps));\n    } else {\n      flattenProps.size = undefined;\n      componentSizeProps = componentTheme.sizes[size];\n    }\n\n    var ref4;\n    ref4 = _sliced_to_array(propsFlattener({\n      props: componentSizeProps,\n      platform: Platform.OS,\n      colormode: colorModeProps.colorMode,\n      state: state || {},\n      currentSpecificityMap: variantSpecificityMap || baseSpecificityMap || specificityMap,\n      previouslyFlattenProps: flattenProps\n    }, 1), 2), flattenSizeStyle = ref4[0], sizeSpecificityMap = ref4[1], ref4;\n  }\n\n  var defaultStyles = merge({}, flattenBaseStyle, flattenVariantStyle, flattenSizeStyle);\n\n  for (var prop in defaultStyles) {\n    delete flattenProps[prop];\n  }\n\n  var defaultSpecificity = merge({}, specificityMap, baseSpecificityMap, variantSpecificityMap, sizeSpecificityMap);\n  flattenProps = propsSpreader(_object_spread({}, defaultStyles, flattenProps), defaultSpecificity);\n  var ignore = [];\n\n  if ((_flattenProps$bg = flattenProps.bg) !== null && _flattenProps$bg !== void 0 && _flattenProps$bg.linearGradient || (_flattenProps$backgro = flattenProps.background) !== null && _flattenProps$backgro !== void 0 && _flattenProps$backgro.linearGradient || (_flattenProps$bgColor = flattenProps.bgColor) !== null && _flattenProps$bgColor !== void 0 && _flattenProps$bgColor.linearGradient || (_flattenProps$backgro2 = flattenProps.backgroundColor) !== null && _flattenProps$backgro2 !== void 0 && _flattenProps$backgro2.linearGradient) {\n    var _flattenProps$backgro3, _flattenProps$bgColor2, _flattenProps$backgro4;\n\n    var bgProp = \"bg\";\n\n    if ((_flattenProps$backgro3 = flattenProps.background) !== null && _flattenProps$backgro3 !== void 0 && _flattenProps$backgro3.linearGradient) {\n      bgProp = \"background\";\n    } else if ((_flattenProps$bgColor2 = flattenProps.bgColor) !== null && _flattenProps$bgColor2 !== void 0 && _flattenProps$bgColor2.linearGradient) {\n      bgProp = \"bgColor\";\n    } else if ((_flattenProps$backgro4 = flattenProps.backgroundColor) !== null && _flattenProps$backgro4 !== void 0 && _flattenProps$backgro4.linearGradient) {\n      bgProp = \"backgroundColor\";\n    }\n\n    flattenProps[bgProp].linearGradient.colors = flattenProps[bgProp].linearGradient.colors.map(function (color) {\n      return get(theme.colors, color, color);\n    });\n    ignore = [\"bg\", \"background\", \"backgroundColor\", \"bgColor\"];\n  }\n\n  var ref5 = _sliced_to_array(extractInObject(flattenProps, ignore), 1),\n      gradientProps = ref5[0];\n\n  var bgColor = (_ref = (_flattenProps$bg2 = flattenProps.bg) !== null && _flattenProps$bg2 !== void 0 ? _flattenProps$bg2 : flattenProps.backgroundColor) !== null && _ref !== void 0 ? _ref : flattenProps.bgColor;\n  var contrastTextColor = useContrastText(bgColor, (_flattenProps = flattenProps) === null || _flattenProps === void 0 ? void 0 : (_flattenProps$_text = _flattenProps._text) === null || _flattenProps$_text === void 0 ? void 0 : _flattenProps$_text.color);\n  flattenProps._text = contrastTextColor && ((_flattenProps2 = flattenProps) === null || _flattenProps2 === void 0 ? void 0 : (_flattenProps2$_text = _flattenProps2._text) === null || _flattenProps2$_text === void 0 ? void 0 : _flattenProps2$_text.color) === undefined ? _object_spread({\n    color: contrastTextColor\n  }, flattenProps._text) : flattenProps._text;\n  var resolvedProps = omitUndefined(_object_spread({}, flattenProps, ignoredProps, gradientProps));\n  return resolvedProps;\n}\n\n_s(usePropsResolutionTest, \"eOh6P/0ID2jV9apOIunm6VGj6FI=\", false, function () {\n  return [useNativeBase, useColorMode, useBreakpointResolvedProps, useContrastText];\n});\n\n;\n;\n\n(function () {\n  var _a, _b;\n\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n\n      import.meta.webpackHot.accept();\n\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["D:\\codes\\Next\\pomodoro-dash\\node_modules\\native-base\\lib\\module\\hooks\\useThemeProps\\usePropsResolutionTest.js"],"names":["get","merge","useNativeBase","useColorMode","omitUndefined","extractInObject","useContrastText","useBreakpointResolvedProps","propsFlattener","compareSpecificity","SPREAD_PROP_SPECIFICITY_ORDER","FINAL_SPREAD_PROPS","MARGIN_MAP","mx","my","mt","mb","mr","ml","margin","m","marginTop","marginBottom","marginLeft","marginRight","PADDING_MAP","px","py","pt","pb","pr","pl","padding","p","paddingTop","paddingBottom","paddingLeft","paddingRight","SPREAD_PROP_SPECIFICITY_MAP","propsSpreader","incomingProps","incomingSpecifity","flattenedDefaultProps","specificity","forEach","prop","val","includes","newProp","usePropsResolutionTest","component","state","config","_flattenProps$bg","_flattenProps$backgro","_flattenProps$bgColor","_flattenProps$backgro2","_ref","_flattenProps$bg2","_flattenProps","_flattenProps$_text","_flattenProps2","_flattenProps2$_text","ignoredProps","cleanIncomingProps","concat","ignoreProps","resolveResponsively","theme","colorModeProps","componentTheme","incomingWithDefaultProps","defaultProps","flattenProps","specificityMap","props","platform","Platform","OS","colormode","colorMode","previouslyFlattenProps","responsiveProps","map","propsName","responsivelyResolvedProps","componentBaseStyle","flattenBaseStyle","baseSpecificityMap","baseStyle","currentSpecificityMap","variant","componentVariantProps","flattenVariantStyle","variantSpecificityMap","variants","undefined","size","componentSizeProps","flattenSizeStyle","sizeSpecificityMap","sizes","defaultStyles","defaultSpecificity","ignore","bg","linearGradient","background","bgColor","backgroundColor","_flattenProps$backgro3","_flattenProps$bgColor2","_flattenProps$backgro4","bgProp","colors","color","gradientProps","contrastTextColor","_text","resolvedProps"],"mappings":"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","sourcesContent":["import get from 'lodash.get';\nimport merge from 'lodash.merge';\nimport { Platform } from 'react-native';\nimport { useNativeBase } from '../useNativeBase';\nimport { useColorMode } from '../../core/color-mode';\nimport { omitUndefined, extractInObject } from '../../theme/tools';\nimport { useContrastText } from '../useContrastText';\nimport { useBreakpointResolvedProps } from '../useBreakpointResolvedProps';\nimport { propsFlattener, compareSpecificity } from './propsFlattenerTest';\nconst SPREAD_PROP_SPECIFICITY_ORDER = ['p', 'padding', 'px', 'py', 'pt', 'pb', 'pl', 'pr', 'paddingTop', 'paddingBottom', 'paddingLeft', 'paddingRight', 'm', 'margin', 'mx', 'my', 'mt', 'mb', 'ml', 'mr', 'marginTop', 'marginBottom', 'marginLeft', 'marginRight'];\nconst FINAL_SPREAD_PROPS = ['paddingTop', 'paddingBottom', 'paddingLeft', 'paddingRight', 'marginTop', 'marginBottom', 'marginLeft', 'marginRight'];\nconst MARGIN_MAP = {\n  mx: ['marginRight', 'marginLeft'],\n  my: ['marginTop', 'marginBottom'],\n  mt: ['marginTop'],\n  mb: ['marginBottom'],\n  mr: ['marginRight'],\n  ml: ['marginLeft']\n};\nMARGIN_MAP.margin = [...MARGIN_MAP.mx, ...MARGIN_MAP.my];\nMARGIN_MAP.m = MARGIN_MAP.margin;\nMARGIN_MAP.marginTop = MARGIN_MAP.mt;\nMARGIN_MAP.marginBottom = MARGIN_MAP.mb;\nMARGIN_MAP.marginLeft = MARGIN_MAP.ml;\nMARGIN_MAP.marginRight = MARGIN_MAP.mr;\nconst PADDING_MAP = {\n  px: ['paddingRight', 'paddingLeft'],\n  py: ['paddingTop', 'paddingBottom'],\n  pt: ['paddingTop'],\n  pb: ['paddingBottom'],\n  pr: ['paddingRight'],\n  pl: ['paddingLeft']\n};\nPADDING_MAP.padding = [...PADDING_MAP.px, ...PADDING_MAP.py];\nPADDING_MAP.p = PADDING_MAP.padding;\nPADDING_MAP.paddingTop = PADDING_MAP.pt;\nPADDING_MAP.paddingBottom = PADDING_MAP.pb;\nPADDING_MAP.paddingLeft = PADDING_MAP.pl;\nPADDING_MAP.paddingRight = PADDING_MAP.pr;\nconst SPREAD_PROP_SPECIFICITY_MAP = { ...PADDING_MAP,\n  ...MARGIN_MAP\n};\n\nfunction propsSpreader(incomingProps, incomingSpecifity) {\n  const flattenedDefaultProps = { ...incomingProps\n  };\n  const specificity = {};\n  SPREAD_PROP_SPECIFICITY_ORDER.forEach(prop => {\n    if (prop in flattenedDefaultProps) {\n      const val = incomingProps[prop] || flattenedDefaultProps[prop];\n\n      if (!FINAL_SPREAD_PROPS.includes(prop)) {\n        delete flattenedDefaultProps[prop];\n        specificity[prop] = incomingSpecifity[prop];\n      }\n\n      SPREAD_PROP_SPECIFICITY_MAP[prop].forEach(newProp => {\n        if (compareSpecificity(specificity[newProp], specificity[prop])) {\n          specificity[newProp] = incomingSpecifity[prop];\n          flattenedDefaultProps[newProp] = val;\n        }\n      });\n    }\n  });\n  return merge({}, flattenedDefaultProps);\n}\n/**\n * @summary Combines provided porps with component's theme props and resloves them.\n * @arg {string} component - Name of the component.\n * @arg {object} incomingProps - Props passed by the user.\n * @arg {object} state - dependent states.\n * @arg {object} config - configuration for resolution. Accepts key like ignoreProps, resolveResponsively.\n * @returns {object} Resolved and flattened props.\n */\n\n\nexport function usePropsResolutionTest(component, incomingProps, state, config) {\n  var _flattenProps$bg, _flattenProps$backgro, _flattenProps$bgColor, _flattenProps$backgro2, _ref, _flattenProps$bg2, _flattenProps, _flattenProps$_text, _flattenProps2, _flattenProps2$_text;\n\n  const [ignoredProps, cleanIncomingProps] = extractInObject(incomingProps, ['children', 'onPress', 'icon', 'onOpen', 'onClose'].concat((config === null || config === void 0 ? void 0 : config.ignoreProps) || []));\n  const resolveResponsively = ['colorScheme', 'size', 'variant', ...((config === null || config === void 0 ? void 0 : config.resolveResponsively) || [])];\n  const {\n    theme\n  } = useNativeBase();\n  const colorModeProps = useColorMode();\n  const componentTheme = get(theme, \"components.\".concat(component), {}); // STEP 1: combine default props and incoming props\n\n  const incomingWithDefaultProps = merge({}, componentTheme.defaultProps || {}, cleanIncomingProps); // STEP 2: flatten them\n\n  let [flattenProps, specificityMap] = propsFlattener({\n    props: incomingWithDefaultProps,\n    platform: Platform.OS,\n    colormode: colorModeProps.colorMode,\n    state: state || {},\n    previouslyFlattenProps: {}\n  }, 2); // STEP 2.5: resolving responsive props\n\n  const responsiveProps = {};\n  resolveResponsively.map(propsName => {\n    if (flattenProps[propsName]) {\n      // @ts-ignore\n      responsiveProps[propsName] = flattenProps[propsName];\n    }\n  });\n  const responsivelyResolvedProps = useBreakpointResolvedProps(responsiveProps);\n  flattenProps = { ...flattenProps,\n    ...responsivelyResolvedProps\n  }; // STEP 3: Pass it to baseStyle, then variant and then size and resolve them.\n  // NOTE: Resoloving baseStyle\n\n  let componentBaseStyle = {},\n      flattenBaseStyle,\n      baseSpecificityMap;\n\n  if (componentTheme.baseStyle) {\n    componentBaseStyle = typeof componentTheme.baseStyle !== 'function' ? componentTheme.baseStyle : componentTheme.baseStyle({\n      theme,\n      ...flattenProps,\n      ...colorModeProps\n    });\n    [flattenBaseStyle, baseSpecificityMap] = propsFlattener({\n      props: componentBaseStyle,\n      platform: Platform.OS,\n      colormode: colorModeProps.colorMode,\n      state: state || {},\n      currentSpecificityMap: specificityMap,\n      previouslyFlattenProps: flattenProps\n    }, 1);\n  } // NOTE: Resolving variants\n\n\n  const variant = flattenProps.variant;\n  let componentVariantProps = {},\n      flattenVariantStyle,\n      variantSpecificityMap; // Extracting props from variant\n\n  if (variant && componentTheme.variants && componentTheme.variants[variant]) {\n    componentVariantProps = typeof componentTheme.variants[variant] !== 'function' ? componentTheme.variants[variant] : componentTheme.variants[variant]({\n      theme,\n      ...flattenProps,\n      ...colorModeProps\n    });\n    [flattenVariantStyle, variantSpecificityMap] = propsFlattener({\n      props: componentVariantProps,\n      platform: Platform.OS,\n      colormode: colorModeProps.colorMode,\n      state: state || {},\n      currentSpecificityMap: baseSpecificityMap || specificityMap,\n      // NOTE: Ideally flattenBaseStyle and flattenProps should be deeply merged to create previouslyFlattenProps.\n      previouslyFlattenProps: flattenProps\n    }, 1); // We remove variant from original props if we found it in the componentTheme\n    //@ts-ignore\n\n    flattenProps.variant = undefined;\n  } // NOTE: Resolving size\n\n\n  const size = flattenProps.size;\n  let componentSizeProps = {},\n      flattenSizeStyle,\n      sizeSpecificityMap; // Extracting props from size\n\n  if (size && componentTheme.sizes && componentTheme.sizes[size]) {\n    // Type - sizes: {lg: 1}. Refer icon theme\n    if (typeof componentTheme.sizes[size] === 'string' || typeof componentTheme.sizes[size] === 'number') {\n      flattenProps.size = componentTheme.sizes[size]; //@ts-ignore\n      // componentSizeProps.size = componentTheme.sizes[size];\n    } // Type - sizes: (props) => ({lg: {px: 1}}). Refer heading theme\n    else if (typeof componentTheme.sizes[size] === 'function') {\n        flattenProps.size = undefined;\n        componentSizeProps = componentTheme.sizes[size]({\n          theme,\n          ...flattenProps,\n          ...colorModeProps\n        });\n      } // Type - sizes: {lg: {px: 1}}. Refer button theme\n      else {\n          flattenProps.size = undefined;\n          componentSizeProps = componentTheme.sizes[size];\n        }\n\n    [flattenSizeStyle, sizeSpecificityMap] = propsFlattener({\n      props: componentSizeProps,\n      platform: Platform.OS,\n      colormode: colorModeProps.colorMode,\n      state: state || {},\n      currentSpecificityMap: variantSpecificityMap || baseSpecificityMap || specificityMap,\n      previouslyFlattenProps: flattenProps\n    }, 1);\n  } // // STEP 4: merge\n\n\n  const defaultStyles = merge({}, flattenBaseStyle, flattenVariantStyle, flattenSizeStyle);\n\n  for (const prop in defaultStyles) {\n    delete flattenProps[prop];\n  }\n\n  const defaultSpecificity = merge({}, specificityMap, baseSpecificityMap, variantSpecificityMap, sizeSpecificityMap);\n  flattenProps = propsSpreader({ ...defaultStyles,\n    ...flattenProps\n  }, defaultSpecificity); // // STEP 5: linear Grad and contrastText\n\n  let ignore = [];\n\n  if ((_flattenProps$bg = flattenProps.bg) !== null && _flattenProps$bg !== void 0 && _flattenProps$bg.linearGradient || (_flattenProps$backgro = flattenProps.background) !== null && _flattenProps$backgro !== void 0 && _flattenProps$backgro.linearGradient || (_flattenProps$bgColor = flattenProps.bgColor) !== null && _flattenProps$bgColor !== void 0 && _flattenProps$bgColor.linearGradient || (_flattenProps$backgro2 = flattenProps.backgroundColor) !== null && _flattenProps$backgro2 !== void 0 && _flattenProps$backgro2.linearGradient) {\n    var _flattenProps$backgro3, _flattenProps$bgColor2, _flattenProps$backgro4;\n\n    let bgProp = 'bg';\n\n    if ((_flattenProps$backgro3 = flattenProps.background) !== null && _flattenProps$backgro3 !== void 0 && _flattenProps$backgro3.linearGradient) {\n      bgProp = 'background';\n    } else if ((_flattenProps$bgColor2 = flattenProps.bgColor) !== null && _flattenProps$bgColor2 !== void 0 && _flattenProps$bgColor2.linearGradient) {\n      bgProp = 'bgColor';\n    } else if ((_flattenProps$backgro4 = flattenProps.backgroundColor) !== null && _flattenProps$backgro4 !== void 0 && _flattenProps$backgro4.linearGradient) {\n      bgProp = 'backgroundColor';\n    }\n\n    flattenProps[bgProp].linearGradient.colors = flattenProps[bgProp].linearGradient.colors.map(color => {\n      return get(theme.colors, color, color);\n    });\n    ignore = ['bg', 'background', 'backgroundColor', 'bgColor'];\n  } // // NOTE: seprating bg props when linearGardiant is available\n\n\n  const [gradientProps] = extractInObject(flattenProps, ignore);\n  const bgColor = (_ref = (_flattenProps$bg2 = flattenProps.bg) !== null && _flattenProps$bg2 !== void 0 ? _flattenProps$bg2 : flattenProps.backgroundColor) !== null && _ref !== void 0 ? _ref : flattenProps.bgColor;\n  const contrastTextColor = useContrastText(bgColor, (_flattenProps = flattenProps) === null || _flattenProps === void 0 ? void 0 : (_flattenProps$_text = _flattenProps._text) === null || _flattenProps$_text === void 0 ? void 0 : _flattenProps$_text.color);\n  flattenProps._text = contrastTextColor && ((_flattenProps2 = flattenProps) === null || _flattenProps2 === void 0 ? void 0 : (_flattenProps2$_text = _flattenProps2._text) === null || _flattenProps2$_text === void 0 ? void 0 : _flattenProps2$_text.color) === undefined ? {\n    color: contrastTextColor,\n    ...flattenProps._text\n  } : flattenProps._text;\n  const resolvedProps = omitUndefined({ ...flattenProps,\n    ...ignoredProps,\n    ...gradientProps\n  }); // STEP 6: Return\n  // flattenProps = {};\n  // propertyDepth = {};\n\n  return resolvedProps;\n}\n//# sourceMappingURL=usePropsResolutionTest.js.map"]},"metadata":{},"sourceType":"module"}