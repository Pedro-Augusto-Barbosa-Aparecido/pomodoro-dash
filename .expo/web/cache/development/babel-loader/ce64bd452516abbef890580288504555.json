{"ast":null,"code":"import _object_spread from \"@swc/helpers/src/_object_spread.mjs\";\nimport _object_spread_props from \"@swc/helpers/src/_object_spread_props.mjs\";\nimport base from \"./base\";\nimport components from \"./components\";\nimport * as tools from \"./tools\";\nvar config = {\n  useSystemColorMode: false,\n  initialColorMode: \"light\",\n  accessibleColors: false\n};\n\nvar theme = _object_spread_props(_object_spread({}, base), {\n  components: components,\n  config: config\n});\n\nexport { theme, tools as themeTools };\nexport { getColor } from \"./styled-system\";\nexport * from \"./v33x-theme\";\n;\n;\n\n(function () {\n  var _a, _b;\n\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n\n      import.meta.webpackHot.accept();\n\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["D:\\codes\\Next\\pomodoro-dash\\node_modules\\native-base\\lib\\module\\theme\\index.js"],"names":["base","components","tools","config","useSystemColorMode","initialColorMode","accessibleColors","theme","themeTools","getColor"],"mappings":"AAAA,OAAA,cAAA,MAAA,qCAAA;;AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAA,KAAYC,KAAZ,MAAuB,SAAvB;AACA,IAAMC,MAAM,GAAG;EACbC,kBAAkB,EAAE,KADP;EAGbC,gBAAgB,EAAE,OAHL;EAIbC,gBAAgB,EAAE;AAJL,CAAf;;AAMA,IAAMC,KAAK,GAAG,oBAAA,CAAA,cAAA,CAAA,EAAA,EAAKP,IAAL,CAAA,EAAS;EACrBC,UAAU,EAAVA,UADqB;EAErBE,MAAM,EAANA;AAFqB,CAAT,CAAd;;AAIA,SAASI,KAAT,EAAgBL,KAAK,IAAIM,UAAzB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,cAAc,cAAd","sourcesContent":["import base from './base';\nimport components from './components';\nimport * as tools from './tools';\nconst config = {\n  useSystemColorMode: false,\n  // TODO: implement this\n  initialColorMode: 'light',\n  accessibleColors: false\n};\nconst theme = { ...base,\n  components,\n  config\n};\nexport { theme, tools as themeTools };\nexport { getColor } from './styled-system';\nexport * from './v33x-theme';\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}