{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\n\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\n\nvar _excluded = [\"children\"];\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Hidden = Hidden;\nexports.default = void 0;\n\nvar _react = require(\"react\");\n\nvar _useThemeProps = require(\"../../../hooks/useThemeProps\");\n\nvar _hooks = require(\"../../../hooks\");\n\nvar _hooks2 = require(\"../../../core/color-mode/hooks\");\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nfunction Hidden(_ref) {\n  var children = _ref.children,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _ref2 = (0, _useThemeProps.usePropsResolution)(\"Hidden\", props, {}, {\n    ignoreProps: [\"only\", \"platform\"]\n  }),\n      from = _ref2.from,\n      till = _ref2.till,\n      only = _ref2.only,\n      platform = _ref2.platform,\n      colorMode = _ref2.colorMode;\n\n  var _ref3 = (0, _hooks.useTheme)(),\n      breakpoints = _ref3.breakpoints;\n\n  var currentColorMode = (0, _hooks2.useColorMode)();\n  var breakpointValueObject = Object.keys(breakpoints).reduce(function (obj, val) {\n    obj[val] = val;\n    return obj;\n  }, {});\n  var breakpointValue = (0, _hooks.useBreakpointValue)(breakpointValueObject);\n\n  var _ref4 = (0, _hooks.useToken)(\"breakpoints\", [breakpointValue]),\n      _ref5 = _slicedToArray(_ref4, 1),\n      currentBreakpointValue = _ref5[0];\n\n  var _ref6 = (0, _hooks.useToken)(\"breakpoints\", [from]),\n      _ref7 = _slicedToArray(_ref6, 1),\n      fromBreakPointValue = _ref7[0];\n\n  var _ref8 = (0, _hooks.useToken)(\"breakpoints\", [till]),\n      _ref9 = _slicedToArray(_ref8, 1),\n      tillBreakPointValue = _ref9[0];\n\n  if (!from && !till && !only && !colorMode && !platform) {\n    return null;\n  } else if (from && till && currentBreakpointValue >= fromBreakPointValue && currentBreakpointValue < tillBreakPointValue) {\n    return null;\n  } else if (from && !till && currentBreakpointValue >= fromBreakPointValue) {\n    return null;\n  } else if (till && !from && currentBreakpointValue < tillBreakPointValue) {\n    return null;\n  } else if (Array.isArray(only) && only.includes(breakpointValue) || only === breakpointValue) {\n    return null;\n  } else if (Array.isArray(platform) && platform.includes(_reactNative.Platform.OS) || platform === _reactNative.Platform.OS) {\n    return null;\n  } else if (colorMode === currentColorMode.colorMode) {\n    return null;\n  }\n\n  return children;\n}\n\nvar _default = (0, _react.memo)(Hidden);\n\nexports.default = _default;","map":{"version":3,"sources":["D:\\codes\\Next\\pomodoro-dash\\node_modules\\native-base\\lib\\commonjs\\components\\primitives\\Hidden\\index.js"],"names":["Object","defineProperty","exports","value","Hidden","default","_react","require","_useThemeProps","_hooks","_hooks2","children","props","from","till","only","platform","colorMode","usePropsResolution","ignoreProps","breakpoints","useTheme","currentColorMode","useColorMode","breakpointValueObject","keys","reduce","obj","val","breakpointValue","useBreakpointValue","currentBreakpointValue","useToken","fromBreakPointValue","tillBreakPointValue","Array","isArray","includes","_reactNative","Platform","OS","_default","memo"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Hidden = Hidden;\nexports.default = void 0;\n\nvar _react = require(\"react\");\n\nvar _useThemeProps = require(\"../../../hooks/useThemeProps\");\n\nvar _hooks = require(\"../../../hooks\");\n\nvar _hooks2 = require(\"../../../core/color-mode/hooks\");\n\nvar _reactNative = require(\"react-native\");\n\nfunction Hidden({\n  children,\n  ...props\n}) {\n  const {\n    from,\n    till,\n    only,\n    platform,\n    colorMode\n  } = (0, _useThemeProps.usePropsResolution)('Hidden', props, {}, {\n    ignoreProps: ['only', 'platform']\n  });\n  const {\n    breakpoints\n  } = (0, _hooks.useTheme)();\n  const currentColorMode = (0, _hooks2.useColorMode)();\n  const breakpointValueObject = Object.keys(breakpoints).reduce((obj, val) => {\n    obj[val] = val;\n    return obj;\n  }, {});\n  const breakpointValue = (0, _hooks.useBreakpointValue)(breakpointValueObject);\n  const [currentBreakpointValue] = (0, _hooks.useToken)('breakpoints', [breakpointValue]);\n  const [fromBreakPointValue] = (0, _hooks.useToken)('breakpoints', [from]);\n  const [tillBreakPointValue] = (0, _hooks.useToken)('breakpoints', [till]); //if no prop is passed, it will hide the element wrapped with hidden\n\n  if (!from && !till && !only && !colorMode && !platform) {\n    return null;\n  } //if from and till prop exists, it will hide the element wrapped accordingly\n  else if (from && till && currentBreakpointValue >= fromBreakPointValue && currentBreakpointValue < tillBreakPointValue) {\n      return null;\n    } //if from prop exists, it will hide the element wrapped starting from that breakpoint.\n    else if (from && !till && currentBreakpointValue >= fromBreakPointValue) {\n        return null;\n      } //if till prop exists, it will hide the element wrapped starting from  0 till that breakpoint.\n      else if (till && !from && currentBreakpointValue < tillBreakPointValue) {\n          return null;\n        } //if only prop exists and is array, check that array consists current breakpoint value, and if that exists, hide on that breakpoint to next breakpoint.\n        // if only prop is string, hide on that breakpoint to next breakpoint.\n        else if (Array.isArray(only) && only.includes(breakpointValue) || only === breakpointValue) {\n            return null;\n          } //if platform prop exists and is array, check that array consists current platform value, and if that exists, hide on that platform.\n          // if platform prop is string, hide on that platform.\n          else if (Array.isArray(platform) && platform.includes(_reactNative.Platform.OS) || platform === _reactNative.Platform.OS) {\n              return null;\n            } //if colormode prop is valid string, hide on that colormode.\n            else if (colorMode === currentColorMode.colorMode) {\n                return null;\n              }\n\n  return children;\n}\n\nvar _default = /*#__PURE__*/(0, _react.memo)(Hidden);\n\nexports.default = _default;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}