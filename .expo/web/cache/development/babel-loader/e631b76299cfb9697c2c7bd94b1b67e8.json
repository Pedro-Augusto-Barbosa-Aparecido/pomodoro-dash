{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s1 = $RefreshSig$();\n\nimport { useFocusManager } from \"@react-aria/focus\";\nimport { useId } from \"@react-aria/utils\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nexport var useMenuTrigger = function useMenuTrigger(param) {\n  var handleOpen = param.handleOpen,\n      isOpen = param.isOpen;\n\n  _s();\n\n  var menuTriggerId = useId();\n  return {\n    \"onKeyDownCapture\": function onKeyDownCapture(event) {\n      if ([\" \", \"Enter\", \"ArrowUp\", \"ArrowDown\"].includes(event.key)) {\n        event.preventDefault();\n        handleOpen();\n      }\n    },\n    \"aria-haspopup\": \"menu\",\n    \"aria-expanded\": isOpen ? true : undefined,\n    \"nativeID\": menuTriggerId\n  };\n};\n\n_s(useMenuTrigger, \"WIniQbgrG9QuwlCGdx2QSzgUCpE=\", false, function () {\n  return [useId];\n});\n\nexport var useMenu = function useMenu() {\n  _s1();\n\n  var focusManager = useFocusManager();\n\n  var onKeyDown = function onKeyDown(e) {\n    switch (e.key) {\n      case \"ArrowDown\":\n        {\n          e.preventDefault();\n          focusManager.focusNext({\n            wrap: true\n          });\n          break;\n        }\n\n      case \"ArrowUp\":\n        {\n          e.preventDefault();\n          focusManager.focusPrevious({\n            wrap: true\n          });\n          break;\n        }\n    }\n  };\n\n  return {\n    onKeyDown: onKeyDown,\n    accessibilityRole: \"menu\"\n  };\n};\n\n_s1(useMenu, \"TUPiCS0a6rVuat3V2m5berkSuMI=\", false, function () {\n  return [useFocusManager];\n});\n\nexport var useMenuItem = function useMenuItem(param) {\n  var textValue = param.textValue,\n      ref = param.ref;\n  return {\n    accessibilityRole: \"menuitem\",\n    dataSet: {\n      nativebaseMenuItem: textValue\n    },\n    onHoverIn: function onHoverIn() {\n      if (ref.current && Platform.OS === \"web\") ref.current.focus();\n    }\n  };\n};\nexport var useMenuOptionItem = function useMenuOptionItem(param) {\n  var isChecked = param.isChecked,\n      type = param.type;\n  return {\n    accessibilityRole: \"menuitem\" + (Platform.OS === \"web\" ? type : \"\"),\n    accessibilityState: {\n      checked: isChecked\n    },\n    accessibilityChecked: isChecked\n  };\n};\nvar ITEM_ATTR = \"data-nativebase-menu-item\";\n\nvar getValue = function getValue(element) {\n  var _element$getAttribute;\n\n  return (_element$getAttribute = element.getAttribute(ITEM_ATTR)) !== null && _element$getAttribute !== void 0 ? _element$getAttribute : \"\";\n};\n\nexport var useMenuTypeahead = function useMenuTypeahead(props) {\n  return {\n    onKeyDown: function onKeyDown(event) {\n      if (props.onKeyDown) {\n        props.onKeyDown(event);\n      }\n\n      if (event.key.length === 1 && !(event.ctrlKey || event.altKey || event.metaKey)) {\n        var container = event.currentTarget;\n        var values = Array.from(container.querySelectorAll(\"[\".concat(ITEM_ATTR, \"]\"))).map(getValue);\n        var searchKey = event.key;\n        var foundValue = values.find(function (value) {\n          return value.toLowerCase().startsWith(searchKey);\n        });\n        var newItem = container.querySelector(\"[\".concat(ITEM_ATTR, '=\"').concat(foundValue, '\"]'));\n\n        if (newItem) {\n          setTimeout(function () {\n            return newItem.focus();\n          });\n        }\n      }\n    }\n  };\n};\n;\n;\n\n(function () {\n  var _a, _b;\n\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n\n      import.meta.webpackHot.accept();\n\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["D:\\codes\\Next\\pomodoro-dash\\node_modules\\native-base\\lib\\module\\components\\composites\\Menu\\useMenu.js"],"names":["useFocusManager","useId","useMenuTrigger","handleOpen","isOpen","menuTriggerId","event","includes","key","preventDefault","undefined","useMenu","focusManager","onKeyDown","e","focusNext","wrap","focusPrevious","accessibilityRole","useMenuItem","textValue","ref","dataSet","nativebaseMenuItem","onHoverIn","current","Platform","OS","focus","useMenuOptionItem","isChecked","type","accessibilityState","checked","accessibilityChecked","ITEM_ATTR","getValue","element","_element$getAttribute","getAttribute","useMenuTypeahead","props","length","ctrlKey","altKey","metaKey","container","currentTarget","values","Array","from","querySelectorAll","concat","map","searchKey","foundValue","find","value","toLowerCase","startsWith","newItem","querySelector","setTimeout"],"mappings":"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","sourcesContent":["import { useFocusManager } from '@react-aria/focus';\nimport { useId } from '@react-aria/utils';\nimport { Platform } from 'react-native';\nexport const useMenuTrigger = ({\n  handleOpen,\n  isOpen\n}) => {\n  const menuTriggerId = useId();\n  return {\n    'onKeyDownCapture': event => {\n      if ([' ', 'Enter', 'ArrowUp', 'ArrowDown'].includes(event.key)) {\n        event.preventDefault();\n        handleOpen();\n      }\n    },\n    'aria-haspopup': 'menu',\n    'aria-expanded': isOpen ? true : undefined,\n    'nativeID': menuTriggerId\n  };\n};\nexport const useMenu = () => {\n  const focusManager = useFocusManager();\n\n  const onKeyDown = e => {\n    switch (e.key) {\n      case 'ArrowDown':\n        {\n          e.preventDefault();\n          focusManager.focusNext({\n            wrap: true\n          });\n          break;\n        }\n\n      case 'ArrowUp':\n        {\n          e.preventDefault();\n          focusManager.focusPrevious({\n            wrap: true\n          });\n          break;\n        }\n    }\n  };\n\n  return {\n    onKeyDown,\n    accessibilityRole: 'menu'\n  };\n};\nexport const useMenuItem = ({\n  textValue,\n  ref\n}) => {\n  return {\n    accessibilityRole: 'menuitem',\n    dataSet: {\n      nativebaseMenuItem: textValue\n    },\n    onHoverIn: () => {\n      if (ref.current && Platform.OS === 'web') ref.current.focus();\n    }\n  };\n};\nexport const useMenuOptionItem = ({\n  isChecked,\n  type\n}) => {\n  return {\n    accessibilityRole: 'menuitem' + (Platform.OS === 'web' ? type : ''),\n    accessibilityState: {\n      checked: isChecked\n    },\n    accessibilityChecked: isChecked\n  };\n};\nconst ITEM_ATTR = 'data-nativebase-menu-item';\n\nconst getValue = element => {\n  var _element$getAttribute;\n\n  return (_element$getAttribute = element.getAttribute(ITEM_ATTR)) !== null && _element$getAttribute !== void 0 ? _element$getAttribute : '';\n};\n\nexport const useMenuTypeahead = props => {\n  return {\n    onKeyDown(event) {\n      if (props.onKeyDown) {\n        props.onKeyDown(event);\n      }\n\n      if (event.key.length === 1 && !(event.ctrlKey || event.altKey || event.metaKey)) {\n        const container = event.currentTarget;\n        const values = Array.from(container.querySelectorAll(\"[\".concat(ITEM_ATTR, \"]\"))).map(getValue);\n        const searchKey = event.key;\n        const foundValue = values.find(value => value.toLowerCase().startsWith(searchKey));\n        const newItem = container.querySelector(\"[\".concat(ITEM_ATTR, \"=\\\"\").concat(foundValue, \"\\\"]\"));\n\n        if (newItem) {\n          /**\n           * Imperative focus during keydown is risky so we prevent React's batching updates\n           * to avoid potential bugs. See: https://github.com/facebook/react/issues/20332\n           */\n          setTimeout(() => newItem.focus());\n        }\n      }\n    }\n\n  };\n};\n//# sourceMappingURL=useMenu.js.map"]},"metadata":{},"sourceType":"module"}