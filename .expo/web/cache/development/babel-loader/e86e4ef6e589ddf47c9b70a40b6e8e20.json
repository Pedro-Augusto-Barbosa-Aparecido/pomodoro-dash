{"ast":null,"code":"import Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { mode } from \"../tools\";\nvar sizes = {\n  xs: {\n    contentSize: {\n      width: \"60%\",\n      maxWidth: \"280\"\n    }\n  },\n  sm: {\n    contentSize: {\n      width: \"65%\",\n      maxWidth: \"320\"\n    }\n  },\n  md: {\n    contentSize: {\n      width: \"75%\",\n      maxWidth: \"380\"\n    }\n  },\n  lg: {\n    contentSize: {\n      width: \"80%\",\n      maxWidth: \"520\"\n    }\n  },\n  xl: {\n    contentSize: {\n      width: \"90%\",\n      maxWidth: \"580\"\n    }\n  },\n  full: {\n    contentSize: {\n      width: \"100%\"\n    }\n  }\n};\nexport var Modal = {\n  baseStyle: {\n    width: \"100%\",\n    height: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    _web: {\n      pointerEvents: \"box-none\"\n    },\n    _backdropFade: {\n      exitDuration: 150,\n      entryDuration: 200\n    },\n    _slide: {\n      overlay: false,\n      duration: 200\n    },\n    _fade: {\n      exitDuration: 100,\n      entryDuration: 200\n    }\n  },\n  sizes: sizes,\n  defaultProps: {\n    size: \"md\",\n    closeOnOverlayClick: true\n  }\n};\nexport var ModalContent = {\n  baseStyle: function baseStyle(props) {\n    return {\n      bg: mode(\"coolGray.50\", \"gray.700\")(props),\n      _text: {\n        color: mode(\"coolGray.800\", \"warmGray.50\")(props)\n      },\n      shadow: 1,\n      rounded: \"lg\",\n      maxHeight: \"\".concat(Dimensions.get(\"window\").height - 150, \"px\"),\n      overflow: \"hidden\"\n    };\n  }\n};\nexport var ModalCloseButton = {\n  baseStyle: function baseStyle(props) {\n    return {\n      position: \"absolute\",\n      right: \"3\",\n      top: \"3\",\n      zIndex: \"1\",\n      colorScheme: \"coolGray\",\n      p: \"2\",\n      _icon: {\n        size: \"3\",\n        color: mode(\"coolGray.600\", \"coolGray.100\")(props)\n      }\n    };\n  }\n};\nexport var ModalHeader = {\n  baseStyle: function baseStyle(props) {\n    return {\n      py: \"4\",\n      px: \"3\",\n      borderBottomWidth: \"1\",\n      borderColor: mode(\"coolGray.200\", \"gray.600\")(props),\n      _text: {\n        fontSize: \"md\",\n        fontWeight: \"semibold\",\n        color: mode(\"coolGray.800\", \"warmGray.50\")(props),\n        lineHeight: \"sm\"\n      }\n    };\n  }\n};\nexport var ModalBody = {\n  baseStyle: function baseStyle(props) {\n    return {\n      pt: \"2\",\n      p: \"3\",\n      _text: {\n        color: mode(\"coolGray.600\", \"coolGray.300\")(props)\n      }\n    };\n  }\n};\nexport var ModalFooter = {\n  baseStyle: function baseStyle(props) {\n    return {\n      p: \"3\",\n      bg: mode(\"coolGray.100\", \"gray.600\")(props),\n      flexDirection: \"row\",\n      justifyContent: \"flex-end\",\n      flexWrap: \"wrap\"\n    };\n  }\n};\nexport var ModalOverlay = {\n  baseStyle: {\n    position: \"absolute\",\n    left: \"0\",\n    top: \"0\",\n    opacity: \"50\",\n    right: \"0\",\n    bottom: \"0\"\n  }\n};\n;\n;\n\n(function () {\n  var _a, _b;\n\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n\n      import.meta.webpackHot.accept();\n\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["D:\\codes\\Next\\pomodoro-dash\\node_modules\\native-base\\lib\\module\\theme\\v33x-theme\\components\\modal.js"],"names":["mode","sizes","xs","contentSize","width","maxWidth","sm","md","lg","xl","full","Modal","baseStyle","height","justifyContent","alignItems","_web","pointerEvents","_backdropFade","exitDuration","entryDuration","_slide","overlay","duration","_fade","defaultProps","size","closeOnOverlayClick","ModalContent","props","bg","_text","color","shadow","rounded","maxHeight","concat","Dimensions","get","overflow","ModalCloseButton","position","right","top","zIndex","colorScheme","p","_icon","ModalHeader","py","px","borderBottomWidth","borderColor","fontSize","fontWeight","lineHeight","ModalBody","pt","ModalFooter","flexDirection","flexWrap","ModalOverlay","left","opacity","bottom"],"mappings":"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","sourcesContent":["import { Dimensions } from 'react-native';\nimport { mode } from '../tools';\nconst sizes = {\n  xs: {\n    contentSize: {\n      width: '60%',\n      maxWidth: '280'\n    }\n  },\n  sm: {\n    contentSize: {\n      width: '65%',\n      maxWidth: '320'\n    }\n  },\n  md: {\n    contentSize: {\n      width: '75%',\n      maxWidth: '380'\n    }\n  },\n  lg: {\n    contentSize: {\n      width: '80%',\n      maxWidth: '520'\n    }\n  },\n  xl: {\n    contentSize: {\n      width: '90%',\n      maxWidth: '580'\n    }\n  },\n  full: {\n    contentSize: {\n      width: '100%'\n    }\n  }\n};\nexport const Modal = {\n  baseStyle: {\n    width: '100%',\n    height: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    _web: {\n      pointerEvents: 'box-none'\n    },\n    _backdropFade: {\n      exitDuration: 150,\n      entryDuration: 200\n    },\n    _slide: {\n      overlay: false,\n      duration: 200\n    },\n    _fade: {\n      exitDuration: 100,\n      entryDuration: 200\n    }\n  },\n  sizes,\n  defaultProps: {\n    size: 'md',\n    closeOnOverlayClick: true\n  }\n};\nexport const ModalContent = {\n  baseStyle: props => {\n    return {\n      bg: mode('coolGray.50', 'gray.700')(props),\n      _text: {\n        color: mode('coolGray.800', 'warmGray.50')(props)\n      },\n      shadow: 1,\n      rounded: 'lg',\n      maxHeight: \"\".concat(Dimensions.get('window').height - 150, \"px\"),\n      overflow: 'hidden'\n    };\n  }\n};\nexport const ModalCloseButton = {\n  baseStyle: props => {\n    return {\n      position: 'absolute',\n      right: '3',\n      top: '3',\n      zIndex: '1',\n      colorScheme: 'coolGray',\n      p: '2',\n      _icon: {\n        size: '3',\n        color: mode('coolGray.600', 'coolGray.100')(props)\n      }\n    };\n  }\n};\nexport const ModalHeader = {\n  baseStyle: props => {\n    return {\n      py: '4',\n      px: '3',\n      borderBottomWidth: '1',\n      borderColor: mode('coolGray.200', 'gray.600')(props),\n      _text: {\n        fontSize: 'md',\n        fontWeight: 'semibold',\n        color: mode('coolGray.800', 'warmGray.50')(props),\n        lineHeight: 'sm'\n      }\n    };\n  }\n};\nexport const ModalBody = {\n  baseStyle: props => {\n    return {\n      pt: '2',\n      p: '3',\n      _text: {\n        color: mode('coolGray.600', 'coolGray.300')(props)\n      }\n    };\n  }\n};\nexport const ModalFooter = {\n  baseStyle: props => {\n    return {\n      p: '3',\n      bg: mode('coolGray.100', 'gray.600')(props),\n      flexDirection: 'row',\n      justifyContent: 'flex-end',\n      flexWrap: 'wrap'\n    };\n  }\n};\nexport const ModalOverlay = {\n  baseStyle: {\n    position: 'absolute',\n    left: '0',\n    top: '0',\n    opacity: '50',\n    right: '0',\n    bottom: '0'\n  }\n};\n//# sourceMappingURL=modal.js.map"]},"metadata":{},"sourceType":"module"}