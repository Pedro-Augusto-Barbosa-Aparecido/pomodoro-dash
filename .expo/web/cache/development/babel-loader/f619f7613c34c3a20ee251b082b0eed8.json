{"ast":null,"code":"import _object_spread from \"@swc/helpers/src/_object_spread.mjs\";\nimport _object_spread_props from \"@swc/helpers/src/_object_spread_props.mjs\";\nimport _object_without_properties from \"@swc/helpers/src/_object_without_properties.mjs\";\nimport _sliced_to_array from \"@swc/helpers/src/_sliced_to_array.mjs\";\n\nvar _s = $RefreshSig$(),\n    _s1 = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport { useId } from \"@react-native-aria/utils\";\nimport omit from \"lodash.omit\";\nimport { ariaAttr } from \"../../../utils\";\nexport var FormControlContext = React.createContext({});\nexport function useFormControlProvider(props) {\n  _s();\n\n  var idProp = props.nativeID,\n      isRequired = props.isRequired,\n      isInvalid = props.isInvalid,\n      isDisabled = props.isDisabled,\n      isReadOnly = props.isReadOnly,\n      htmlProps = _object_without_properties(props, [\"nativeID\", \"isRequired\", \"isInvalid\", \"isDisabled\", \"isReadOnly\"]);\n\n  var id = useId();\n  var nativeID = idProp || \"field-\".concat(id);\n  var labelId = \"\".concat(nativeID, \"-label\");\n  var feedbackId = \"\".concat(nativeID, \"-feedback\");\n  var helpTextId = \"\".concat(nativeID, \"-helptext\");\n\n  var ref = _sliced_to_array(React.useState(false), 2),\n      hasFeedbackText = ref[0],\n      setHasFeedbackText = ref[1];\n\n  var ref1 = _sliced_to_array(React.useState(false), 2),\n      hasHelpText = ref1[0],\n      setHasHelpText = ref1[1];\n\n  var context = {\n    isRequired: !!isRequired,\n    isInvalid: !!isInvalid,\n    isReadOnly: !!isReadOnly,\n    isDisabled: !!isDisabled,\n    hasFeedbackText: hasFeedbackText,\n    setHasFeedbackText: setHasFeedbackText,\n    hasHelpText: hasHelpText,\n    setHasHelpText: setHasHelpText,\n    nativeID: nativeID,\n    labelId: labelId,\n    feedbackId: feedbackId,\n    helpTextId: helpTextId,\n    htmlProps: htmlProps\n  };\n  return context;\n}\n\n_s(useFormControlProvider, \"Faj03bG/mEHyNBw2U+5dAfQ4JYM=\", false, function () {\n  return [useId];\n});\n\nexport function useFormControl(props) {\n  _s1();\n\n  var _props$nativeID;\n\n  var field = useFormControlContext();\n  var describedBy = [];\n  if (field !== null && field !== void 0 && field.hasFeedbackText) describedBy.push(field === null || field === void 0 ? void 0 : field.feedbackId);\n  if (field !== null && field !== void 0 && field.hasHelpText) describedBy.push(field === null || field === void 0 ? void 0 : field.helpTextId);\n  var ariaDescribedBy = describedBy.join(\" \");\n  var cleanProps = omit(props, [\"isInvalid\", \"isDisabled\", \"isReadOnly\", \"isRequired\"]);\n  return _object_spread_props(_object_spread({}, cleanProps), {\n    nativeID: (_props$nativeID = props.nativeID) !== null && _props$nativeID !== void 0 ? _props$nativeID : field === null || field === void 0 ? void 0 : field.nativeID,\n    disabled: props.isDisabled || (field === null || field === void 0 ? void 0 : field.isDisabled),\n    readOnly: props.isReadOnly || (field === null || field === void 0 ? void 0 : field.isReadOnly),\n    required: props.isRequired || (field === null || field === void 0 ? void 0 : field.isRequired),\n    accessibilityInvalid: ariaAttr(props.isInvalid || (field === null || field === void 0 ? void 0 : field.isInvalid)),\n    accessibilityRequired: ariaAttr(props.isRequired || (field === null || field === void 0 ? void 0 : field.isRequired)),\n    accessibilityReadOnly: ariaAttr(props.isReadOnly || (field === null || field === void 0 ? void 0 : field.isReadOnly)),\n    accessibilityDescribedBy: ariaDescribedBy || undefined\n  });\n}\n\n_s1(useFormControl, \"d7R3LELfJokCE5uGWhlmp9RX40o=\", false, function () {\n  return [useFormControlContext];\n});\n\nexport var useFormControlContext = function useFormControlContext() {\n  _s2();\n\n  return React.useContext(FormControlContext);\n};\n\n_s2(useFormControlContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\n;\n;\n\n(function () {\n  var _a, _b;\n\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n\n      import.meta.webpackHot.accept();\n\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["D:\\codes\\Next\\pomodoro-dash\\node_modules\\native-base\\lib\\module\\components\\composites\\FormControl\\useFormControl.js"],"names":["React","useId","omit","ariaAttr","FormControlContext","createContext","useFormControlProvider","props","nativeID","idProp","isRequired","isInvalid","isDisabled","isReadOnly","htmlProps","id","concat","labelId","feedbackId","helpTextId","hasFeedbackText","setHasFeedbackText","useState","hasHelpText","setHasHelpText","context","useFormControl","_props$nativeID","field","useFormControlContext","describedBy","push","ariaDescribedBy","join","cleanProps","disabled","readOnly","required","accessibilityInvalid","accessibilityRequired","accessibilityReadOnly","accessibilityDescribedBy","undefined","useContext"],"mappings":"AAAA,OAAA,cAAA,MAAA,qCAAA;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,0BAAtB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAO,IAAMC,kBAAkB,GAAgBJ,KAAK,CAACK,aAANL,CAAoB,EAApBA,CAAxC;AACP,OAAO,SAASM,sBAAT,CAAgCC,KAAhC,EAAuC;;;EAC5C,IACYE,MAAM,GAMdF,KAAK,CANPC,QADF;EAAA,IAEEE,UAAU,GAKRH,KAAK,CALPG,UAFF;EAAA,IAGEC,SAAS,GAIPJ,KAAK,CAJPI,SAHF;EAAA,IAIEC,UAAU,GAGRL,KAAK,CAHPK,UAJF;EAAA,IAKEC,UAAU,GAERN,KAAK,CAFPM,UALF;EAAA,IAMKC,SAAS,GAAA,0BAAA,CACVP,KADU,EACL,CANPC,UAMO,EALPE,YAKO,EAJPC,WAIO,EAHPC,YAGO,EAFPC,YAEO,CADK,CANd;;EAQA,IAAME,EAAE,GAAGd,KAAK,EAAhB;EAEA,IAAMO,QAAQ,GAAGC,MAAM,IAAI,SAASO,MAAT,CAAgBD,EAAhB,CAA3B;EACA,IAAME,OAAO,GAAG,GAAGD,MAAH,CAAUR,QAAV,EAAoB,QAApB,CAAhB;EACA,IAAMU,UAAU,GAAG,GAAGF,MAAH,CAAUR,QAAV,EAAoB,WAApB,CAAnB;EACA,IAAMW,UAAU,GAAG,GAAGH,MAAH,CAAUR,QAAV,EAAoB,WAApB,CAAnB;;EAMA,IAA8CR,GAAqB,GAAA,gBAAA,CAArBA,KAAK,CAACsB,QAANtB,CAAe,KAAfA,CAAqB,EAAA,CAAA,CAAnE;EAAA,IAAOoB,eAAe,GAAwBpB,GAAqB,CAA7C,CAA6C,CAAnE;EAAA,IAAwBqB,kBAAkB,GAAIrB,GAAqB,CAAzB,CAAyB,CAAnE;;EAMA,IAAsCA,IAAqB,GAAA,gBAAA,CAArBA,KAAK,CAACsB,QAANtB,CAAe,KAAfA,CAAqB,EAAA,CAAA,CAA3D;EAAA,IAAOuB,WAAW,GAAoBvB,IAAqB,CAAzC,CAAyC,CAA3D;EAAA,IAAoBwB,cAAc,GAAIxB,IAAqB,CAAzB,CAAyB,CAA3D;;EACA,IAAMyB,OAAO,GAAG;IACdf,UAAU,EAAE,CAAC,CAACA,UADA;IAEdC,SAAS,EAAE,CAAC,CAACA,SAFC;IAGdE,UAAU,EAAE,CAAC,CAACA,UAHA;IAIdD,UAAU,EAAE,CAAC,CAACA,UAJA;IAKdQ,eAAe,EAAfA,eALc;IAMdC,kBAAkB,EAAlBA,kBANc;IAOdE,WAAW,EAAXA,WAPc;IAQdC,cAAc,EAAdA,cARc;IASdhB,QAAQ,EAARA,QATc;IAUdS,OAAO,EAAPA,OAVc;IAWdC,UAAU,EAAVA,UAXc;IAYdC,UAAU,EAAVA,UAZc;IAadL,SAAS,EAATA;EAbc,CAAhB;EAeA,OAAOW,OAAP;AACD;;GA3CenB,sB,EAAsB,8B,EAAA,K,EAAA,YAAA;UASzBL,K;;;AA2Cb,OAAO,SAASyB,cAAT,CAAwBnB,KAAxB,EAA+B;;;EACpC,IAAIoB,eAAJ;;EAEA,IAAMC,KAAK,GAAGC,qBAAqB,EAAnC;EACA,IAAMC,WAAW,GAAG,EAApB;EAEA,IAAIF,KAAK,KAAK,IAAVA,IAAkBA,KAAK,KAAK,KAAK,CAAjCA,IAAsCA,KAAK,CAACR,eAAhD,EAAiEU,WAAW,CAACC,IAAZD,CAAiBF,KAAK,KAAK,IAAVA,IAAkBA,KAAK,KAAK,KAAK,CAAjCA,GAAqC,KAAK,CAA1CA,GAA8CA,KAAK,CAACV,UAArEY;EACjE,IAAIF,KAAK,KAAK,IAAVA,IAAkBA,KAAK,KAAK,KAAK,CAAjCA,IAAsCA,KAAK,CAACL,WAAhD,EAA6DO,WAAW,CAACC,IAAZD,CAAiBF,KAAK,KAAK,IAAVA,IAAkBA,KAAK,KAAK,KAAK,CAAjCA,GAAqC,KAAK,CAA1CA,GAA8CA,KAAK,CAACT,UAArEW;EAC7D,IAAME,eAAe,GAAGF,WAAW,CAACG,IAAZH,CAAiB,GAAjBA,CAAxB;EACA,IAAMI,UAAU,GAAGhC,IAAI,CAACK,KAAD,EAAQ,CAAC,WAAD,EAAc,YAAd,EAA4B,YAA5B,EAA0C,YAA1C,CAAR,CAAvB;EACA,OAAO,oBAAA,CAAA,cAAA,CAAA,EAAA,EAAK2B,UAAL,CAAA,EAAe;IACpB1B,QAAQ,EAAE,CAACmB,eAAe,GAAGpB,KAAK,CAACC,QAAzB,MAAuC,IAAvC,IAA+CmB,eAAe,KAAK,KAAK,CAAxE,GAA4EA,eAA5E,GAA8FC,KAAK,KAAK,IAAVA,IAAkBA,KAAK,KAAK,KAAK,CAAjCA,GAAqC,KAAK,CAA1CA,GAA8CA,KAAK,CAACpB,QADxI;IAEpB2B,QAAQ,EAAE5B,KAAK,CAACK,UAANL,KAAqBqB,KAAK,KAAK,IAAVA,IAAkBA,KAAK,KAAK,KAAK,CAAjCA,GAAqC,KAAK,CAA1CA,GAA8CA,KAAK,CAAChB,UAAzEL,CAFU;IAGpB6B,QAAQ,EAAE7B,KAAK,CAACM,UAANN,KAAqBqB,KAAK,KAAK,IAAVA,IAAkBA,KAAK,KAAK,KAAK,CAAjCA,GAAqC,KAAK,CAA1CA,GAA8CA,KAAK,CAACf,UAAzEN,CAHU;IAIpB8B,QAAQ,EAAE9B,KAAK,CAACG,UAANH,KAAqBqB,KAAK,KAAK,IAAVA,IAAkBA,KAAK,KAAK,KAAK,CAAjCA,GAAqC,KAAK,CAA1CA,GAA8CA,KAAK,CAAClB,UAAzEH,CAJU;IAKpB+B,oBAAoB,EAAEnC,QAAQ,CAACI,KAAK,CAACI,SAANJ,KAAoBqB,KAAK,KAAK,IAAVA,IAAkBA,KAAK,KAAK,KAAK,CAAjCA,GAAqC,KAAK,CAA1CA,GAA8CA,KAAK,CAACjB,SAAxEJ,CAAD,CALV;IAMpBgC,qBAAqB,EAAEpC,QAAQ,CAACI,KAAK,CAACG,UAANH,KAAqBqB,KAAK,KAAK,IAAVA,IAAkBA,KAAK,KAAK,KAAK,CAAjCA,GAAqC,KAAK,CAA1CA,GAA8CA,KAAK,CAAClB,UAAzEH,CAAD,CANX;IAOpBiC,qBAAqB,EAAErC,QAAQ,CAACI,KAAK,CAACM,UAANN,KAAqBqB,KAAK,KAAK,IAAVA,IAAkBA,KAAK,KAAK,KAAK,CAAjCA,GAAqC,KAAK,CAA1CA,GAA8CA,KAAK,CAACf,UAAzEN,CAAD,CAPX;IAQpBkC,wBAAwB,EAAET,eAAe,IAAIU;EARzB,CAAf,CAAP;AAUD;;IApBehB,c,EAAc,8B,EAAA,K,EAAA,YAAA;UAGdG,qB;;;AAkBhB,OAAO,IAAMA,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAM;;;EACzC,OAAO7B,KAAK,CAAC2C,UAAN3C,CAAiBI,kBAAjBJ,CAAP;AACD,CAFM;;IAAM6B,qB,EAAqB,8B","sourcesContent":["import React from 'react';\nimport { useId } from '@react-native-aria/utils';\nimport omit from 'lodash.omit';\nimport { ariaAttr } from '../../../utils';\nexport const FormControlContext = /*#__PURE__*/React.createContext({});\nexport function useFormControlProvider(props) {\n  const {\n    nativeID: idProp,\n    isRequired,\n    isInvalid,\n    isDisabled,\n    isReadOnly,\n    ...htmlProps\n  } = props;\n  const id = useId(); // Generate all the required ids\n\n  const nativeID = idProp || \"field-\".concat(id);\n  const labelId = \"\".concat(nativeID, \"-label\");\n  const feedbackId = \"\".concat(nativeID, \"-feedback\");\n  const helpTextId = \"\".concat(nativeID, \"-helptext\");\n  /**\n   * Track whether the `FormErrorMessage` has been rendered.\n   * We use this to append its id the the `aria-describedby` of the `input`.\n   */\n\n  const [hasFeedbackText, setHasFeedbackText] = React.useState(false);\n  /**\n   * Track whether the `FormHelperText` has been rendered.\n   * We use this to append its id the the `aria-describedby` of the `input`.\n   */\n\n  const [hasHelpText, setHasHelpText] = React.useState(false);\n  const context = {\n    isRequired: !!isRequired,\n    isInvalid: !!isInvalid,\n    isReadOnly: !!isReadOnly,\n    isDisabled: !!isDisabled,\n    hasFeedbackText,\n    setHasFeedbackText,\n    hasHelpText,\n    setHasHelpText,\n    nativeID,\n    labelId,\n    feedbackId,\n    helpTextId,\n    htmlProps\n  };\n  return context;\n}\n/**\n * React hook that provides the props that should be spread on to\n * input fields (`input`, `select`, `textarea`, etc.).\n *\n * It provides a convenient way to control a form fields, validation\n * and helper text.\n */\n\nexport function useFormControl(props) {\n  var _props$nativeID;\n\n  const field = useFormControlContext();\n  const describedBy = []; // Error message must be described first in all scenarios.\n\n  if (field !== null && field !== void 0 && field.hasFeedbackText) describedBy.push(field === null || field === void 0 ? void 0 : field.feedbackId);\n  if (field !== null && field !== void 0 && field.hasHelpText) describedBy.push(field === null || field === void 0 ? void 0 : field.helpTextId);\n  const ariaDescribedBy = describedBy.join(' ');\n  const cleanProps = omit(props, ['isInvalid', 'isDisabled', 'isReadOnly', 'isRequired']);\n  return { ...cleanProps,\n    nativeID: (_props$nativeID = props.nativeID) !== null && _props$nativeID !== void 0 ? _props$nativeID : field === null || field === void 0 ? void 0 : field.nativeID,\n    disabled: props.isDisabled || (field === null || field === void 0 ? void 0 : field.isDisabled),\n    readOnly: props.isReadOnly || (field === null || field === void 0 ? void 0 : field.isReadOnly),\n    required: props.isRequired || (field === null || field === void 0 ? void 0 : field.isRequired),\n    accessibilityInvalid: ariaAttr(props.isInvalid || (field === null || field === void 0 ? void 0 : field.isInvalid)),\n    accessibilityRequired: ariaAttr(props.isRequired || (field === null || field === void 0 ? void 0 : field.isRequired)),\n    accessibilityReadOnly: ariaAttr(props.isReadOnly || (field === null || field === void 0 ? void 0 : field.isReadOnly)),\n    accessibilityDescribedBy: ariaDescribedBy || undefined\n  };\n}\nexport const useFormControlContext = () => {\n  return React.useContext(FormControlContext);\n};\n//# sourceMappingURL=useFormControl.js.map"]},"metadata":{},"sourceType":"module"}