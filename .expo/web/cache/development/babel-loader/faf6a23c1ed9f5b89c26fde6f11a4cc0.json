{"ast":null,"code":"\"use strict\";\n\nimport _instanceof from \"@swc/helpers/src/_instanceof.mjs\";\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport AnimatedValue from \"../nodes/AnimatedValue\";\nimport AnimatedValueXY from \"../nodes/AnimatedValueXY\";\nimport AnimatedInterpolation from \"../nodes/AnimatedInterpolation\";\nimport Animation from \"./Animation\";\nimport SpringConfig from \"../SpringConfig\";\nimport invariant from \"fbjs/lib/invariant\";\nimport { shouldUseNativeDriver } from \"../NativeAnimatedHelper\";\n\nvar SpringAnimation = function (_Animation) {\n  var SpringAnimation = function SpringAnimation(config) {\n    var _config$overshootClam, _config$restDisplacem, _config$restSpeedThre, _config$velocity, _config$velocity2, _config$delay, _config$isInteraction, _config$iterations;\n\n    var _this;\n\n    _this = _Animation.call(this) || this;\n    _this._overshootClamping = (_config$overshootClam = config.overshootClamping) !== null && _config$overshootClam !== void 0 ? _config$overshootClam : false;\n    _this._restDisplacementThreshold = (_config$restDisplacem = config.restDisplacementThreshold) !== null && _config$restDisplacem !== void 0 ? _config$restDisplacem : 0.001;\n    _this._restSpeedThreshold = (_config$restSpeedThre = config.restSpeedThreshold) !== null && _config$restSpeedThre !== void 0 ? _config$restSpeedThre : 0.001;\n    _this._initialVelocity = (_config$velocity = config.velocity) !== null && _config$velocity !== void 0 ? _config$velocity : 0;\n    _this._lastVelocity = (_config$velocity2 = config.velocity) !== null && _config$velocity2 !== void 0 ? _config$velocity2 : 0;\n    _this._toValue = config.toValue;\n    _this._delay = (_config$delay = config.delay) !== null && _config$delay !== void 0 ? _config$delay : 0;\n    _this._useNativeDriver = shouldUseNativeDriver(config);\n    _this.__isInteraction = (_config$isInteraction = config.isInteraction) !== null && _config$isInteraction !== void 0 ? _config$isInteraction : !_this._useNativeDriver;\n    _this.__iterations = (_config$iterations = config.iterations) !== null && _config$iterations !== void 0 ? _config$iterations : 1;\n\n    if (config.stiffness !== undefined || config.damping !== undefined || config.mass !== undefined) {\n      var _config$stiffness, _config$damping, _config$mass;\n\n      invariant(config.bounciness === undefined && config.speed === undefined && config.tension === undefined && config.friction === undefined, \"You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one\");\n      _this._stiffness = (_config$stiffness = config.stiffness) !== null && _config$stiffness !== void 0 ? _config$stiffness : 100;\n      _this._damping = (_config$damping = config.damping) !== null && _config$damping !== void 0 ? _config$damping : 10;\n      _this._mass = (_config$mass = config.mass) !== null && _config$mass !== void 0 ? _config$mass : 1;\n    } else if (config.bounciness !== undefined || config.speed !== undefined) {\n      var _config$bounciness, _config$speed;\n\n      invariant(config.tension === undefined && config.friction === undefined && config.stiffness === undefined && config.damping === undefined && config.mass === undefined, \"You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one\");\n      var springConfig = SpringConfig.fromBouncinessAndSpeed((_config$bounciness = config.bounciness) !== null && _config$bounciness !== void 0 ? _config$bounciness : 8, (_config$speed = config.speed) !== null && _config$speed !== void 0 ? _config$speed : 12);\n      _this._stiffness = springConfig.stiffness;\n      _this._damping = springConfig.damping;\n      _this._mass = 1;\n    } else {\n      var _config$tension, _config$friction;\n\n      var _springConfig = SpringConfig.fromOrigamiTensionAndFriction((_config$tension = config.tension) !== null && _config$tension !== void 0 ? _config$tension : 40, (_config$friction = config.friction) !== null && _config$friction !== void 0 ? _config$friction : 7);\n\n      _this._stiffness = _springConfig.stiffness;\n      _this._damping = _springConfig.damping;\n      _this._mass = 1;\n    }\n\n    invariant(_this._stiffness > 0, \"Stiffness value must be greater than 0\");\n    invariant(_this._damping > 0, \"Damping value must be greater than 0\");\n    invariant(_this._mass > 0, \"Mass value must be greater than 0\");\n    return _this;\n  };\n\n  _inheritsLoose(SpringAnimation, _Animation);\n\n  var _proto = SpringAnimation.prototype;\n\n  _proto.__getNativeAnimationConfig = function __getNativeAnimationConfig() {\n    var _this$_initialVelocit;\n\n    return {\n      type: \"spring\",\n      overshootClamping: this._overshootClamping,\n      restDisplacementThreshold: this._restDisplacementThreshold,\n      restSpeedThreshold: this._restSpeedThreshold,\n      stiffness: this._stiffness,\n      damping: this._damping,\n      mass: this._mass,\n      initialVelocity: (_this$_initialVelocit = this._initialVelocity) !== null && _this$_initialVelocit !== void 0 ? _this$_initialVelocit : this._lastVelocity,\n      toValue: this._toValue,\n      iterations: this.__iterations\n    };\n  };\n\n  _proto.start = function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {\n    var _this2 = this;\n\n    this.__active = true;\n    this._startPosition = fromValue;\n    this._lastPosition = this._startPosition;\n    this._onUpdate = onUpdate;\n    this.__onEnd = onEnd;\n    this._lastTime = Date.now();\n    this._frameTime = 0.0;\n\n    if (_instanceof(previousAnimation, SpringAnimation)) {\n      var internalState = previousAnimation.getInternalState();\n      this._lastPosition = internalState.lastPosition;\n      this._lastVelocity = internalState.lastVelocity;\n      this._initialVelocity = this._lastVelocity;\n      this._lastTime = internalState.lastTime;\n    }\n\n    var start = function start() {\n      if (_this2._useNativeDriver) {\n        _this2.__startNativeAnimation(animatedValue);\n      } else {\n        _this2.onUpdate();\n      }\n    };\n\n    if (this._delay) {\n      this._timeout = setTimeout(start, this._delay);\n    } else {\n      start();\n    }\n  };\n\n  _proto.getInternalState = function getInternalState() {\n    return {\n      lastPosition: this._lastPosition,\n      lastVelocity: this._lastVelocity,\n      lastTime: this._lastTime\n    };\n  };\n\n  _proto.onUpdate = function onUpdate() {\n    var MAX_STEPS = 64;\n    var now = Date.now();\n\n    if (now > this._lastTime + MAX_STEPS) {\n      now = this._lastTime + MAX_STEPS;\n    }\n\n    var deltaTime = (now - this._lastTime) / 1000;\n    this._frameTime += deltaTime;\n    var c = this._damping;\n    var m = this._mass;\n    var k = this._stiffness;\n    var v0 = -this._initialVelocity;\n    var zeta = c / (2 * Math.sqrt(k * m));\n    var omega0 = Math.sqrt(k / m);\n    var omega1 = omega0 * Math.sqrt(1.0 - zeta * zeta);\n    var x0 = this._toValue - this._startPosition;\n    var position = 0.0;\n    var velocity = 0.0;\n    var t = this._frameTime;\n\n    if (zeta < 1) {\n      var envelope = Math.exp(-zeta * omega0 * t);\n      position = this._toValue - envelope * ((v0 + zeta * omega0 * x0) / omega1 * Math.sin(omega1 * t) + x0 * Math.cos(omega1 * t));\n      velocity = zeta * omega0 * envelope * (Math.sin(omega1 * t) * (v0 + zeta * omega0 * x0) / omega1 + x0 * Math.cos(omega1 * t)) - envelope * (Math.cos(omega1 * t) * (v0 + zeta * omega0 * x0) - omega1 * x0 * Math.sin(omega1 * t));\n    } else {\n      var _envelope = Math.exp(-omega0 * t);\n\n      position = this._toValue - _envelope * (x0 + (v0 + omega0 * x0) * t);\n      velocity = _envelope * (v0 * (t * omega0 - 1) + t * x0 * (omega0 * omega0));\n    }\n\n    this._lastTime = now;\n    this._lastPosition = position;\n    this._lastVelocity = velocity;\n\n    this._onUpdate(position);\n\n    if (!this.__active) {\n      return;\n    }\n\n    var isOvershooting = false;\n\n    if (this._overshootClamping && this._stiffness !== 0) {\n      if (this._startPosition < this._toValue) {\n        isOvershooting = position > this._toValue;\n      } else {\n        isOvershooting = position < this._toValue;\n      }\n    }\n\n    var isVelocity = Math.abs(velocity) <= this._restSpeedThreshold;\n\n    var isDisplacement = true;\n\n    if (this._stiffness !== 0) {\n      isDisplacement = Math.abs(this._toValue - position) <= this._restDisplacementThreshold;\n    }\n\n    if (isOvershooting || isVelocity && isDisplacement) {\n      if (this._stiffness !== 0) {\n        this._lastPosition = this._toValue;\n        this._lastVelocity = 0;\n\n        this._onUpdate(this._toValue);\n      }\n\n      this.__debouncedOnEnd({\n        finished: true\n      });\n\n      return;\n    }\n\n    this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));\n  };\n\n  _proto.stop = function stop() {\n    _Animation.prototype.stop.call(this);\n\n    this.__active = false;\n    clearTimeout(this._timeout);\n    global.cancelAnimationFrame(this._animationFrame);\n\n    this.__debouncedOnEnd({\n      finished: false\n    });\n  };\n\n  return SpringAnimation;\n}(Animation);\n\nexport default SpringAnimation;\n;\n;\n\n(function () {\n  var _a, _b;\n\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n\n      import.meta.webpackHot.accept();\n\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["D:\\codes\\Next\\pomodoro-dash\\node_modules\\react-native-web\\dist\\vendor\\react-native\\Animated\\animations\\SpringAnimation.js"],"names":["_inheritsLoose","subClass","superClass","prototype","Object","create","constructor","_setPrototypeOf","o","p","setPrototypeOf","__proto__","AnimatedValue","AnimatedValueXY","AnimatedInterpolation","Animation","SpringConfig","invariant","shouldUseNativeDriver","SpringAnimation","_Animation","config","_config$overshootClam","_config$restDisplacem","_config$restSpeedThre","_config$velocity","_config$velocity2","_config$delay","_config$isInteraction","_config$iterations","_this","call","_overshootClamping","overshootClamping","_restDisplacementThreshold","restDisplacementThreshold","_restSpeedThreshold","restSpeedThreshold","_initialVelocity","velocity","_lastVelocity","_toValue","toValue","_delay","delay","_useNativeDriver","__isInteraction","isInteraction","__iterations","iterations","stiffness","undefined","damping","mass","_config$stiffness","_config$damping","_config$mass","bounciness","speed","tension","friction","_stiffness","_damping","_mass","_config$bounciness","_config$speed","springConfig","fromBouncinessAndSpeed","_config$tension","_config$friction","_springConfig","fromOrigamiTensionAndFriction","_proto","__getNativeAnimationConfig","_this$_initialVelocit","type","initialVelocity","start","fromValue","onUpdate","onEnd","previousAnimation","animatedValue","_this2","__active","_startPosition","_lastPosition","_onUpdate","__onEnd","_lastTime","Date","now","_frameTime","internalState","getInternalState","lastPosition","lastVelocity","lastTime","__startNativeAnimation","_timeout","setTimeout","MAX_STEPS","deltaTime","c","m","k","v0","zeta","Math","sqrt","omega0","omega1","x0","position","t","envelope","exp","sin","cos","_envelope","isOvershooting","isVelocity","abs","isDisplacement","__debouncedOnEnd","finished","_animationFrame","requestAnimationFrame","bind","stop","clearTimeout","global","cancelAnimationFrame"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport AnimatedValue from '../nodes/AnimatedValue';\nimport AnimatedValueXY from '../nodes/AnimatedValueXY';\nimport AnimatedInterpolation from '../nodes/AnimatedInterpolation';\nimport Animation from './Animation';\nimport SpringConfig from '../SpringConfig';\nimport invariant from 'fbjs/lib/invariant';\nimport { shouldUseNativeDriver } from '../NativeAnimatedHelper';\n\nvar SpringAnimation = /*#__PURE__*/function (_Animation) {\n  _inheritsLoose(SpringAnimation, _Animation);\n\n  function SpringAnimation(config) {\n    var _config$overshootClam, _config$restDisplacem, _config$restSpeedThre, _config$velocity, _config$velocity2, _config$delay, _config$isInteraction, _config$iterations;\n\n    var _this;\n\n    _this = _Animation.call(this) || this;\n    _this._overshootClamping = (_config$overshootClam = config.overshootClamping) !== null && _config$overshootClam !== void 0 ? _config$overshootClam : false;\n    _this._restDisplacementThreshold = (_config$restDisplacem = config.restDisplacementThreshold) !== null && _config$restDisplacem !== void 0 ? _config$restDisplacem : 0.001;\n    _this._restSpeedThreshold = (_config$restSpeedThre = config.restSpeedThreshold) !== null && _config$restSpeedThre !== void 0 ? _config$restSpeedThre : 0.001;\n    _this._initialVelocity = (_config$velocity = config.velocity) !== null && _config$velocity !== void 0 ? _config$velocity : 0;\n    _this._lastVelocity = (_config$velocity2 = config.velocity) !== null && _config$velocity2 !== void 0 ? _config$velocity2 : 0;\n    _this._toValue = config.toValue;\n    _this._delay = (_config$delay = config.delay) !== null && _config$delay !== void 0 ? _config$delay : 0;\n    _this._useNativeDriver = shouldUseNativeDriver(config);\n    _this.__isInteraction = (_config$isInteraction = config.isInteraction) !== null && _config$isInteraction !== void 0 ? _config$isInteraction : !_this._useNativeDriver;\n    _this.__iterations = (_config$iterations = config.iterations) !== null && _config$iterations !== void 0 ? _config$iterations : 1;\n\n    if (config.stiffness !== undefined || config.damping !== undefined || config.mass !== undefined) {\n      var _config$stiffness, _config$damping, _config$mass;\n\n      invariant(config.bounciness === undefined && config.speed === undefined && config.tension === undefined && config.friction === undefined, 'You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one');\n      _this._stiffness = (_config$stiffness = config.stiffness) !== null && _config$stiffness !== void 0 ? _config$stiffness : 100;\n      _this._damping = (_config$damping = config.damping) !== null && _config$damping !== void 0 ? _config$damping : 10;\n      _this._mass = (_config$mass = config.mass) !== null && _config$mass !== void 0 ? _config$mass : 1;\n    } else if (config.bounciness !== undefined || config.speed !== undefined) {\n      var _config$bounciness, _config$speed;\n\n      // Convert the origami bounciness/speed values to stiffness/damping\n      // We assume mass is 1.\n      invariant(config.tension === undefined && config.friction === undefined && config.stiffness === undefined && config.damping === undefined && config.mass === undefined, 'You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one');\n      var springConfig = SpringConfig.fromBouncinessAndSpeed((_config$bounciness = config.bounciness) !== null && _config$bounciness !== void 0 ? _config$bounciness : 8, (_config$speed = config.speed) !== null && _config$speed !== void 0 ? _config$speed : 12);\n      _this._stiffness = springConfig.stiffness;\n      _this._damping = springConfig.damping;\n      _this._mass = 1;\n    } else {\n      var _config$tension, _config$friction;\n\n      // Convert the origami tension/friction values to stiffness/damping\n      // We assume mass is 1.\n      var _springConfig = SpringConfig.fromOrigamiTensionAndFriction((_config$tension = config.tension) !== null && _config$tension !== void 0 ? _config$tension : 40, (_config$friction = config.friction) !== null && _config$friction !== void 0 ? _config$friction : 7);\n\n      _this._stiffness = _springConfig.stiffness;\n      _this._damping = _springConfig.damping;\n      _this._mass = 1;\n    }\n\n    invariant(_this._stiffness > 0, 'Stiffness value must be greater than 0');\n    invariant(_this._damping > 0, 'Damping value must be greater than 0');\n    invariant(_this._mass > 0, 'Mass value must be greater than 0');\n    return _this;\n  }\n\n  var _proto = SpringAnimation.prototype;\n\n  _proto.__getNativeAnimationConfig = function __getNativeAnimationConfig() {\n    var _this$_initialVelocit;\n\n    return {\n      type: 'spring',\n      overshootClamping: this._overshootClamping,\n      restDisplacementThreshold: this._restDisplacementThreshold,\n      restSpeedThreshold: this._restSpeedThreshold,\n      stiffness: this._stiffness,\n      damping: this._damping,\n      mass: this._mass,\n      initialVelocity: (_this$_initialVelocit = this._initialVelocity) !== null && _this$_initialVelocit !== void 0 ? _this$_initialVelocit : this._lastVelocity,\n      toValue: this._toValue,\n      iterations: this.__iterations\n    };\n  };\n\n  _proto.start = function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {\n    var _this2 = this;\n\n    this.__active = true;\n    this._startPosition = fromValue;\n    this._lastPosition = this._startPosition;\n    this._onUpdate = onUpdate;\n    this.__onEnd = onEnd;\n    this._lastTime = Date.now();\n    this._frameTime = 0.0;\n\n    if (previousAnimation instanceof SpringAnimation) {\n      var internalState = previousAnimation.getInternalState();\n      this._lastPosition = internalState.lastPosition;\n      this._lastVelocity = internalState.lastVelocity; // Set the initial velocity to the last velocity\n\n      this._initialVelocity = this._lastVelocity;\n      this._lastTime = internalState.lastTime;\n    }\n\n    var start = function start() {\n      if (_this2._useNativeDriver) {\n        _this2.__startNativeAnimation(animatedValue);\n      } else {\n        _this2.onUpdate();\n      }\n    }; //  If this._delay is more than 0, we start after the timeout.\n\n\n    if (this._delay) {\n      this._timeout = setTimeout(start, this._delay);\n    } else {\n      start();\n    }\n  };\n\n  _proto.getInternalState = function getInternalState() {\n    return {\n      lastPosition: this._lastPosition,\n      lastVelocity: this._lastVelocity,\n      lastTime: this._lastTime\n    };\n  }\n  /**\n   * This spring model is based off of a damped harmonic oscillator\n   * (https://en.wikipedia.org/wiki/Harmonic_oscillator#Damped_harmonic_oscillator).\n   *\n   * We use the closed form of the second order differential equation:\n   *\n   * x'' + (2ζ⍵_0)x' + ⍵^2x = 0\n   *\n   * where\n   *    ⍵_0 = √(k / m) (undamped angular frequency of the oscillator),\n   *    ζ = c / 2√mk (damping ratio),\n   *    c = damping constant\n   *    k = stiffness\n   *    m = mass\n   *\n   * The derivation of the closed form is described in detail here:\n   * http://planetmath.org/sites/default/files/texpdf/39745.pdf\n   *\n   * This algorithm happens to match the algorithm used by CASpringAnimation,\n   * a QuartzCore (iOS) API that creates spring animations.\n   */\n  ;\n\n  _proto.onUpdate = function onUpdate() {\n    // If for some reason we lost a lot of frames (e.g. process large payload or\n    // stopped in the debugger), we only advance by 4 frames worth of\n    // computation and will continue on the next frame. It's better to have it\n    // running at faster speed than jumping to the end.\n    var MAX_STEPS = 64;\n    var now = Date.now();\n\n    if (now > this._lastTime + MAX_STEPS) {\n      now = this._lastTime + MAX_STEPS;\n    }\n\n    var deltaTime = (now - this._lastTime) / 1000;\n    this._frameTime += deltaTime;\n    var c = this._damping;\n    var m = this._mass;\n    var k = this._stiffness;\n    var v0 = -this._initialVelocity;\n    var zeta = c / (2 * Math.sqrt(k * m)); // damping ratio\n\n    var omega0 = Math.sqrt(k / m); // undamped angular frequency of the oscillator (rad/ms)\n\n    var omega1 = omega0 * Math.sqrt(1.0 - zeta * zeta); // exponential decay\n\n    var x0 = this._toValue - this._startPosition; // calculate the oscillation from x0 = 1 to x = 0\n\n    var position = 0.0;\n    var velocity = 0.0;\n    var t = this._frameTime;\n\n    if (zeta < 1) {\n      // Under damped\n      var envelope = Math.exp(-zeta * omega0 * t);\n      position = this._toValue - envelope * ((v0 + zeta * omega0 * x0) / omega1 * Math.sin(omega1 * t) + x0 * Math.cos(omega1 * t)); // This looks crazy -- it's actually just the derivative of the\n      // oscillation function\n\n      velocity = zeta * omega0 * envelope * (Math.sin(omega1 * t) * (v0 + zeta * omega0 * x0) / omega1 + x0 * Math.cos(omega1 * t)) - envelope * (Math.cos(omega1 * t) * (v0 + zeta * omega0 * x0) - omega1 * x0 * Math.sin(omega1 * t));\n    } else {\n      // Critically damped\n      var _envelope = Math.exp(-omega0 * t);\n\n      position = this._toValue - _envelope * (x0 + (v0 + omega0 * x0) * t);\n      velocity = _envelope * (v0 * (t * omega0 - 1) + t * x0 * (omega0 * omega0));\n    }\n\n    this._lastTime = now;\n    this._lastPosition = position;\n    this._lastVelocity = velocity;\n\n    this._onUpdate(position);\n\n    if (!this.__active) {\n      // a listener might have stopped us in _onUpdate\n      return;\n    } // Conditions for stopping the spring animation\n\n\n    var isOvershooting = false;\n\n    if (this._overshootClamping && this._stiffness !== 0) {\n      if (this._startPosition < this._toValue) {\n        isOvershooting = position > this._toValue;\n      } else {\n        isOvershooting = position < this._toValue;\n      }\n    }\n\n    var isVelocity = Math.abs(velocity) <= this._restSpeedThreshold;\n\n    var isDisplacement = true;\n\n    if (this._stiffness !== 0) {\n      isDisplacement = Math.abs(this._toValue - position) <= this._restDisplacementThreshold;\n    }\n\n    if (isOvershooting || isVelocity && isDisplacement) {\n      if (this._stiffness !== 0) {\n        // Ensure that we end up with a round value\n        this._lastPosition = this._toValue;\n        this._lastVelocity = 0;\n\n        this._onUpdate(this._toValue);\n      }\n\n      this.__debouncedOnEnd({\n        finished: true\n      });\n\n      return;\n    }\n\n    this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));\n  };\n\n  _proto.stop = function stop() {\n    _Animation.prototype.stop.call(this);\n\n    this.__active = false;\n    clearTimeout(this._timeout);\n    global.cancelAnimationFrame(this._animationFrame);\n\n    this.__debouncedOnEnd({\n      finished: false\n    });\n  };\n\n  return SpringAnimation;\n}(Animation);\n\nexport default SpringAnimation;"]},"metadata":{},"sourceType":"module"}